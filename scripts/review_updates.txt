File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/external_auth/templates/accent_engine/external_auth/form/form_mobile.html
Please review for update

{% extends "layout.html" %}

{% set type = 'mobile' %}

{% if form_mode == 'add' %}
  {% set url_action = url_for('.ExternalAuthView:post') %}
  {% set submit_value = _('Add') %}
  {% set breadcrumb = { 'name': _('Add Mobile external auth'), 'icon': 'external-link' } %}
{% else %}
  {% set url_action = url_for('.ExternalAuthView:put', id=resource.uuid) %}
  {% set submit_value = _('Edit') %}
  {% set breadcrumb = { 'name': 'mobile', 'link': url_for('.ExternalAuthView:get', id=resource.uuid), 'icon': 'external-link' } %}
{% endif %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [breadcrumb]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box(_('External auth'), type, 'external-link') %}
      {% call build_form(action=url_for('.ExternalAuthView:post'), enctype="multipart/form-data") %}
        {% call add_default_fields(form=form, submit_value=submit_value) %}
          {{ render_field(form.type) }}
          {{ render_field(form.editing) }}

          <fieldset>
            <legend>Android</legend>
            {{ render_field(form.mobile_config.fcm_api_key) }}
            {{ render_field(form.mobile_config.fcm_sender_id) }}
          </fieldset>

          <fieldset>
            <legend>iOS</legend>
            {{ render_field(form.mobile_config.ios_apn_certificate) }}
            {{ render_field(form.mobile_config.ios_apn_private) }}
            {{ render_field(form.mobile_config.is_sandbox) }}
          </fieldset>
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/external_auth/templates/accent_engine/external_auth/form/form_microsoft.html
Please review for update

{% extends "layout.html" %}

{% set type = 'microsoft' %}

{% if form_mode == 'add' %}
  {% set url_action = url_for('.ExternalAuthView:post') %}
  {% set submit_value = _('Add') %}
  {% set breadcrumb = { 'name': _('Add Microsoft external auth'), 'icon': 'external-link' } %}
{% else %}
  {% set url_action = url_for('.ExternalAuthView:put', id=resource.uuid) %}
  {% set submit_value = _('Edit') %}
  {% set breadcrumb = { 'name': resource.type, 'link': url_for('.ExternalAuthView:get', id=resource.uuid), 'icon': 'external-link' } %}
{% endif %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [breadcrumb]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box(_('External auth'), type, 'external-link') %}
      {% call build_form(action=url_for('.ExternalAuthView:post')) %}
        {% call add_default_fields(form=form, submit_value=submit_value) %}
          {{ render_field(form.type) }}
          {{ render_field(form.editing) }}
          {{ render_field(form.microsoft_config.client_id) }}
          {{ render_field(form.microsoft_config.client_secret) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/external_auth/templates/accent_engine/external_auth/form/form_google.html
Please review for update

{% extends "layout.html" %}

{% set type = 'google' %}

{% if form_mode == 'add' %}
  {% set url_action = url_for('.ExternalAuthView:post') %}
  {% set submit_value = _('Add') %}
  {% set breadcrumb = { 'name': _('Add Google external auth'), 'icon': 'external-link' } %}
{% else %}
  {% set url_action = url_for('.ExternalAuthView:put', id=resource.uuid) %}
  {% set submit_value = _('Edit') %}
  {% set breadcrumb = { 'name': resource.type, 'link': url_for('.ExternalAuthView:get', id=resource.uuid), 'icon': 'external-link' } %}
{% endif %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [breadcrumb]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box(_('External auth'), type, 'external-link') %}
      {% call build_form(action=url_for('.ExternalAuthView:post')) %}
        {% call add_default_fields(form=form, submit_value=submit_value) %}
          {{ render_field(form.type) }}
          {{ render_field(form.editing) }}
          {{ render_field(form.google_config.client_id) }}
          {{ render_field(form.google_config.client_secret) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/external_auth/templates/accent_engine/external_auth/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs(current_breadcrumbs + [
{ 'name': _('External Auth'), 'link': url_for('.ExternalAuthView:index'), 'icon': 'external-link' }
]) }}
{% endblock %}

{% block content %}
<section class="content">
  {% call build_list_containers(_('External Auth'), 'external-link') %}
  {% call build_list_table() %}
  {% call build_list_table_headers(get=url_for('.ExternalAuthView:get', id=''),
  delete=url_for('.ExternalAuthView:delete', id='')) %}
  <th>{{ _('Type') }}</th>
  {% endcall %}
  {% call(external_auth) build_list_table_rows(resource_list['items']) %}
  <td>{{ external_auth.type }}</td>
  {% endcall %}
  {% endcall %}
  {% endcall %}

  {% if type_list | length %}
  {% call build_hidden_add_containers(_('Add External Authentication')) %}
  {% for type in type_list %}
  <a class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-block btn-default"
    href="{{ url_for('.ExternalAuthView:new', type=type) }}">
    {{ type }}
  </a>
  {% endfor %}
  {% endcall %}
  {% endif %}
</section>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/skill/templates/accent_engine/skill/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.SkillView:get', id=resource.uuid), 'icon': 'trophy' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
        {% call build_tabs_navigation() %}
          {{ add_tab_navigation_header(_('Skill'), resource.name, 'trophy') }}
          {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {% endcall %}

      {% call build_form(action=url_for('.SkillView:put', id=resource.id)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.category) }}
              {{ render_field(form.name) }}
              {{ render_field(form.description) }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/skill/templates/accent_engine/skill/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Skills'), 'link': url_for('.SkillView:index'), 'icon': 'trophy' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Skill'), 'trophy') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.SkillView:get', id=''), delete=url_for('.SkillView:delete', id='')) %}
          <th>{{ _('Category') }}</th>
          <th>{{ _('Name') }}</th>
        {% endcall %}
        {% call(skill) build_list_table_rows(resource_list['items']) %}
          <td>{{ skill.category }}</td>
          <td>{{ skill.name }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Skill')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.category) }}
          {{ render_field(form.name) }}
          {{ render_field(form.description) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/cdr/templates/accent_engine/cdr/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Cdr'), 'link': url_for('.CdrView:index'), 'icon': 'newspaper-o' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Cdr'), 'newspaper-o', size='12') %}
      {% call build_list_table(list=url_for('.CdrView:list_json')) %}
        {% call build_list_table_headers(actions_column=false) %}
          <th>{{ _('Date') }}</th>
          <th>{{ _('Source') }}</th>
          <th>{{ _('Source name') }}</th>
          <th>{{ _('Destination') }}</th>
          <th>{{ _('Destination name') }}</th>
          <th>{{ _('Duration') }}</th>
          <th>{{ _('Answered') }}</th>
        {% endcall %}
        {% call(cdr) build_list_table_rows(resource_list['items']) %}
          <td>{{ cdr.start }}</td>
          <td>{{ cdr.source_extension }}</td>
          <td>{{ cdr.source_name }}</td>
          <td>{{ cdr.destination_extension }}</td>
          <td>{{ cdr.destination_name }}</td>
          <td>{{ cdr.duration }}</td>
          <td>{{ cdr.answered }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/cdr.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/cdr/static/accent_engine/js/cdr.js
Please review for update

$(document).ready(function () {
  let table_config = {
    buttons: [
      'copy', 'csv', 'excel', 'pdf', 'print'
    ],
    columns: [
      {data: 'start'},
      {data: 'source_extension'},
      {data: 'source_name'},
      {data: 'destination_extension'},
      {data: 'destination_name'},
      {data: 'duration'},
      {data: 'answered'},
    ]
  };

  let Table = create_table_serverside(table_config, actions_column=false, init_buttons=false, init_events=false);
});

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/call_permission/templates/accent_engine/call_permission/add.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Call Permissions'), 'link': url_for('.CallPermissionView:index'), 'icon': 'ban' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}

      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Call Permissions'), '', 'ban') }}
        {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {{ add_tab_navigation_item('extensions', _('Extensions')) }}
        {{ add_tab_navigation_item('users', _('Users')) }}
        {{ add_tab_navigation_item('groups', _('Groups')) }}
        {{ add_tab_navigation_item('outcalls', _('Outcalls')) }}
      {% endcall %}

      {% call build_form(action=url_for('.CallPermissionView:post')) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Add')) %}
              {{ render_field(form.name) }}
              {{ render_field(form.password, autocomplete="off") }}
              {{ render_field(form.mode) }}
              {{ render_field(form.description) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('extensions') %}
            {% call add_default_fields(form=form, submit_value=_('Add')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Extensions') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.extensions.append_entry() %}
                    {{ _build_extension_entry(form.extensions.pop_entry(), template=True) }}

                    {% for extension in form.extensions %}
                      {{ _build_extension_entry(extension) }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

                {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('users') %}
            {% call add_default_fields(form=form, submit_value=_('Add')) %}
              {{ render_field(form.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('groups') %}
            {% call add_default_fields(form=form, submit_value=_('Add')) %}
              {{ render_field(form.group_ids, data_listing_href=url_for(listing_urls['group'])) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('outcalls') %}
            {% call add_default_fields(form=form, submit_value=_('Add')) %}
              {{ render_field(form.outcall_ids, data_listing_href=url_for(listing_urls['outcall'])) }}
            {% endcall %}
          {% endcall %}

        {% endcall %}

      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}


{% macro _build_extension_entry(extension, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(extension.exten, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/call_permission/templates/accent_engine/call_permission/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.CallPermissionView:get', id=resource.id), 'icon': 'ban' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}

      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Call Permissions'), resource.name, 'ban') }}
        {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {{ add_tab_navigation_item('extensions', _('Extensions')) }}
        {{ add_tab_navigation_item('users', _('Users')) }}
        {{ add_tab_navigation_item('groups', _('Groups')) }}
        {{ add_tab_navigation_item('outcalls', _('Outcalls')) }}
      {% endcall %}

      {% call build_form(action=url_for('.CallPermissionView:put', id=resource.id)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.name) }}
              {{ render_field(form.password) }}
              {{ render_field(form.mode) }}
              {{ render_field(form.description) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('extensions') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Extensions') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.extensions.append_entry() %}
                    {{ _build_extension_entry(form.extensions.pop_entry(), template=True) }}

                    {% for extension in form.extensions %}
                      {{ _build_extension_entry(extension) }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

                {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('users') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('groups') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.group_ids, data_listing_href=url_for(listing_urls['group'])) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('outcalls') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.outcall_ids, data_listing_href=url_for(listing_urls['outcall'])) }}
            {% endcall %}
          {% endcall %}

        {% endcall %}

      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}


{% macro _build_extension_entry(extension, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(extension.exten, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/call_permission/templates/accent_engine/call_permission/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': _('Call Permissions'), 'link': url_for('.CallPermissionView:index'), 'icon': 'ban' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Call Permissions'), 'ban') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(
            add=url_for('.CallPermissionView:new'),
            get=url_for('.CallPermissionView:get', id=''),
            delete=url_for('.CallPermissionView:delete', id='')) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Password') }}</th>
          <th>{{ _('Mode') }}</th>
        {% endcall %}
        {% call(callpermission) build_list_table_rows(resource_list['items']) %}
          <td>{{ callpermission.name }}</td>
          <td>{{ callpermission.password if callpermission.password else '-' }}</td>
          <td>{{ mode_map[callpermission.mode] }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/parking_lot/templates/accent_engine/parking_lot/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.ParkingLotView:get', id=resource.id), 'icon': 'automobile' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box(_('Parking Lot'), resource.name, 'automobile') %}
      {% call build_form(action=url_for('.ParkingLotView:put', id=resource.id)) %}
        {% call add_default_fields(form=form, submit_value=_('Update')) %}
                {{ form.csrf_token }}
                {{ render_field(form.name) }}
                {{ render_field(form.extensions[0].exten,
                                data_allow_custom_values=True,
                                divclass='col-sm-2',
                                inputclass='ui-helper-clearfix',
                                class_='parking-lot-exten') }}
                {{ render_field(form.extensions[0].context,
                                with_label=False,
                                divclass='col-sm-4',
                                class_='parking-lot-context',
                                placeholder=_(_('Choose Context')),
                                data_listing_href=url_for(listing_urls['context_by_type'], type_='internal')) }}
                {{ render_field(form.slots_start) }}
                {{ render_field(form.slots_end) }}
                {{ render_field(form.music_on_hold,
                                data_listing_href=url_for(listing_urls['moh']),
                                data_allow_clear='true',
                                data_placeholder='Choose Music on Hold') }}
                {{ render_field(form.timeout) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/parking_lot/templates/accent_engine/parking_lot/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Parking Lots'), 'link': url_for('.ParkingLotView:index'), 'icon': 'automobile' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Parking Lots'), 'automobile') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.ParkingLotView:get', id=''), delete=url_for('.ParkingLotView:delete', id='')) %}
           <th>{{ _('Name') }}</th>
           <th>{{ _('Extension') }}</th>
           <th>{{ _('Slot start') }}</th>
           <th>{{ _('Slot end') }}</th>
        {% endcall %}
        {% call(parking_lot) build_list_table_rows(resource_list['items']) %}
          <td>{{ parking_lot.name }}</td>
          <td>
            {% for extension in parking_lot.extensions %}
              <strong>{{ _('internal') }}:</strong> {{ extension.exten }}
            {% endfor %}
            {% if not parking_lot.extensions %}
              -
            {% endif %}
          </td>
          <td>{{ parking_lot.slots_start }}</td>
          <td>{{ parking_lot.slots_end }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Parking Lot')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.extensions[0].exten,
                          data_allow_custom_values=True,
                          divclass='col-sm-2',
                          inputclass='ui-helper-clearfix',
                          class_='parking-lot-exten') }}
          {{ render_field(form.extensions[0].context,
                          with_label=False,
                          divclass='col-sm-4',
                          class_='parking-lot-context',
                          placeholder=_(_('Choose Context')),
                          data_listing_href=url_for(listing_urls['context_by_type'], type_='internal')) }}
          {{ render_field(form.slots_start) }}
          {{ render_field(form.slots_end) }}
          {{ render_field(form.music_on_hold, data_listing_href=url_for(listing_urls['moh'])) }}
          {{ render_field(form.timeout) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/line/templates/accent_engine/line/protocol_custom.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('Lines'), '', 'exchange', [_('List')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

    {% call build_form_box(_('Line'), '', 'exchange') %}
      {% call build_form(action=url_for('.LineView:post')) %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.endpoint_custom['interface']) }}
          {{ render_field(form.endpoint_custom['interface_suffix']) }}
          {{ render_field(form.context,
                          data_allow_clear='true',
                          class_='line-context',
                          placeholder='Choose Context',
                          data_listing_href=url_for(listing_urls['context'])) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}

  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/line/templates/accent_engine/line/protocol_sip.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('Lines'), '', 'exchange', [_('List')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Line'), '', 'exchange') }}
        {{ add_tab_navigation_item('line', _('Line'), active=True) }}
        {{ add_tab_navigation_item('aor_section_options', _('AOR')) }}
        {{ add_tab_navigation_item('auth_section_options', _('Authentication')) }}
        {{ add_tab_navigation_item('endpoint_section_options', _('Endpoint')) }}
        {{ add_tab_navigation_item('identify_section_options', _('Identify')) }}
        {{ add_tab_navigation_item('registration_section_options', _('Registration')) }}
        {{ add_tab_navigation_item('registration_outbound_auth_section_options', _('Registration Outbound Auth')) }}
        {{ add_tab_navigation_item('outbound_auth_section_options', _('Outbound Auth')) }}
      {% endcall %}

      {% call build_form(action=url_for('.LineView:post')) %}
        {% call build_tabs_content() %}
          {% call build_tab_content_item('line', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Add')) %}
              {{ render_field(form.endpoint_sip['label']) }}
              {{ render_field(form.endpoint_sip.transport.uuid,
                              data_listing_href=url_for(listing_urls['transport']),
                              data_allow_clear='true',
                              data_placeholder=_('Choose Transport')) }}
              {{ render_field(form.endpoint_sip.template_uuids,
                              data_listing_href=url_for(listing_urls['sip_template']),
                              data_allow_clear='true',
                              data_placeholder=_('Choose Templates')) }}
              {{ render_field(form.endpoint_sip.templates, with_label=False) }}
              {{ render_field(form.context,
                              data_allow_clear='true',
                              class_='line-context',
                              placeholder=_('Choose Context'),
                              data_listing_href=url_for(listing_urls['context'])) }}
            {% endcall %}
          {% endcall %}

          {{ _generate_section('aor_section_options', form.endpoint_sip.aor_section_options, 'aor') }}
          {{ _generate_section('auth_section_options', form.endpoint_sip.auth_section_options, 'auth') }}
          {{ _generate_section('endpoint_section_options', form.endpoint_sip.endpoint_section_options, 'endpoint') }}
          {{ _generate_section('identify_section_options', form.endpoint_sip.identify_section_options) }}
          {{ _generate_section('registration_section_options', form.endpoint_sip.registration_section_options) }}
          {{ _generate_section('registration_outbound_auth_section_options', form.endpoint_sip.registration_outbound_auth_section_options, 'auth') }}
          {{ _generate_section('outbound_auth_section_options', form.endpoint_sip.outbound_auth_section_options, 'auth') }}

        {% endcall %}
      {% endcall %}
    {% endcall %}

  {% endcall %}
{% endblock %}

{% macro _generate_section(content_item_name, form_options, section=None) %}
  {% call build_tab_content_item(content_item_name) %}
    {% call add_default_fields(form=form, submit_value=_('Add')) %}

      {{ build_add_row_entry_header() }}
      {% call build_table() %}

        {% call build_table_headers() %}
          <th>{{  _('Option Key') }}</th>
          <th>{{  _('Option Value') }}</th>
          <th style="width: 21px"></th>
        {% endcall %}

        {% call build_table_body(class_='dynamic-table') %}
          {% do form_options.append_entry() %}
          {{ _build_option_entry(form_options.pop_entry(), section, template=True) }}

          {% for option in form_options %}
            {{ _build_option_entry(option, section) }}
          {% endfor %}
        {% endcall %}

      {% endcall %}
      {{ build_add_row_entry_header() }}

    {% endcall %}
  {% endcall %}
{% endmacro %}

{% macro _build_option_entry(option, section=None, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
  {% if section %}
    <td>{{ render_field(
      option.option_key,
      with_label=False,
      inputclass='ui-helper-clearfix',
      data_listing_href=url_for(listing_urls['pjsip_doc'], section=section),
    ) }}</td>
  {% else %}
    <td>{{ render_field(option.option_key, with_label=False, inputclass='ui-helper-clearfix') }}</td>
  {% endif %}
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/line/templates/accent_engine/line/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {% if form.protocol.data == 'sip' %}
    {{ build_breadcrumbs(current_breadcrumbs + [
      { 'name': resource.endpoint_sip['label'], 'link': url_for('.LineView:get', id=resource.id), 'icon': 'exchange' }
    ]) }}
  {% elif form.protocol.data == 'sccp' %}
    {{ build_breadcrumbs(current_breadcrumbs + [
      { 'name': resource.name, 'link': url_for('.LineView:get', id=resource.id), 'icon': 'exchange' }
    ]) }}
  {% endif %}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

    {% if form.protocol.data == 'sip' %}

      {% call build_form_tabs_box() %}
        {% call build_tabs_navigation() %}
          {{ add_tab_navigation_header(_('Line'), form.endpoint_sip.label.data, 'exchange') }}
          {{ add_tab_navigation_item('line', _('Line'), active=True) }}
          {{ add_tab_navigation_item('aor_section_options', _('AOR')) }}
          {{ add_tab_navigation_item('auth_section_options', _('Authentication')) }}
          {{ add_tab_navigation_item('endpoint_section_options', _('Endpoint')) }}
          {{ add_tab_navigation_item('identify_section_options', _('Identify')) }}
          {{ add_tab_navigation_item('registration_section_options', _('Registration')) }}
          {{ add_tab_navigation_item('registration_outbound_auth_section_options', _('Registration Outbound Auth')) }}
          {{ add_tab_navigation_item('outbound_auth_section_options', _('Outbound Auth')) }}
        {% endcall %}

        {% call build_form(action=url_for('.LineView:put', id=resource.id)) %}
          {% call build_tabs_content() %}

            {% call build_tab_content_item('line', active=True) %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}
                {{ render_field(form.endpoint_sip.uuid) }}
                {{ render_field(form.endpoint_sip['label']) }}
                {{ render_field(form.endpoint_sip['name']) }}
                {{ render_field(form.endpoint_sip.transport.uuid,
                                data_listing_href=url_for(listing_urls['transport']),
                                data_allow_clear='true',
                                data_placeholder=_('Choose Transport')) }}
                {{ render_field(form.endpoint_sip.template_uuids,
                                data_listing_href=url_for(listing_urls['sip_template']),
                                data_allow_clear='true',
                                data_placeholder=_('Choose Templates')) }}
                {{ render_field(form.endpoint_sip.templates, with_label=False) }}
                {{ render_field(form.context,
                                data_allow_clear='true',
                                class_='line-context',
                                placeholder=_('Choose Context'),
                                data_listing_href=url_for(listing_urls['context'])) }}
              {% endcall %}
            {% endcall %}

            {{ _generate_section('aor_section_options', form.endpoint_sip.aor_section_options, 'aor') }}
            {{ _generate_section('auth_section_options', form.endpoint_sip.auth_section_options, 'auth') }}
            {{ _generate_section('endpoint_section_options', form.endpoint_sip.endpoint_section_options, 'endpoint') }}
            {{ _generate_section('identify_section_options', form.endpoint_sip.identify_section_options) }}
            {{ _generate_section('registration_section_options', form.endpoint_sip.registration_section_options) }}
            {{ _generate_section('registration_outbound_auth_section_options', form.endpoint_sip.registration_outbound_auth_section_options, 'auth') }}
            {{ _generate_section('outbound_auth_section_options', form.endpoint_sip.outbound_auth_section_options, 'auth') }}

          {% endcall %}
        {% endcall %}
      {% endcall %}

    {% elif form.protocol.data == 'sccp' %}

      {% call build_form_box(_('Line'), form.endpoint_sccp['id'], 'server') %}
        {% call build_form(action=url_for('.LineView:put', id=resource.id)) %}
          {% call add_default_fields(form=form, submit_value=_('Update')) %}
            {{ render_field(form.endpoint_sccp['id']) }}
            {{ render_field(form.context,
                            data_allow_clear='true',
                            class_='line-context',
                            placeholder=_('Choose Context'),
                            data_listing_href=url_for(listing_urls['context'])) }}
            {{ build_add_row_entry_header() }}
            {% call build_table() %}

              {% call build_table_headers() %}
                <th>{{  _('Option Key') }}</th>
                <th>{{  _('Option Value') }}</th>
                <th style="width: 21px"></th>
              {% endcall %}

              {% call build_table_body(class_='dynamic-table') %}
                {% do form.endpoint_sccp.options.append_entry() %}
                {{ _build_sccp_option_entry(form.endpoint_sccp.options.pop_entry(), template=True) }}

                {% for option in form.endpoint_sccp.options %}
                  {{ _build_sccp_option_entry(option) }}
                {% endfor %}
              {% endcall %}

            {% endcall %}
          {% endcall %}
        {% endcall %}
      {% endcall %}

    {% elif form.protocol.data == 'custom' %}

      {% call build_form_box(_('Line'), form.endpoint_custom.interface.data, 'server') %}
        {% call build_form(action=url_for('.LineView:put', id=resource.id)) %}
          {% call add_default_fields(form=form, submit_value=_('Update')) %}
            {{ render_field(form.endpoint_custom['id']) }}
            {{ render_field(form.endpoint_custom['interface']) }}
            {{ render_field(form.endpoint_custom['interface_suffix']) }}
            {{ render_field(form.context,
                            data_allow_clear='true',
                            class_='line-context',
                            placeholder=_('Choose Context'),
                            data_listing_href=url_for(listing_urls['context'])) }}
          {% endcall %}
        {% endcall %}
      {% endcall %}

    {% endif %}

  {% endcall %}
{% endblock %}

{% macro _generate_section(content_item_name, form_options, section=None) %}
  {% call build_tab_content_item(content_item_name) %}
    {% call add_default_fields(form=form, submit_value=_('Update')) %}

      {{ build_add_row_entry_header() }}
      {% call build_table() %}

        {% call build_table_headers() %}
          <th>{{  _('Option Key') }}</th>
          <th>{{  _('Option Value') }}</th>
          <th style="width: 21px"></th>
        {% endcall %}

        {% call build_table_body(class_='dynamic-table') %}
          {% do form_options.append_entry() %}
          {{ _build_pjsip_option_entry(form_options.pop_entry(), section, template=True) }}

          {% for option in form_options %}
            {{ _build_pjsip_option_entry(option, section) }}
          {% endfor %}
        {% endcall %}

      {% endcall %}
      {{ build_add_row_entry_header() }}

    {% endcall %}
  {% endcall %}
{% endmacro %}

{% macro _build_pjsip_option_entry(option, section=None, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
  {% if section %}
    <td>{{ render_field(
      option.option_key,
      with_label=False,
      inputclass='ui-helper-clearfix',
      data_listing_href=url_for(listing_urls['pjsip_doc'], section=section),
    ) }}</td>
  {% else %}
    <td>{{ render_field(option.option_key, with_label=False, inputclass='ui-helper-clearfix') }}</td>
  {% endif %}
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

{% macro _build_sccp_option_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(
      option.option_key,
      with_label=False,
      inputclass='ui-helper-clearfix',
      data_listing_href=url_for(listing_urls['sccp_doc']),
    ) }}</td>
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/line/templates/accent_engine/line/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs([
{ 'name': _('Line'), 'link': url_for('.LineView:index'), 'icon': 'exchange' }
]) }}
{% endblock %}

{% block content %}
<section class="content">
  {% call build_list_containers(_('Lines'), 'exchange') %}
  {% call build_list_table() %}
  {% call build_list_table_headers(get=url_for('.LineView:get', id=''), delete=url_for('.LineView:delete', id='')) %}
  <th width="75">{{ _('Protocol') }}</th>
  <th>{{ _('Name') }}</th>
  <th>{{ _('Provisioning Extension') }}</th>
  <th>{{ _('Caller Id Name') }}</th>
  <th>{{ _('Caller Id Number') }}</th>
  {% endcall %}
  {% call(line) build_list_table_rows(resource_list['items']) %}
  <td>
    {% if line.endpoint_sip %}
    {{ _('SIP') }}
    {% elif line.endpoint_sccp %}
    {{ _('SCCP') }}
    {% elif line.endpoint_custom %}
    {{ _('CUSTOM') }}
    {% else %}
    -
    {% endif %}
  </td>
  <td>
    {% if line.endpoint_sip %}
    {{ line.endpoint_sip.label or '-' }}
    {% elif line.endpoint_sccp %}
    {{ line.name }}
    {% elif line.endpoint_custom %}
    {{ line.endpoint_custom.interface }}
    {% endif %}
  </td>
  <td>{{ line.provisioning_extension }}</td>
  <td>{{ line.caller_id_name }}</td>
  <td>{{ line.caller_id_num }}</td>
  {% endcall %}
  {% endcall %}
  {% endcall %}


  {% call build_hidden_add_containers(_('Choose your protocol')) %}
  <button type="button"
    class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-block btn-default"
    onclick="location.href='{{ url_for('.LineView:new', protocol='sip') }}'">{{ _('SIP') }}</button>
  <button type="button"
    class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-block btn-default"
    onclick="location.href='{{ url_for('.LineView:new', protocol='sccp') }}'">{{ _('SCCP') }}</button>
  <button type="button"
    class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-block btn-default"
    onclick="location.href='{{ url_for('.LineView:new',
              protocol='custom') }}'">{{ _('CUSTOM') }}</button>
  {% endcall %}

</section>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/line/templates/accent_engine/line/protocol_sccp.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('Lines'), '', 'exchange', [_('List')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

    {% call build_form_box(_('Line'), '', 'exchange') %}
      {% call build_form(action=url_for('.LineView:post')) %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.context,
            data_allow_clear='true',
            class_='line-context',
            placeholder='Choose Context',
            data_listing_href=url_for(listing_urls['context'])) }}
          {{ build_add_row_entry_header() }}
          {% call build_table() %}

            {% call build_table_headers() %}
              <th>{{  _('Option Key') }}</th>
              <th>{{  _('Option Value') }}</th>
              <th style="width: 21px"></th>
            {% endcall %}

            {% call build_table_body(class_='dynamic-table') %}
              {% do form.endpoint_sccp.options.append_entry() %}
              {{ _build_option_entry(form.endpoint_sccp.options.pop_entry(), template=True) }}

              {% for option in form.endpoint_sccp.options %}
                {{ _build_option_entry(option) }}
              {% endfor %}
            {% endcall %}

          {% endcall %}
        {% endcall %}
      {% endcall %}
    {% endcall %}

  {% endcall %}
{% endblock %}

{% macro _build_option_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(
      option.option_key,
      with_label=False,
      inputclass='ui-helper-clearfix',
      data_listing_href=url_for(listing_urls['sccp_doc']),
    ) }}</td>
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/authentication/templates/authentication/login.html
Please review for update

{% extends "authentication/layout.html" %}
{% from "macro_render_field.html" import render_field %}

{% block content %}
<div class="flex min-h-full flex-col justify-center py-12 sm:px-6 lg:px-8">
  <div class="sm:mx-auto sm:w-full sm:max-w-md">
    <img class="mx-auto h-20 w-auto" src="{{ url_for('login.static', filename='img/accent-logo.svg') }}" alt="Accent">
    <h2 class="mt-6 text-center text-2xl/9 font-bold tracking-tight text-gray-900">Sign in to your account</h2>
  </div>

  <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-[480px]">
    <div class="bg-white px-6 py-12 shadow sm:rounded-lg sm:px-12">
      <form class="space-y-6" action="" method="POST" name="login_user_form" data-toggle="validator">
        <!-- Update formating of flashed message -->
        <div>
          {% include "flashed_messages.html" %}
        </div>
        {{ form.hidden_tag() }}
        <div>
          <label for="username" class="block text-sm/6 font-medium text-gray-900">Username</label>
          <div class="mt-2">
            {{ render_field(form.username, divclass='form-group', with_label=False, placeholder=_("Username"),
            class_="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1
            -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2
            focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6") }}
            <!-- <input type="email" name="email" id="email" autocomplete="email" required class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6"> -->
          </div>
        </div>

        <div>
          <label for="password" class="block text-sm/6 font-medium text-gray-900">Password</label>
          <div class="mt-2">
            {{ render_field(form.password, divclass='form-group', with_label=False, placeholder=_("Password"),
            data_toggle='password', class_="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline
            outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2
            focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6") }}
            <!-- <input type="password" name="password" id="password" autocomplete="current-password" required class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6"> -->
          </div>
        </div>

        <div class="flex items-center justify-between">
          <div class="flex gap-3">
            <div class="flex h-6 shrink-0 items-center">
              <div class="group grid size-4 grid-cols-1">
                <input id="remember-me" name="remember-me" type="checkbox"
                  class="col-start-1 row-start-1 appearance-none rounded border border-gray-300 bg-white checked:border-indigo-600 checked:bg-indigo-600 indeterminate:border-indigo-600 indeterminate:bg-indigo-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 disabled:border-gray-300 disabled:bg-gray-100 disabled:checked:bg-gray-100 forced-colors:appearance-auto">
                <svg
                  class="pointer-events-none col-start-1 row-start-1 size-3.5 self-center justify-self-center stroke-white group-has-[:disabled]:stroke-gray-950/25"
                  viewBox="0 0 14 14" fill="none">
                  <path class="opacity-0 group-has-[:checked]:opacity-100" d="M3 8L6 11L11 3.5" stroke-width="2"
                    stroke-linecap="round" stroke-linejoin="round" />
                  <path class="opacity-0 group-has-[:indeterminate]:opacity-100" d="M3 7H11" stroke-width="2"
                    stroke-linecap="round" stroke-linejoin="round" />
                </svg>
              </div>
            </div>
            <label for="remember-me" class="block text-sm/6 text-gray-900">Remember me</label>
          </div>

          <div class="text-sm/6">
            <a href="#" class="font-semibold text-indigo-600 hover:text-indigo-500">Forgot password?</a>
          </div>
        </div>

        <div>
          {{ render_field(form.submit, with_label=False, class_="flex w-full justify-center rounded-md bg-indigo-600
          px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline
          focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600") }}
          <!-- <button type="submit" class="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm/6 font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Sign in</button> -->
        </div>
      </form>

      <div>
        <div class="relative mt-10">
          <div class="absolute inset-0 flex items-center" aria-hidden="true">
            <div class="w-full border-t border-gray-200"></div>
          </div>
          <div class="relative flex justify-center text-sm/6 font-medium">
            <span class="bg-white px-6 text-gray-900">Or continue with</span>
          </div>
        </div>

        <div class="mt-6 grid grid-cols-2 gap-4">
          <a href="#"
            class="flex w-full items-center justify-center gap-3 rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus-visible:ring-transparent">
            <svg class="h-5 w-5" viewBox="0 0 24 24" aria-hidden="true">
              <path
                d="M12.0003 4.75C13.7703 4.75 15.3553 5.36002 16.6053 6.54998L20.0303 3.125C17.9502 1.19 15.2353 0 12.0003 0C7.31028 0 3.25527 2.69 1.28027 6.60998L5.27028 9.70498C6.21525 6.86002 8.87028 4.75 12.0003 4.75Z"
                fill="#EA4335" />
              <path
                d="M23.49 12.275C23.49 11.49 23.415 10.73 23.3 10H12V14.51H18.47C18.18 15.99 17.34 17.25 16.08 18.1L19.945 21.1C22.2 19.01 23.49 15.92 23.49 12.275Z"
                fill="#4285F4" />
              <path
                d="M5.26498 14.2949C5.02498 13.5699 4.88501 12.7999 4.88501 11.9999C4.88501 11.1999 5.01998 10.4299 5.26498 9.7049L1.275 6.60986C0.46 8.22986 0 10.0599 0 11.9999C0 13.9399 0.46 15.7699 1.28 17.3899L5.26498 14.2949Z"
                fill="#FBBC05" />
              <path
                d="M12.0004 24.0001C15.2404 24.0001 17.9654 22.935 19.9454 21.095L16.0804 18.095C15.0054 18.82 13.6204 19.245 12.0004 19.245C8.8704 19.245 6.21537 17.135 5.2654 14.29L1.27539 17.385C3.25539 21.31 7.3104 24.0001 12.0004 24.0001Z"
                fill="#34A853" />
            </svg>
            <span class="text-sm/6 font-semibold">Google</span>
          </a>

          <a href="#"
            class="flex w-full items-center justify-center gap-3 rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus-visible:ring-transparent">
            <svg xmlns="http://www.w3.org/2000/svg" class="size-5" viewBox="0 0 23 23" aria-hidden="true">
              <path fill="#f3f3f3" d="M0 0h23v23H0z" />
              <path fill="#f35325" d="M1 1h10v10H1z" />
              <path fill="#81bc06" d="M12 1h10v10H12z" />
              <path fill="#05a6f0" d="M1 12h10v10H1z" />
              <path fill="#ffba08" d="M12 12h10v10H12z" />
            </svg>
            <span class="text-sm/6 font-semibold">Microsoft</span>
          </a>
        </div>
      </div>
    </div>

    <p class="mt-10 text-center text-sm/6 text-gray-500">
      Not a user?
      <a href="https://www.accentvoice.com/plans-pricing/"
        class="font-semibold text-indigo-600 hover:text-indigo-500">Sign up</a>
    </p>
  </div>
</div>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/authentication/templates/authentication/layout.html
Please review for update

<!DOCTYPE html>
<html lang="en" class="h-full bg-gray-300">
  <head>
    {% block head %}
    {% include 'head.html' %}
    {% endblock %}
  </head>
  {% block body %}
    <body class="h-full">
    {% block content %}{% endblock %}
    {% block footer %}{% endblock %}
    </body>
  {% include 'js.html' %}
  {% endblock %}
</html>

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/sip_template/templates/accent_engine/sip_template/add.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('SIP Template'), '', 'navicon', [_('List')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {{ add_tab_navigation_item('aor_section_options', _('AOR')) }}
        {{ add_tab_navigation_item('auth_section_options', _('Authentication')) }}
        {{ add_tab_navigation_item('endpoint_section_options', _('Endpoint')) }}
        {{ add_tab_navigation_item('identify_section_options', _('Identify')) }}
        {{ add_tab_navigation_item('registration_section_options', _('Registration')) }}
        {{ add_tab_navigation_item('registration_outbound_auth_section_options', _('Registration Outbound Auth')) }}
        {{ add_tab_navigation_item('outbound_auth_section_options', _('Outbound Auth')) }}
      {% endcall %}
    {% call build_form(action=url_for('.EndpointSIPTemplateView:post')) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.label) }}
              {{ render_field(form.transport.uuid,
                              data_listing_href=url_for(listing_urls['transport']),
                              data_allow_clear='true',
                              data_placeholder=_('Choose Transport')) }}
              {{ render_field(form.template_uuids,
                              data_listing_href=url_for(listing_urls['sip_template']),
                              data_allow_clear='true',
                              data_placeholder=_('Choose Templates')) }}
              {{ render_field(form.templates, with_label=False) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('aor_section_options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.aor_section_options.append_entry() %}
                  {{ _build_option_entry(form.aor_section_options.pop_entry(), 'aor', template=True) }}

                  {% for option in form.aor_section_options %}
                    {{ _build_option_entry(option, 'aor') }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('auth_section_options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.auth_section_options.append_entry() %}
                  {{ _build_option_entry(form.auth_section_options.pop_entry(), 'auth', template=True) }}

                  {% for option in form.auth_section_options %}
                    {{ _build_option_entry(option, 'auth') }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('endpoint_section_options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.endpoint_section_options.append_entry() %}
                  {{ _build_option_entry(form.endpoint_section_options.pop_entry(), 'endpoint', template=True) }}

                  {% for option in form.endpoint_section_options %}
                    {{ _build_option_entry(option, 'endpoint') }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('identify_section_options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.identify_section_options.append_entry() %}
                  {{ _build_option_entry(form.identify_section_options.pop_entry(), template=True) }}

                  {% for option in form.identify_section_options %}
                    {{ _build_option_entry(option) }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('registration_section_options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.registration_section_options.append_entry() %}
                  {{ _build_option_entry(form.registration_section_options.pop_entry(), template=True) }}

                  {% for option in form.registration_section_options %}
                    {{ _build_option_entry(option) }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('registration_outbound_auth_section_options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.registration_outbound_auth_section_options.append_entry() %}
                  {{ _build_option_entry(form.registration_outbound_auth_section_options.pop_entry(), 'auth', template=True) }}

                  {% for option in form.registration_outbound_auth_section_options %}
                    {{ _build_option_entry(option, 'auth') }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('outbound_auth_section_options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.outbound_auth_section_options.append_entry() %}
                  {{ _build_option_entry(form.outbound_auth_section_options.pop_entry(), 'auth', template=True) }}

                  {% for option in form.outbound_auth_section_options %}
                    {{ _build_option_entry(option, 'auth') }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}


{% macro _build_option_entry(option, section=None, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
  {% if section %}
    <td>{{ render_field(
      option.option_key,
      with_label=False,
      inputclass='ui-helper-clearfix',
      data_listing_href=url_for(listing_urls['pjsip_doc'], section=section),
    ) }}</td>
  {% else %}
    <td>{{ render_field(option.option_key, with_label=False, inputclass='ui-helper-clearfix') }}</td>
  {% endif %}
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/sip_template/templates/accent_engine/sip_template/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.EndpointSIPTemplateView:get', id=resource.uuid), 'icon': 'compress' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {{ add_tab_navigation_item('aor_section_options', _('AOR')) }}
        {{ add_tab_navigation_item('auth_section_options', _('Authentication')) }}
        {{ add_tab_navigation_item('endpoint_section_options', _('Endpoint')) }}
        {{ add_tab_navigation_item('identify_section_options', _('Identify')) }}
        {{ add_tab_navigation_item('registration_section_options', _('Registration')) }}
        {{ add_tab_navigation_item('registration_outbound_auth_section_options', _('Registration Outbound Auth')) }}
        {{ add_tab_navigation_item('outbound_auth_section_options', _('Outbound Auth')) }}
      {% endcall %}
    {% call build_form(action=url_for('.EndpointSIPTemplateView:put', id=resource.uuid)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.label) }}
              {{ render_field(form.transport.uuid,
                              data_listing_href=url_for(listing_urls['transport']),
                              data_allow_clear='true',
                              data_placeholder=_('Choose Transport')) }}
              {{ render_field(form.template_uuids,
                              data_listing_href=url_for(listing_urls['sip_template']),
                              data_allow_clear='true',
                              data_placeholder=_('Choose Templates')) }}
              {{ render_field(form.templates, with_label=False) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('aor_section_options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.aor_section_options.append_entry() %}
                  {{ _build_option_entry(form.aor_section_options.pop_entry(), 'aor', template=True) }}

                  {% for option in form.aor_section_options %}
                    {{ _build_option_entry(option, 'aor') }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('auth_section_options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.auth_section_options.append_entry() %}
                  {{ _build_option_entry(form.auth_section_options.pop_entry(), 'auth', template=True) }}

                  {% for option in form.auth_section_options %}
                    {{ _build_option_entry(option, 'auth') }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('endpoint_section_options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.endpoint_section_options.append_entry() %}
                  {{ _build_option_entry(form.endpoint_section_options.pop_entry(), 'endpoint', template=True) }}

                  {% for option in form.endpoint_section_options %}
                    {{ _build_option_entry(option, 'endpoint') }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('identify_section_options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.identify_section_options.append_entry() %}
                  {{ _build_option_entry(form.identify_section_options.pop_entry(), template=True) }}

                  {% for option in form.identify_section_options %}
                    {{ _build_option_entry(option) }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('registration_section_options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.registration_section_options.append_entry() %}
                  {{ _build_option_entry(form.registration_section_options.pop_entry(), template=True) }}

                  {% for option in form.registration_section_options %}
                    {{ _build_option_entry(option) }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('registration_outbound_auth_section_options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.registration_outbound_auth_section_options.append_entry() %}
                  {{ _build_option_entry(form.registration_outbound_auth_section_options.pop_entry(), 'auth', template=True) }}

                  {% for option in form.registration_outbound_auth_section_options %}
                    {{ _build_option_entry(option, 'auth') }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('outbound_auth_section_options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.outbound_auth_section_options.append_entry() %}
                  {{ _build_option_entry(form.outbound_auth_section_options.pop_entry(), 'auth', template=True) }}

                  {% for option in form.outbound_auth_section_options %}
                    {{ _build_option_entry(option, 'auth') }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}


{% macro _build_option_entry(option, section=None, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
  {% if section %}
    <td>{{ render_field(
      option.option_key,
      with_label=False,
      inputclass='ui-helper-clearfix',
      data_listing_href=url_for(listing_urls['pjsip_doc'], section=section),
    ) }}</td>
  {% else %}
    <td>{{ render_field(option.option_key, with_label=False, inputclass='ui-helper-clearfix') }}</td>
  {% endif %}
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/sip_template/templates/accent_engine/sip_template/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('SIP Templates'), 'link': url_for('.EndpointSIPTemplateView:index'), 'icon': 'compress' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('SIP Templates'), 'compress') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.EndpointSIPTemplateView:get', id=''), delete=url_for('.EndpointSIPTemplateView:delete', id=''), add=url_for('.EndpointSIPTemplateView:new')) %}
          <th>{{ _('Label') }}</th>
        {% endcall %}
        {% call(template) build_list_table_rows(resource_list['items']) %}
          <td>{{ template.label }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/dird_profile/templates/accent_engine/dird_profile/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.DirdProfileView:index'), 'icon': 'user' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form(action=url_for('.DirdProfileView:put', id=resource.uuid)) %}
      {{ render_field(form.uuid) }}

      {% call add_default_fields(form=form, submit_value='Update') %}
        {% call build_table() %}
          {% call build_table_headers() %}
            <th>Source</th>
            <th>Favorite</th>
            <th>Reverse</th>
            <th>Lookup</th>
            <th style="width: 21px"></th>
          {% endcall %}
          {% call build_table_body(class_='dynamic-table') %}
            {% do form.services.append_entry() %}
            {{ _build_row_entry(form.services.pop_entry(), template=True) }}

            {% for row in form.services %}
              {{ _build_row_entry(row) }}
            {% endfor %}
          {% endcall %}
        {% endcall %}
        {{ build_add_row_entry_header() }}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_row_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.uuid, with_label=False, data_listing_href=url_for(listing_urls['dird_source'])) }}</td>
    <td>{{ render_field(option.favorites, with_label=False) }}</td>
    <td>{{ render_field(option.reverse, with_label=False) }}</td>
    <td>{{ render_field(option.lookup, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/dird_profile/templates/accent_engine/dird_profile/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': _('Directory profile'), 'link': url_for('.DirdProfileView:index'), 'icon': 'user' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Directory'), 'address-book') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.DirdProfileView:get', id='')) %}
          <th>{{ _('Name') }}</th>
        {% endcall %}
        {% call(profile) build_list_table_rows(resource_list['items']) %}
          <td>{{ profile.name }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/skillrule/templates/accent_engine/skillrule/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.SkillRuleView:get', id=resource.uuid), 'icon': 'sticky-note-o' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
        {% call build_tabs_navigation() %}
          {{ add_tab_navigation_header(_('Skill Rules'), resource.name, 'sticky-note-o') }}
          {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {% endcall %}

      {% call build_form(action=url_for('.SkillRuleView:put', id=resource.id)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.name) }}
              {{ build_add_row_entry_header() }}

              {% call build_table() %}
                {% call build_table_headers() %}
                  <th class="text-center">{{ _('Rules') }}</th>
                  <th></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.rules.append_entry() %}
                  {{ _build_skillrules_entry(form.rules.pop_entry(), template=True) }}

                  {% for rule in form.rules %}
                    {{ _build_skillrules_entry(rule) }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_skillrules_entry(rule, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(rule.definition, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/skillrule/templates/accent_engine/skillrule/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Skill Rules'), 'link': url_for('.SkillRuleView:index'), 'icon': 'sticky-note-o' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Skill Rules'), 'sticky-note-o') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.SkillRuleView:get', id=''), delete=url_for('.SkillRuleView:delete', id='')) %}
          <th>{{ _('Name') }}</th>
        {% endcall %}
        {% call(skillrule) build_list_table_rows(resource_list['items']) %}
          <td>{{ skillrule.name }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Skill Rules')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/rtp/templates/accent_engine/rtp/index.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Rtp'), 'link': url_for('.RtpView:index'), 'icon': 'volume-off' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Rtp'), '', 'volume-off') }}
        {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {{ add_tab_navigation_item('ice_host_candidates', _('Ice Host Candidates')) }}
      {% endcall %}

      {% call build_form(action=url_for('.RtpView:post')) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.rtpstart) }}
              {{ render_field(form.rtpend) }}
              {{ render_field(form.rtpchecksums) }}
              {{ render_field(form.dtmftimeout) }}
              {{ render_field(form.rtcpinterval) }}
              {{ render_field(form.strictrtp) }}
              {{ render_field(form.probation) }}
              {{ render_field(form.icesupport) }}
              {{ render_field(form.stunaddr) }}
              {{ render_field(form.stun_blacklist) }}
              {{ render_field(form.turnaddr) }}
              {{ render_field(form.turnusername) }}
              {{ render_field(form.turnpassword) }}
              {{ render_field(form.ice_blacklist) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('ice_host_candidates') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Local Address') }}</th>
                  <th>{{  _('Advertised Address') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.ice_host_candidates.append_entry() %}
                  {{ _build_option_entry(form.ice_host_candidates.pop_entry(), template=True) }}

                  {% for option in form.ice_host_candidates %}
                    {{ _build_option_entry(option) }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}

  {% endcall %}
{% endblock %}


{% macro _build_option_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.option_key, with_label=False) }}</td>
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/identity/templates/accent_engine/identity_group/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.GroupView:get', id=resource.id), 'icon': 'users' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box(_('Group'), resource.name, 'users') %}
      {% call build_form(action=url_for('.GroupView:put', id=resource.uuid)) %}
        {% call add_default_fields(form=form, submit_value=_('Update')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.members.user_uuids, data_listing_href=url_for(listing_urls['identity'])) }}
          {{ render_field(form.members.users, with_label=False) }}
          {{ render_field(form.members.policy_uuids, data_listing_href=url_for(listing_urls['policy'])) }}
          {{ render_field(form.members.policies, with_label=False) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/identity/templates/accent_engine/identity_group/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Groups'), 'link': url_for('.GroupView:index'), 'icon': 'users' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Groups'), 'users') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.GroupView:get', id=''), delete=url_for('.GroupView:delete', id='')) %}
          <th>{{ _('Name') }}</th>
        {% endcall %}
        {% call(group) build_list_table_rows(resource_list['items']) %}
          <td>{{ group.name }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Group')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/identity/templates/accent_engine/tenant/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.TenantView:get', id=resource.id), 'icon': 'building' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Tenant'), resource.name, 'building') }}
        {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {{ add_tab_navigation_item('domains', _('Domains')) }}
      {% endcall %}

      {% call build_form(action=url_for('.TenantView:put', id=resource.uuid)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.name) }}
              {{ render_field(form.slug, disabled=True) }}
              {{ render_field(form.default_authentication_method) }}
              {{ render_field(form.members.user_uuids, data_disable_sort=True, disabled=True) }}
              {{ render_field(form.members.users, with_label=False) }}
              {{ render_field(form.members.policy_uuids, data_disable_sort=True, disabled=True) }}
              {{ render_field(form.members.policies, with_label=False) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('domains') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ build_add_row_entry_header() }}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>{{ _('Name') }}</th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.domains.append_entry() %}
                    {{ _build_domains_entry(form.domains.pop_entry(), template=True) }}
                  {% for domain in form.domains %}
                     {{ _build_domains_entry(domain) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_domains_entry(domain, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(domain['name'], with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/identity/templates/accent_engine/tenant/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Tenants'), 'link': url_for('.TenantView:index'), 'icon': 'building' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Tenants'), 'building') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.TenantView:get', id=''), delete=url_for('.TenantView:delete', id='')) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Identifier') }}</th>
          <th>{{ _('Domains') }}</th>
        {% endcall %}
        {% call(tenant) build_list_table_rows(resource_list['items']) %}
          <td>{{ tenant.name }}</td>
          <td>{{ tenant.slug }}</td>
          <td>{{ tenant.domain_names | join(', ') }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Tenant')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.slug) }}
          <label class="col-sm-4 control-label">
            {{  _('Domain Names') }}
          </label>
          {% call build_table() %}
            {% call build_table_body(class_='dynamic-table') %}
              {% do form.domains.append_entry() %}
                {{ _build_domains_entry(form.domains.pop_entry(), template=True) }}
              {% for domain in form.domains %}
                 {{ _build_domains_entry(domain) }}
              {% endfor %}
            {% endcall %}
          {% endcall %}
          {{ build_add_row_entry_header() }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

{% macro _build_domains_entry(domain, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(domain['name']) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/identity/templates/accent_engine/policy/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.PolicyView:get', id=resource.id), 'icon': 'lock' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Policy'), resource.name, 'lock') }}
        {{ add_tab_navigation_item('policy', _('Policy'), active=True) }}
        {{ add_tab_navigation_item('acl', _('ACL')) }}
      {% endcall %}

      {% call build_form(action=url_for('.PolicyView:put', id=resource.uuid)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('policy', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.name) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('acl') %}
            {{ build_add_row_entry_header() }}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('acl') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.acl.append_entry() %}
                  {{ _build_access_entry(form.acl.pop_entry(), template=True) }}

                  {% for access in form.acl %}
                    {{ _build_access_entry(access) }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}
            {% endcall %}

            {{ build_add_row_entry_header() }}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_access_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/identity/templates/accent_engine/policy/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Policies'), 'link': url_for('.PolicyView:index'), 'icon': 'lock' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Policies'), 'lock') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.PolicyView:get', id=''), delete=url_for('.PolicyView:delete', id='')) %}
          <th>{{ _('Name') }}</th>
        {% endcall %}
        {% call(policy) build_list_table_rows(resource_list['items']) %}
          <td>{{ policy.name }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Policy')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/identity/templates/accent_engine/ldap/index.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('LDAP'), '', 'gear', [_('Update')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box('', '', '') %}
      {% call build_form(action=url_for('.LDAPConfigView:post')) %}

        {% call add_default_fields(form=form, submit_value=_('Update'), delete_action=url_for('.LDAPConfigView:delete')) %}
          {{ render_field(form.host) }}
          {{ render_field(form.port) }}
          {{ render_field(form.protocol_security) }}
          {{ render_field(form.protocol_version) }}
          {{ render_field(form.bind_dn) }}
          {{ render_field(form.bind_password) }}
          {{ render_field(form.user_base_dn) }}
          {{ render_field(form.user_login_attribute) }}
          {{ render_field(form.user_email_attribute) }}
          {{ render_field(form.search_filters) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/identity/templates/accent_engine/identity/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.username, 'link': url_for('.IdentityView:get', id=resource.id), 'icon': 'user' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Identity'), resource.username, 'user') }}
        {{ add_tab_navigation_item('user', _('User'), active=True) }}
        {{ add_tab_navigation_item('emails', _('Emails')) }}
        {{ add_tab_navigation_item('groups', _('Groups')) }}
        {{ add_tab_navigation_item('tenant', _('Tenant')) }}
        {{ add_tab_navigation_item('policies', _('Policies')) }}
      {% endcall %}

      {% call build_form(action=url_for('.IdentityView:put', id=resource.uuid)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('user', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.username, readonly='readonly') }}
              {{ render_field(form.password) }}
              {{ render_field(form.firstname) }}
              {{ render_field(form.lastname) }}
              {{ render_field(form.purpose) }}
              {{ render_field(form.authentication_method) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('emails') %}
            {{ build_add_row_entry_header() }}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Email') }}</th>
                  <th>{{  _('Main') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.emails.append_entry() %}
                  {{ _build_email_entry(form.emails.pop_entry(), template=True) }}

                  {% for option in form.emails %}
                    {{ _build_email_entry(option) }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}
            {% endcall %}

            {{ build_add_row_entry_header() }}
          {% endcall %}

          {% call build_tab_content_item('groups') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.members.group_uuids, data_listing_href=url_for(listing_urls['identity_group'])) }}
              {{ render_field(form.members.groups, with_label=False) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('tenant') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.tenant['name'], readonly=True) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('policies') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.members.policy_uuids, data_listing_href=url_for(listing_urls['policy'])) }}
              {{ render_field(form.members.policies, with_label=False) }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_email_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.address, with_label=False) }}</td>
    <td>{{ render_field(option.main, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/identity/templates/accent_engine/identity/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Identities'), 'link': url_for('.IdentityView:index'), 'icon': 'user' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Identities'), 'user') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.IdentityView:get', id=''), delete=url_for('.IdentityView:delete', id='')) %}
          <th>{{ _('Username') }}</th>
          <th>{{ _('Firstname') }}</th>
          <th>{{ _('Lastname') }}</th>
          <th>{{ _('Email') }}</th>
          <th>{{ _('Purpose') }}</th>
        {% endcall %}
        {% call(identity) build_list_table_rows(resource_list['items']) %}
          <td>{{ identity.username }}</td>
          <td>{{ identity.firstname or '-' }}</td>
          <td>{{ identity.lastname or '-' }}</td>
          <td>
            {% for email in identity.emails %}
              {% if email['main'] == True %}
                {{ email['address']  }}
              {% endif %}
            {%  endfor %}
          </td>
          <td>{{ identity.purpose or '-' }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Identity')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.username) }}
          {{ render_field(form.password, autocomplete="off") }}
          {{ render_field(form.firstname) }}
          {{ render_field(form.lastname) }}
          {{ render_field(form.email_address) }}
          {{ render_field(form.purpose) }}
          {{ render_field(form.tenant_uuid, data_listing_href=url_for(listing_urls['tenant'])) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/plugin/templates/accent_engine/plugin/list_plugins.html
Please review for update

{% macro _render_plugin(entry) %}
<div class="col-md-4">
  <div class="box box-solid box-primary">
    <div class="box-header with-border">
      <i class="fa fa-cubes"></i>
      <h3 class="box-title">{{ entry.name }} v{{ entry.installed_version or (entry.versions[0]['version'] if
        entry.versions) }}</h3>
      <div class="pull-right box-tools">
        {% if entry.installed_version %}
        {{ _render_remove_button(entry.namespace, entry.name) }}
        {% set version = entry.versions|selectattr('upgradable')|first %}
        {{ _render_upgrade_button(entry.namespace, entry.name, version.version) if version}}
        {% endif %}
      </div>
    </div>

    <div class="box-body">
      <dl>
        <dt><i class="fa fa-book"></i> Description</dt>
        <dd>{{ entry.display_name }}</dd>
        <br>
        <dt><i class="fa fa-user"></i> Author</dt>
        <dd>{{ entry.author }}</dd>
        <br>
        <dt><i class="fa fa-tags"></i> Tags</dt>
        <dd>{% for tag in entry.tags %} <span class="label label-default">{{ tag }}</span> {% endfor %}</dd>
      </dl>
      <span class="pull-right"><a href="{{ entry.homepage or '#' }}">Details</a> <i
          class="fa fa-arrow-right"></i></span>
    </div>
  </div>
</div>
{% endmacro %}

{% macro _render_remove_button(namespace, name) %}
<button type="button"
  class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-default btn-sm btn-remove-plugin"
  style="z-index:1;position:relative;" data-namespace="{{ namespace }}" data-name="{{ name }}"
  data-remove-url="{{ url_for('accent_engine.plugin.PluginView:remove_plugin') }}">
  <i class="fa fa-trash"></i>
</button>
{% endmacro %}

{% macro _render_upgrade_button(namespace, name, version) %}
<button type="button"
  class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-warning btn-sm btn-upgrade-plugin"
  style="z-index:1;position:relative;" data-namespace="{{ namespace }}" data-name="{{ name }}"
  data-version="{{ version }}" data-upgrade-url="{{ url_for('accent_engine.plugin.PluginView:install_plugin') }}">
  <i class="fa fa-download"></i>
</button>
{% endmacro %}

<div class="flex flex-wrap -mx-2">
  {% for entry in market %}
  {{ _render_plugin(entry) }}
  {% endfor %}
</div>
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/plugin/templates/accent_engine/plugin/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs([
{ 'name': _('Plugins'), 'link': url_for('.PluginView:index'), 'icon': 'cubes' }
]) }}
{% endblock %}

{% block content %}
<section class="content">
  <div class="flex flex-wrap -mx-2">
    <div class="col-md-12">
      <div class="nav-tabs-custom">
        <ul class="nav nav-tabs">
          <li class="active"><a href="#market" data-toggle="tab">{{ _('Installed') }}</a></li>
          <li><a href="#git" data-toggle="tab">{{ _('Git') }}</a></li>
        </ul>
        <div class="tab-content">

          <div class="tab-pane active" id="market">
            <div class="flex flex-wrap -mx-2">
              <div class="col-md-2 pull-right">
                <div class="input-group">
                  <input class="form-control" placeholder="{{ _('Search plugin') }}" type="text" id="search_plugin"
                    data-search-url="{{ url_for('accent_engine.plugin.PluginView:search_plugin') }}">
                  <span class="input-group-addon">
                    <i class="fa fa-search"></i>
                  </span>
                </div>
              </div>
              <div class="col-md-2 pull-right">
                <div class="checkbox">
                  <label>
                    <input id="show_only_official" type="checkbox"></input>
                    {{ _('Show only official') }}
                  </label>
                </div>
              </div>
            </div>
            <div id="plugins"></div>
          </div>

          <div class="tab-pane" id="git">
            <div class="flex flex-wrap -mx-2">
              <div class="col-md-8">
                <h4>{{ _('Give your GIT url to install a plugin!') }}</h4>
                <div class="input-group">
                  <span class="input-group-addon">
                    <i class="fa fa-download"></i>
                  </span>
                  <input style="width:65%" id="git-url-to-install" class="form-control" placeholder="{{ _('GIT url') }}"
                    type="text"></input>
                  <input style="width:35%" id="git-branch-tag" class="form-control"
                    placeholder="{{ _('Branch or tag (optional)') }}" type="text"></input>
                  <span class="input-group-btn">
                    <button type="button" class="ladda-button btn btn-primary btn-flat btn-git-install-plugin"
                      data-install-url="{{ url_for('accent_engine.plugin.PluginView:install_plugin') }}"
                      data-style="slide-left">
                      <span class="ladda-label">{{ _('Install') }}</span>
                    </button>
                  </span>
                </div>
              </div>
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>
</section>
{% endblock %}

{% block additional_js %}
<script src="{{ url_for('.static', filename='js/spin.min.js') }}"></script>
<script src="{{ url_for('.static', filename='js/ladda.min.js') }}"></script>
<script src="{{ url_for('.static', filename='js/plugin.js') }}"></script>
<script>
  {% set config = current_user.get_config() %}
  connect(
    "{{ config.websocketd.host or '' }}",
    "{{ config.websocketd.port }}",
    "{{ config.websocketd.prefix }}",
    "{{ current_user.token }}"
  );
</script>
{% endblock %}

{% block additional_css %}
<link href="{{ url_for('.static', filename='css/ladda-themeless.min.css') }}" rel="stylesheet" media="screen"
  type="text/css">
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/plugin/static/accent_engine/js/plugin.js
Please review for update

var socket = null;
var started = false;
var btn_loading = null;

$(document).ready(function() {
    btn_loading = Ladda.create(document.querySelector('.ladda-button'));
    search_plugins();
});

function connect(host, port, prefix, token) {
    if (socket != null) {
        console.log("socket already connected");
        return;
    }

    if (!host) {
        host = window.location.host;
    }

    var ws_url = "wss://" + host + ":" + port + prefix + "/?token=" + token;
    socket = new WebSocket(ws_url);
    socket.onclose = function(event) {
        socket = null;
        console.log("websocketd closed with code " + event.code + " and reason '" + event.reason + "'");
    };
    socket.onmessage = function(event) {
        if (started) {
            var payload = JSON.parse(event.data);
            if (payload.data.status == 'completed') {
                console.log('Time to reload webi');
                location.reload();
            }
            return;
        }

        var msg = JSON.parse(event.data);
        switch (msg.op) {
            case "init":
                subscribe("plugin_install_progress");
                subscribe("plugin_uninstall_progress");
                start();
                break;
            case "start":
                started = true;
                console.log("waiting for messages");
                break;
        }
    };
    started = false;
}

function subscribe(event_name) {
    var msg = {
        op: "subscribe",
        data: {
          event_name: event_name
        }
    };
    socket.send(JSON.stringify(msg));
};

function start() {
    var msg = {
        op: "start"
    };
    socket.send(JSON.stringify(msg));
}

$(document).on('click', ".btn-remove-plugin", function() {
  let namespace = $(this).attr("data-namespace");
  let name = $(this).attr("data-name");

  let body = {
    namespace: namespace,
    name: name,
  }

  let remove_url = $(this).attr("data-remove-url");
  remove_plugin.call(this, remove_url, body);
});

$(document).on('click', ".btn-install-plugin", function() {
  let namespace = $(this).attr("data-namespace");
  let name = $(this).attr("data-name");

  let body = {
    method: 'market',
    options: {
      namespace: namespace,
      name: name,
    },
  }

  let install_url = $(this).attr("data-install-url");
  install_plugin.call(this, install_url, body);
});

$(document).on('click', ".btn-upgrade-plugin", function() {
  let namespace = $(this).attr("data-namespace");
  let name = $(this).attr("data-name");
  let version = $(this).attr("data-version");

  let body = {
    method: 'market',
    options: {
      namespace: namespace,
      name: name,
      version: version,
    },
  }

  let upgrade_url = $(this).attr("data-upgrade-url");
  install_plugin.call(this, upgrade_url, body);
});

$(document).on('click', ".btn-git-install-plugin", function() {
  let url = $('#git-url-to-install').val();
  let branch = $('#git-branch-tag').val();
  let options = ((branch) ? {ref: branch} : {});

  if (url) {
    let body = {
      url: url,
      method: 'git',
      options: options
    }

    install_url = $(this).attr("data-install-url");
    install_plugin(install_url, body, from_git=true);
  }
});

$('#search_plugin').on('change', function() {
  search_plugins();
});

$('#installed_plugin').on('change', function() {
  search_plugins();
});

$('#show_only_official').on('change', function() {
  search_plugins();
});

function search_plugins() {
  let term = $('#search_plugin').val();
  let official = $('#show_only_official').is(':checked');
  let installed = $('#installed_plugin').val();
  let search_url = $('#search_plugin').attr("data-search-url");

  let body = {}
  if (term) {
    body.search = term;
  }
  if (official) {
    body.namespace = 'official';
  }
  if (installed) {
    if (installed === 'installed') {
      body.installed = true;
    } else if (installed === 'not_installed') {
      body.installed = false;
    }
  }

  call_ajax_plugin(search_url, callback_search, body);
}

function remove_plugin(remove_url, body) {
  res = confirm('Are you sure you want to remove this plugin?');
  if (res == true) {
    launch_remove_plugin.call(this, remove_url, body);
  }
}

function install_plugin(install_url, body, from_git=false) {
  res = confirm('Are you sure you want to install this plugin?');
  if (res == true) {
    if (from_git) {
      btn_loading.start();
    }
    launch_install_plugin.call(this, install_url, body);
  }
}

function launch_install_plugin(install_url, body) {
  $(this).closest('.plugin-container').find('.overlay').removeClass('hidden');
  call_ajax_plugin(install_url, callback_install, body);
}

function launch_remove_plugin(remove_url, body) {
  $(this).closest('.plugin-container').find('.overlay').removeClass('hidden');
  call_ajax_plugin(remove_url, callback_remove, body);
}

function callback_install(data) {
}

function callback_remove(data) {
}

function callback_search(data) {
  $('#plugins').html(data);
}

function callback_filter(data) {
  $('#plugins').html(data);
}

function call_ajax_plugin(url, callback, body) {
  $.ajax({
    url: url,
    type: 'POST',
    contentType: 'application/json',
    data: JSON.stringify(body),
    success: function(data) {
      callback(data);
    },
    error: function(data) {
      setTimeout(function() {
        console.log('There is some error, please reload');
        location.reload();
      }, 4000);
    }
  });
}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/plugin/static/accent_engine/js/ladda.min.js
Please review for update

/*!
 * Ladda 0.9.2 (2014-03-11, 08:41)
 * http://lab.hakim.se/ladda
 * MIT licensed
 *
 * Copyright (C) 2013 Hakim El Hattab, http://hakim.se
 */
(function(t,e){"object"==typeof exports?module.exports=e():"function"==typeof define&&define.amd?define(["spin"],e):t.Ladda=e(t.Spinner)})(this,function(t){"use strict";function e(t){if(t===void 0)return console.warn("Ladda button target must be defined."),void 0;t.querySelector(".ladda-label")||(t.innerHTML='<span class="ladda-label">'+t.innerHTML+"</span>");var e,n=document.createElement("span");n.className="ladda-spinner",t.appendChild(n);var r,a={start:function(){return e||(e=o(t)),t.setAttribute("disabled",""),t.setAttribute("data-loading",""),clearTimeout(r),e.spin(n),this.setProgress(0),this},startAfter:function(t){return clearTimeout(r),r=setTimeout(function(){a.start()},t),this},stop:function(){return t.removeAttribute("disabled"),t.removeAttribute("data-loading"),clearTimeout(r),e&&(r=setTimeout(function(){e.stop()},1e3)),this},toggle:function(){return this.isLoading()?this.stop():this.start(),this},setProgress:function(e){e=Math.max(Math.min(e,1),0);var n=t.querySelector(".ladda-progress");0===e&&n&&n.parentNode?n.parentNode.removeChild(n):(n||(n=document.createElement("div"),n.className="ladda-progress",t.appendChild(n)),n.style.width=(e||0)*t.offsetWidth+"px")},enable:function(){return this.stop(),this},disable:function(){return this.stop(),t.setAttribute("disabled",""),this},isLoading:function(){return t.hasAttribute("data-loading")}};return u.push(a),a}function n(t,e){for(;t.parentNode&&t.tagName!==e;)t=t.parentNode;return e===t.tagName?t:void 0}function r(t){for(var e=["input","textarea"],n=[],r=0;e.length>r;r++)for(var a=t.getElementsByTagName(e[r]),i=0;a.length>i;i++)a[i].hasAttribute("required")&&n.push(a[i]);return n}function a(t,a){a=a||{};var i=[];"string"==typeof t?i=s(document.querySelectorAll(t)):"object"==typeof t&&"string"==typeof t.nodeName&&(i=[t]);for(var o=0,u=i.length;u>o;o++)(function(){var t=i[o];if("function"==typeof t.addEventListener){var s=e(t),u=-1;t.addEventListener("click",function(){var e=!0,i=n(t,"FORM");if(i!==void 0)for(var o=r(i),d=0;o.length>d;d++)""===o[d].value.replace(/^\s+|\s+$/g,"")&&(e=!1);e&&(s.startAfter(1),"number"==typeof a.timeout&&(clearTimeout(u),u=setTimeout(s.stop,a.timeout)),"function"==typeof a.callback&&a.callback.apply(null,[s]))},!1)}})()}function i(){for(var t=0,e=u.length;e>t;t++)u[t].stop()}function o(e){var n,r=e.offsetHeight;0===r&&(r=parseFloat(window.getComputedStyle(e).height)),r>32&&(r*=.8),e.hasAttribute("data-spinner-size")&&(r=parseInt(e.getAttribute("data-spinner-size"),10)),e.hasAttribute("data-spinner-color")&&(n=e.getAttribute("data-spinner-color"));var a=12,i=.2*r,o=.6*i,s=7>i?2:3;return new t({color:n||"#fff",lines:a,radius:i,length:o,width:s,zIndex:"auto",top:"auto",left:"auto",className:""})}function s(t){for(var e=[],n=0;t.length>n;n++)e.push(t[n]);return e}var u=[];return{bind:a,create:e,stopAll:i}});

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/plugin/static/accent_engine/js/spin.min.js
Please review for update

/*!
 * Copyright (c) 2011-2013 Felix Gnass
 * Licensed under the MIT license
 */
(function(t,e){"object"==typeof exports?module.exports=e():"function"==typeof define&&define.amd?define(e):t.Spinner=e()})(this,function(){"use strict";function t(t,e){var i,n=document.createElement(t||"div");for(i in e)n[i]=e[i];return n}function e(t){for(var e=1,i=arguments.length;i>e;e++)t.appendChild(arguments[e]);return t}function i(t,e,i,n){var o=["opacity",e,~~(100*t),i,n].join("-"),r=.01+100*(i/n),a=Math.max(1-(1-t)/e*(100-r),t),s=l.substring(0,l.indexOf("Animation")).toLowerCase(),u=s&&"-"+s+"-"||"";return f[o]||(c.insertRule("@"+u+"keyframes "+o+"{"+"0%{opacity:"+a+"}"+r+"%{opacity:"+t+"}"+(r+.01)+"%{opacity:1}"+(r+e)%100+"%{opacity:"+t+"}"+"100%{opacity:"+a+"}"+"}",c.cssRules.length),f[o]=1),o}function n(t,e){var i,n,o=t.style;if(void 0!==o[e])return e;for(e=e.charAt(0).toUpperCase()+e.slice(1),n=0;d.length>n;n++)if(i=d[n]+e,void 0!==o[i])return i}function o(t,e){for(var i in e)t.style[n(t,i)||i]=e[i];return t}function r(t){for(var e=1;arguments.length>e;e++){var i=arguments[e];for(var n in i)void 0===t[n]&&(t[n]=i[n])}return t}function a(t){for(var e={x:t.offsetLeft,y:t.offsetTop};t=t.offsetParent;)e.x+=t.offsetLeft,e.y+=t.offsetTop;return e}function s(t){return this===void 0?new s(t):(this.opts=r(t||{},s.defaults,p),void 0)}function u(){function i(e,i){return t("<"+e+' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">',i)}c.addRule(".spin-vml","behavior:url(#default#VML)"),s.prototype.lines=function(t,n){function r(){return o(i("group",{coordsize:l+" "+l,coordorigin:-u+" "+-u}),{width:l,height:l})}function a(t,a,s){e(f,e(o(r(),{rotation:360/n.lines*t+"deg",left:~~a}),e(o(i("roundrect",{arcsize:n.corners}),{width:u,height:n.width,left:n.radius,top:-n.width>>1,filter:s}),i("fill",{color:n.color,opacity:n.opacity}),i("stroke",{opacity:0}))))}var s,u=n.length+n.width,l=2*u,d=2*-(n.width+n.length)+"px",f=o(r(),{position:"absolute",top:d,left:d});if(n.shadow)for(s=1;n.lines>=s;s++)a(s,-2,"progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)");for(s=1;n.lines>=s;s++)a(s);return e(t,f)},s.prototype.opacity=function(t,e,i,n){var o=t.firstChild;n=n.shadow&&n.lines||0,o&&o.childNodes.length>e+n&&(o=o.childNodes[e+n],o=o&&o.firstChild,o=o&&o.firstChild,o&&(o.opacity=i))}}var l,d=["webkit","Moz","ms","O"],f={},c=function(){var i=t("style",{type:"text/css"});return e(document.getElementsByTagName("head")[0],i),i.sheet||i.styleSheet}(),p={lines:12,length:7,width:5,radius:10,rotate:0,corners:1,color:"#000",direction:1,speed:1,trail:100,opacity:.25,fps:20,zIndex:2e9,className:"spinner",top:"auto",left:"auto",position:"relative"};s.defaults={},r(s.prototype,{spin:function(e){this.stop();var i,n,r=this,s=r.opts,u=r.el=o(t(0,{className:s.className}),{position:s.position,width:0,zIndex:s.zIndex}),d=s.radius+s.length+s.width;if(e&&(e.insertBefore(u,e.firstChild||null),n=a(e),i=a(u),o(u,{left:("auto"==s.left?n.x-i.x+(e.offsetWidth>>1):parseInt(s.left,10)+d)+"px",top:("auto"==s.top?n.y-i.y+(e.offsetHeight>>1):parseInt(s.top,10)+d)+"px"})),u.setAttribute("role","progressbar"),r.lines(u,r.opts),!l){var f,c=0,p=(s.lines-1)*(1-s.direction)/2,h=s.fps,m=h/s.speed,g=(1-s.opacity)/(m*s.trail/100),v=m/s.lines;(function y(){c++;for(var t=0;s.lines>t;t++)f=Math.max(1-(c+(s.lines-t)*v)%m*g,s.opacity),r.opacity(u,t*s.direction+p,f,s);r.timeout=r.el&&setTimeout(y,~~(1e3/h))})()}return r},stop:function(){var t=this.el;return t&&(clearTimeout(this.timeout),t.parentNode&&t.parentNode.removeChild(t),this.el=void 0),this},lines:function(n,r){function a(e,i){return o(t(),{position:"absolute",width:r.length+r.width+"px",height:r.width+"px",background:e,boxShadow:i,transformOrigin:"left",transform:"rotate("+~~(360/r.lines*u+r.rotate)+"deg) translate("+r.radius+"px"+",0)",borderRadius:(r.corners*r.width>>1)+"px"})}for(var s,u=0,d=(r.lines-1)*(1-r.direction)/2;r.lines>u;u++)s=o(t(),{position:"absolute",top:1+~(r.width/2)+"px",transform:r.hwaccel?"translate3d(0,0,0)":"",opacity:r.opacity,animation:l&&i(r.opacity,r.trail,d+u*r.direction,r.lines)+" "+1/r.speed+"s linear infinite"}),r.shadow&&e(s,o(a("#000","0 0 4px #000"),{top:"2px"})),e(n,e(s,a(r.color,"0 0 1px rgba(0,0,0,.1)")));return n},opacity:function(t,e,i){t.childNodes.length>e&&(t.childNodes[e].style.opacity=i)}});var h=o(t("group"),{behavior:"url(#default#VML)"});return!n(h,"transform")&&h.adj?u():l=n(h,"animation"),s});

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/moh/templates/accent_engine/moh/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs(current_breadcrumbs + [
{ 'name': resource.name, 'link': url_for('.MohView:get', id=resource.id), 'icon': 'music' }
]) }}
{% endblock %}

{% block content %}
{% call build_section_row() %}
<div class="col-md-6">
  {% call build_form_box(_('Music'), resource.name, 'music', container_class='col-md-12') %}
  {% call build_form(action=url_for('.MohView:put', id=resource.uuid)) %}
  {% call add_default_fields(form=form, submit_value=_('Update')) %}
  {{ render_field(form.name, disabled=True) }}
  {{ render_field(form.label) }}
  {{ render_field(form.mode) }}
  {{ render_field(form.sort) }}
  {{ render_field(form.application) }}
  {% endcall %}
  {% endcall %}
  {% endcall %}

  {% call build_form_box(_('Upload File'), box_class='box-body', container_class='col-md-12') %}
  <form class="form-horizontal" method="POST" action="{{ url_for('.MohView:upload_filename', uuid=resource['uuid']) }}"
    data-toggle="validator" enctype="multipart/form-data">
    {% call add_default_fields(form=form, submit_value=_('Upload')) %}
    <input type="file" name="moh_filename">
    {% endcall %}
  </form>
  {% endcall %}
</div>

{% call build_form_box(_('Files'), box_class='box-header', container_class='col-md-6') %}
<table class="table table-hover table-responsive table-condensed">
  <tr>
    <th>{{ _('Name') }}</th>
    <th style="width: 40px" class="text-center">{{ _('Actions') }}</th>
  </tr>
  <tbody>
    {% for file in resource.files %}
    <tr>
      <td>
        <a href="{{ url_for('.MohView:download_filename', uuid=resource['uuid'], moh_filename=file.name) }}"
          title="{{ _('Download the moh file') }}"
          class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-xs btn-default">
          {{ file['name'] }}
        </a>
      </td>
      <td class="text-center">
        <a href="{{ url_for('.MohView:delete_filename', uuid=resource['uuid'], moh_filename=file.name) }}"
          title="{{ _('Delete the moh file') }}"
          class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-xs btn-default"
          onclick="return confirm(_('Are you sure you want to delete this item?'));">
          <i class="fa fa-fw fa-remove"></i>
        </a>
      </td>
    </tr>
    {% endfor %}
  </tbody>
</table>
{% endcall %}
{% endcall %}
{% endblock %}


{% block additional_js %}
<script src="{{ url_for('.static', filename='js/moh.js') }}"></script>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/moh/templates/accent_engine/moh/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Musics'), 'link': url_for('.MohView:index'), 'icon': 'music' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Musics'), 'music') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.MohView:get', id=''), delete=url_for('.MohView:delete', id='')) %}
          <th>{{ _('Label') }}</th>
          <th>{{ _('Name') }}</th>
          <th>{{ _('Mode') }}</th>
          <th>{{ _('Parameters') }}</th>
        {% endcall %}
        {% call(moh) build_list_table_rows(resource_list['items']) %}
          <td>{{ moh.label }}</td>
          <td>{{ moh.name }}</td>
          <td>{{ mode_map[moh.mode] }}</td>
          <td>
            {% if moh.mode == 'custom' %}
              {{ _('Application') }}: {{ moh.application }}
            {% elif moh.mode == 'files' %}
              {{ _('Sort') }}: {{ sort_map[moh.sort] }}
            {% else %}
              -
            {% endif %}
          </td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Moh')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.label) }}
          {{ render_field(form.mode) }}
          {{ render_field(form.sort) }}
          {{ render_field(form.application) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}


{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/moh.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/moh/static/accent_engine/js/moh.js
Please review for update

$(document).ready(function() {
  $('#mode').on('change', function (e) {
    toggle_moh_mode.call(this)
  })
  toggle_moh_mode.call($('#mode'))
});


function toggle_moh_mode() {
  if ($(this).val() == 'custom') {
    $('#application').closest('div.form-group').show()
    $('#sort').closest('div.form-group').hide()
  } else if ($(this).val() == 'files') {
    $('#sort').closest('div.form-group').show()
    $('#application').closest('div.form-group').hide()
  } else {
    $('#sort').closest('div.form-group').hide()
    $('#application').closest('div.form-group').hide()
  }
}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/schedule/templates/accent_engine/schedule/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs(current_breadcrumbs + [
{ 'name': resource.name, 'link': url_for('.ScheduleView:get', id=resource.uuid), 'icon': 'clock-o', 'M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z' }
]) }}
{% endblock %}

{% block content %}
{% call build_section_row() %}
{% call build_form_tabs_box() %}

{% call build_tabs_navigation() %}
{{ add_tab_navigation_header(_('Schedule'), resource.name, 'clock-o', 'M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z') }}
{{ add_tab_navigation_item('general', _('General'), active=True) }}
{{ add_tab_navigation_item('exceptional_periods', _('Exceptional periods')) }}
{{ add_tab_navigation_item('open_periods', _('Open periods')) }}
{% endcall %}

{% call build_form(action=url_for('.ScheduleView:put', id=resource.id)) %}
{% call build_tabs_content() %}

{% call build_tab_content_item('general', active=True) %}
{% call add_default_fields(form=form, submit_value=_('Update')) %}
{{ render_field(form.name) }}
{{ render_field(form.timezone,
data_listing_href=url_for(listing_urls['timezone']),
data_allow_clear='true',
data_placeholder=_('Choose Timezone')) }}
{{ render_field(form.closed_destination, with_label=False) }}
{% endcall %}
{% endcall %}

{% call build_tab_content_item('exceptional_periods') %}
{{ build_add_row_entry_header() }}
{% call add_default_fields(form=form, submit_value=_('Update')) %}
{% call build_table() %}

{% call build_table_headers() %}
<th class="text-center">{{ _('Periods') }}</th>
<th class="text-center">{{ _('Destination') }}</th>
<th></th>
{% endcall %}

{% call build_table_body(class_='dynamic-table') %}
{% do form.exceptional_periods.append_entry() %}
{{ _build_exceptional_periods_entry(form.exceptional_periods.pop_entry(), template=True) }}

{% for exceptional_period in form.exceptional_periods %}
{{ _build_exceptional_periods_entry(exceptional_period) }}
{% endfor %}
{% endcall %}

{% endcall %}
{% endcall %}
{% endcall %}


{% call build_tab_content_item('open_periods') %}
{{ build_add_row_entry_header() }}
{% call add_default_fields(form=form, submit_value=_('Update')) %}

{% call build_table() %}

{% call build_table_headers() %}
<th class="text-center">{{ _('Periods') }}</th>
<th></th>
{% endcall %}

{% call build_table_body(class_='dynamic-table') %}
{% do form.open_periods.append_entry() %}
{{ _build_open_periods_entry(form.open_periods.pop_entry(), template=True) }}

{% for open_period in form.open_periods %}
{{ _build_open_periods_entry(open_period) }}
{% endfor %}
{% endcall %}

{% endcall %}

{% endcall %}

{{ build_add_row_entry_header() }}
{% endcall %}
{% endcall %}

{% endcall %}
{% endcall %}
{% endcall %}
{% endblock %}

{% macro _build_exceptional_periods_entry(exceptional_period, template=False) %}
{% if template %}
{% set tr_class = "row-template hidden" %}
{% endif %}
<tr class="{{ tr_class }}">
  <td class="sm:w-7/12 px-2">
    {{ render_field(exceptional_period.hours_start, class_='schedule_date_hours_start', placeholder=_('Hour Start')) }}
    {{ render_field(exceptional_period.hours_end, class_='schedule_date_hours_end', placeholder=_('Hour End')) }}
    {{ render_field(exceptional_period.week_days, data_select_unselect_all=True, data_disable_sort=True) }}
    {{ render_field(exceptional_period.month_days, data_select_unselect_all=True, data_disable_sort=True) }}
    {{ render_field(exceptional_period.months, data_select_unselect_all=True, data_disable_sort=True) }}
  </td>
  <td class="sm:w-5/12 px-2">
    {{ render_field(exceptional_period.destination, with_label=False) }}
  </td>
  <td class="text-center">
    {{ add_delete_entry_button() }}
  </td>
</tr>
{% endmacro %}

{% macro _build_open_periods_entry(open_period, template=False) %}
{% if template %}
{% set tr_class = "row-template hidden" %}
{% endif %}
<tr class="{{ tr_class }}">
  <td class="sm:w-full px-2">
    {{ render_field(open_period.hours_start, class_='schedule_date_hours_start', placeholder=_('Hour Start')) }}
    {{ render_field(open_period.hours_end, class_='schedule_date_hours_end', placeholder=_('Hour End')) }}
    {{ render_field(open_period.week_days, data_select_unselect_all=True, data_disable_sort=True) }}
    {{ render_field(open_period.month_days, data_select_unselect_all=True, data_disable_sort=True) }}
    {{ render_field(open_period.months, data_select_unselect_all=True, data_disable_sort=True) }}
  </td>
  <td class="text-center">
    {{ add_delete_entry_button() }}
  </td>
</tr>
{% endmacro %}

{% block additional_css %}
<link rel="stylesheet" href="{{ url_for('.static', filename='css/jquery.timepicker.min.css') }}" type="text/css" />
{% endblock %}

{% block additional_js %}
<script src="{{ url_for('.static', filename='js/jquery.timepicker.min.js') }}"></script>
<script src="{{ url_for('.static', filename='js/schedule.js') }}"></script>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/schedule/templates/accent_engine/schedule/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Schedule'), 'link': url_for('.ScheduleView:index'), 'icon': 'clock-o', 'svg': 'M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Schedules'), 'long-arrow-right') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.ScheduleView:get', id=''), delete=url_for('.ScheduleView:delete', id='')) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Timezone') }}</th>
        {% endcall %}
        {% call(schedule) build_list_table_rows(resource_list['items']) %}
          <td>{{ schedule.name }}</td>
          <td>{{ schedule.timezone }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Schedule')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.timezone,
                          data_listing_href=url_for(listing_urls['timezone']),
                          data_allow_clear='true',
                          data_placeholder=_('Choose Timezone')) }}
          {{ render_field(form.closed_destination, with_label=False) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/schedule/static/accent_engine/js/schedule.js
Please review for update

$(document).ready(function () {
  init_time_picker.call(this);

  $('.row-template').on('row:cloned', function (e, row) {
    init_time_picker.call(row);
  });
});

function init_time_picker() {
  $('[class^=schedule_date_hours_]', this).timepicker({
    'timeFormat': 'H:i',
    'step': function (i) {
      return (i % 2) ? 15 : 45;
    }
  });
}

$(document).ready(function() {
  var selectors = ['#closed_destination-queue-queue_id', '#closed_destination-queue-skill_rule_id'];
  var $selects = {};
  var ids = {};
  for (var i = 0; i < selectors.length; i++) {
    var $select = $(selectors[i]);
    var listingUrl = $select.data('listing_href') || $select.data('listing-href');
    var id = $select.val();
    $selects[listingUrl] = $select;
    ids[listingUrl] = id;
    if (!id) {
      continue;
    }

    $select.empty();

    $.ajax({ url: listingUrl, success: function(data) {
      var $select = $selects[this.url];
      var id = ids[this.url];
      $.each(data.results, function(idx, result) {
        $select.append($("<option></option>").attr('value', result.id).text(result.text));
      });
      $select.val(id);

      $select.select2({
        theme: 'bootstrap',
        placeholder: 'Select...',
      });
    }});
  }
});

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/schedule/static/accent_engine/js/jquery.timepicker.min.js
Please review for update

/*!
 * jquery-timepicker v1.11.13 - A jQuery timepicker plugin inspired by Google Calendar. It supports both mouse and keyboard navigation.
 * Copyright (c) 2017 Jon Thornton - http://jonthornton.github.com/jquery-timepicker/
 * License: MIT
 */

!function(a){"object"==typeof exports&&exports&&"object"==typeof module&&module&&module.exports===exports?a(require("jquery")):"function"==typeof define&&define.amd?define(["jquery"],a):a(jQuery)}(function(a){function b(a){var b=a[0];return b.offsetWidth>0&&b.offsetHeight>0}function c(b){if(b.minTime&&(b.minTime=t(b.minTime)),b.maxTime&&(b.maxTime=t(b.maxTime)),b.durationTime&&"function"!=typeof b.durationTime&&(b.durationTime=t(b.durationTime)),"now"==b.scrollDefault)b.scrollDefault=function(){return b.roundingFunction(t(new Date),b)};else if(b.scrollDefault&&"function"!=typeof b.scrollDefault){var c=b.scrollDefault;b.scrollDefault=function(){return b.roundingFunction(t(c),b)}}else b.minTime&&(b.scrollDefault=function(){return b.roundingFunction(b.minTime,b)});if("string"===a.type(b.timeFormat)&&b.timeFormat.match(/[gh]/)&&(b._twelveHourTime=!0),b.showOnFocus===!1&&b.showOn.indexOf("focus")!=-1&&b.showOn.splice(b.showOn.indexOf("focus"),1),b.disableTimeRanges.length>0){for(var d in b.disableTimeRanges)b.disableTimeRanges[d]=[t(b.disableTimeRanges[d][0]),t(b.disableTimeRanges[d][1])];b.disableTimeRanges=b.disableTimeRanges.sort(function(a,b){return a[0]-b[0]});for(var d=b.disableTimeRanges.length-1;d>0;d--)b.disableTimeRanges[d][0]<=b.disableTimeRanges[d-1][1]&&(b.disableTimeRanges[d-1]=[Math.min(b.disableTimeRanges[d][0],b.disableTimeRanges[d-1][0]),Math.max(b.disableTimeRanges[d][1],b.disableTimeRanges[d-1][1])],b.disableTimeRanges.splice(d,1))}return b}function d(b){var c=b.data("timepicker-settings"),d=b.data("timepicker-list");if(d&&d.length&&(d.remove(),b.data("timepicker-list",!1)),c.useSelect){d=a("<select />",{"class":"ui-timepicker-select"});var g=d}else{d=a("<ul />",{"class":"ui-timepicker-list"});var g=a("<div />",{"class":"ui-timepicker-wrapper",tabindex:-1});g.css({display:"none",position:"absolute"}).append(d)}if(c.noneOption)if(c.noneOption===!0&&(c.noneOption=c.useSelect?"Time...":"None"),a.isArray(c.noneOption)){for(var i in c.noneOption)if(parseInt(i,10)==i){var k=e(c.noneOption[i],c.useSelect);d.append(k)}}else{var k=e(c.noneOption,c.useSelect);d.append(k)}if(c.className&&g.addClass(c.className),(null!==c.minTime||null!==c.durationTime)&&c.showDuration){"function"==typeof c.step?"function":c.step;g.addClass("ui-timepicker-with-duration"),g.addClass("ui-timepicker-step-"+c.step)}var l=c.minTime;"function"==typeof c.durationTime?l=t(c.durationTime()):null!==c.durationTime&&(l=c.durationTime);var n=null!==c.minTime?c.minTime:0,o=null!==c.maxTime?c.maxTime:n+v-1;o<n&&(o+=v),o===v-1&&"string"===a.type(c.timeFormat)&&c.show2400&&(o=v);var p=c.disableTimeRanges,w=0,x=p.length,z=c.step;"function"!=typeof z&&(z=function(){return c.step});for(var i=n,A=0;i<=o;A++,i+=60*z(A)){var B=i,C=s(B,c);if(c.useSelect){var D=a("<option />",{value:C});D.text(C)}else{var D=a("<li />");D.addClass(B%v<v/2?"ui-timepicker-am":"ui-timepicker-pm"),D.data("time",u(B,c)),D.text(C)}if((null!==c.minTime||null!==c.durationTime)&&c.showDuration){var E=r(i-l,c.step);if(c.useSelect)D.text(D.text()+" ("+E+")");else{var F=a("<span />",{"class":"ui-timepicker-duration"});F.text(" ("+E+")"),D.append(F)}}w<x&&(B>=p[w][1]&&(w+=1),p[w]&&B>=p[w][0]&&B<p[w][1]&&(c.useSelect?D.prop("disabled",!0):D.addClass("ui-timepicker-disabled"))),d.append(D)}if(g.data("timepicker-input",b),b.data("timepicker-list",g),c.useSelect)b.val()&&d.val(f(t(b.val()),c)),d.on("focus",function(){a(this).data("timepicker-input").trigger("showTimepicker")}),d.on("blur",function(){a(this).data("timepicker-input").trigger("hideTimepicker")}),d.on("change",function(){m(b,a(this).val(),"select")}),m(b,d.val(),"initial"),b.hide().after(d);else{var G=c.appendTo;"string"==typeof G?G=a(G):"function"==typeof G&&(G=G(b)),G.append(g),j(b,d),d.on("mousedown click","li",function(c){b.off("focus.timepicker"),b.on("focus.timepicker-ie-hack",function(){b.off("focus.timepicker-ie-hack"),b.on("focus.timepicker",y.show)}),h(b)||b[0].focus(),d.find("li").removeClass("ui-timepicker-selected"),a(this).addClass("ui-timepicker-selected"),q(b)&&(b.trigger("hideTimepicker"),d.on("mouseup.timepicker click.timepicker","li",function(a){d.off("mouseup.timepicker click.timepicker"),g.hide()}))})}}function e(b,c){var d,e,f;return"object"==typeof b?(d=b.label,e=b.className,f=b.value):"string"==typeof b?(d=b,f=""):a.error("Invalid noneOption value"),c?a("<option />",{value:f,"class":e,text:d}):a("<li />",{"class":e,text:d}).data("time",String(f))}function f(a,b){if(a=b.roundingFunction(a,b),null!==a)return s(a,b)}function g(b){if(b.target!=window){var c=a(b.target);c.closest(".ui-timepicker-input").length||c.closest(".ui-timepicker-wrapper").length||(y.hide(),a(document).unbind(".ui-timepicker"),a(window).unbind(".ui-timepicker"))}}function h(a){var b=a.data("timepicker-settings");return(window.navigator.msMaxTouchPoints||"ontouchstart"in document)&&b.disableTouchKeyboard}function i(b,c,d){if(!d&&0!==d)return!1;var e=b.data("timepicker-settings"),f=!1,d=e.roundingFunction(d,e);return c.find("li").each(function(b,c){var e=a(c);if("number"==typeof e.data("time"))return e.data("time")==d?(f=e,!1):void 0}),f}function j(a,b){b.find("li").removeClass("ui-timepicker-selected");var c=a.data("timepicker-settings"),d=t(l(a),c);if(null!==d){var e=i(a,b,d);if(e){var f=e.offset().top-b.offset().top;(f+e.outerHeight()>b.outerHeight()||f<0)&&b.scrollTop(b.scrollTop()+e.position().top-e.outerHeight()),(c.forceRoundTime||e.data("time")===d)&&e.addClass("ui-timepicker-selected")}}}function k(b,c){if("timepicker"!=c){var d=a(this);if(""===this.value)return void m(d,null,c);if(!d.is(":focus")||b&&"change"==b.type){var e=d.data("timepicker-settings"),f=t(this.value,e);if(null===f)return void d.trigger("timeFormatError");var g=!1;if(null!==e.minTime&&null!==e.maxTime&&(f<e.minTime||f>e.maxTime)&&(g=!0),a.each(e.disableTimeRanges,function(){if(f>=this[0]&&f<this[1])return g=!0,!1}),e.forceRoundTime){var h=e.roundingFunction(f,e);h!=f&&(f=h,c=null)}var i=s(f,e);g?(m(d,i,"error")||b&&"change"==b.type)&&d.trigger("timeRangeError"):m(d,i,c)}}}function l(a){return a.is("input")?a.val():a.data("ui-timepicker-value")}function m(a,b,c){if(a.is("input")){a.val(b);var d=a.data("timepicker-settings");d.useSelect&&"select"!=c&&a.data("timepicker-list").val(f(t(b),d))}return a.data("ui-timepicker-value")!=b?(a.data("ui-timepicker-value",b),"select"==c?a.trigger("selectTime").trigger("changeTime").trigger("change","timepicker"):["error","initial"].indexOf(c)==-1&&a.trigger("changeTime"),!0):(["error","initial"].indexOf(c)==-1&&a.trigger("selectTime"),!1)}function n(a){switch(a.keyCode){case 13:case 9:return;default:a.preventDefault()}}function o(c){var d=a(this),e=d.data("timepicker-list");if(!e||!b(e)){if(40!=c.keyCode)return!0;y.show.call(d.get(0)),e=d.data("timepicker-list"),h(d)||d.focus()}switch(c.keyCode){case 13:return q(d)&&(k.call(d.get(0),{type:"change"}),y.hide.apply(this)),c.preventDefault(),!1;case 38:var f=e.find(".ui-timepicker-selected");return f.length?f.is(":first-child")||(f.removeClass("ui-timepicker-selected"),f.prev().addClass("ui-timepicker-selected"),f.prev().position().top<f.outerHeight()&&e.scrollTop(e.scrollTop()-f.outerHeight())):(e.find("li").each(function(b,c){if(a(c).position().top>0)return f=a(c),!1}),f.addClass("ui-timepicker-selected")),!1;case 40:return f=e.find(".ui-timepicker-selected"),0===f.length?(e.find("li").each(function(b,c){if(a(c).position().top>0)return f=a(c),!1}),f.addClass("ui-timepicker-selected")):f.is(":last-child")||(f.removeClass("ui-timepicker-selected"),f.next().addClass("ui-timepicker-selected"),f.next().position().top+2*f.outerHeight()>e.outerHeight()&&e.scrollTop(e.scrollTop()+f.outerHeight())),!1;case 27:e.find("li").removeClass("ui-timepicker-selected"),y.hide();break;case 9:y.hide();break;default:return!0}}function p(c){var d=a(this),e=d.data("timepicker-list"),f=d.data("timepicker-settings");if(!e||!b(e)||f.disableTextInput)return!0;if("paste"===c.type||"cut"===c.type)return void setTimeout(function(){f.typeaheadHighlight?j(d,e):e.hide()},0);switch(c.keyCode){case 96:case 97:case 98:case 99:case 100:case 101:case 102:case 103:case 104:case 105:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 65:case 77:case 80:case 186:case 8:case 46:f.typeaheadHighlight?j(d,e):e.hide()}}function q(a){var b=a.data("timepicker-settings"),c=a.data("timepicker-list"),d=null,e=c.find(".ui-timepicker-selected");return!e.hasClass("ui-timepicker-disabled")&&(e.length&&(d=e.data("time")),null!==d&&("string"!=typeof d&&(d=s(d,b)),m(a,d,"select")),!0)}function r(a,b){a=Math.abs(a);var c,d,e=Math.round(a/60),f=[];return e<60?f=[e,w.mins]:(c=Math.floor(e/60),d=e%60,30==b&&30==d&&(c+=w.decimal+5),f.push(c),f.push(1==c?w.hr:w.hrs),30!=b&&d&&(f.push(d),f.push(w.mins))),f.join(" ")}function s(b,c){if("number"!=typeof b)return null;var d=parseInt(b%60),e=parseInt(b/60%60),f=parseInt(b/3600%24),g=new Date(1970,0,2,f,e,d,0);if(isNaN(g.getTime()))return null;if("function"===a.type(c.timeFormat))return c.timeFormat(g);for(var h,i,j="",k=0;k<c.timeFormat.length;k++)switch(i=c.timeFormat.charAt(k)){case"a":j+=g.getHours()>11?w.pm:w.am;break;case"A":j+=g.getHours()>11?w.PM:w.AM;break;case"g":h=g.getHours()%12,j+=0===h?"12":h;break;case"G":h=g.getHours(),b===v&&(h=c.show2400?24:0),j+=h;break;case"h":h=g.getHours()%12,0!==h&&h<10&&(h="0"+h),j+=0===h?"12":h;break;case"H":h=g.getHours(),b===v&&(h=c.show2400?24:0),j+=h>9?h:"0"+h;break;case"i":var e=g.getMinutes();j+=e>9?e:"0"+e;break;case"s":d=g.getSeconds(),j+=d>9?d:"0"+d;break;case"\\":k++,j+=c.timeFormat.charAt(k);break;default:j+=i}return j}function t(a,b){if(""===a||null===a)return null;if("object"==typeof a)return 3600*a.getHours()+60*a.getMinutes()+a.getSeconds();if("string"!=typeof a)return a;a=a.toLowerCase().replace(/[\s\.]/g,""),"a"!=a.slice(-1)&&"p"!=a.slice(-1)||(a+="m");var c="("+w.am.replace(".","")+"|"+w.pm.replace(".","")+"|"+w.AM.replace(".","")+"|"+w.PM.replace(".","")+")?",d=new RegExp("^"+c+"([0-9]?[0-9])\\W?([0-5][0-9])?\\W?([0-5][0-9])?"+c+"$"),e=a.match(d);if(!e)return null;var f=parseInt(1*e[2],10),g=e[1]||e[5],h=f,i=1*e[3]||0,j=1*e[4]||0;if(f<=12&&g){var k=g==w.pm||g==w.PM;h=12==f?k?12:0:f+(k?12:0)}else if(b){var l=3600*f+60*i+j;if(l>=v+(b.show2400?1:0)){if(b.wrapHours===!1)return null;h=f%24}}var m=3600*h+60*i+j;if(f<12&&!g&&b&&b._twelveHourTime&&b.scrollDefault){var n=m-b.scrollDefault();n<0&&n>=v/-2&&(m=(m+v/2)%v)}return m}function u(a,b){return a==v&&b.show2400?a:a%v}var v=86400,w={am:"am",pm:"pm",AM:"AM",PM:"PM",decimal:".",mins:"mins",hr:"hr",hrs:"hrs"},x={appendTo:"body",className:null,closeOnWindowScroll:!1,disableTextInput:!1,disableTimeRanges:[],disableTouchKeyboard:!1,durationTime:null,forceRoundTime:!1,maxTime:null,minTime:null,noneOption:!1,orientation:"l",roundingFunction:function(a,b){if(null===a)return null;if("number"!=typeof b.step)return a;var c=a%(60*b.step),d=b.minTime||0;return c-=d%(60*b.step),c>=30*b.step?a+=60*b.step-c:a-=c,u(a,b)},scrollDefault:null,selectOnBlur:!1,show2400:!1,showDuration:!1,showOn:["click","focus"],showOnFocus:!0,step:30,stopScrollPropagation:!1,timeFormat:"g:ia",typeaheadHighlight:!0,useSelect:!1,wrapHours:!0},y={init:function(b){return this.each(function(){var e=a(this),f=[];for(var g in x)e.data(g)&&(f[g]=e.data(g));var h=a.extend({},x,b,f);if(h.lang&&(w=a.extend(w,h.lang)),h=c(h),e.data("timepicker-settings",h),e.addClass("ui-timepicker-input"),h.useSelect)d(e);else{if(e.prop("autocomplete","off"),h.showOn)for(var i in h.showOn)e.on(h.showOn[i]+".timepicker",y.show);e.on("change.timepicker",k),e.on("keydown.timepicker",o),e.on("keyup.timepicker",p),h.disableTextInput&&e.on("keydown.timepicker",n),e.on("cut.timepicker",p),e.on("paste.timepicker",p),k.call(e.get(0),null,"initial")}})},show:function(c){var e=a(this),f=e.data("timepicker-settings");if(c&&c.preventDefault(),f.useSelect)return void e.data("timepicker-list").focus();h(e)&&e.blur();var k=e.data("timepicker-list");if(!e.prop("readonly")&&(k&&0!==k.length&&"function"!=typeof f.durationTime||(d(e),k=e.data("timepicker-list")),!b(k))){e.data("ui-timepicker-value",e.val()),j(e,k),y.hide(),k.show();var m={};f.orientation.match(/r/)?m.left=e.offset().left+e.outerWidth()-k.outerWidth()+parseInt(k.css("marginLeft").replace("px",""),10):m.left=e.offset().left+parseInt(k.css("marginLeft").replace("px",""),10);var n;n=f.orientation.match(/t/)?"t":f.orientation.match(/b/)?"b":e.offset().top+e.outerHeight(!0)+k.outerHeight()>a(window).height()+a(window).scrollTop()?"t":"b","t"==n?(k.addClass("ui-timepicker-positioned-top"),m.top=e.offset().top-k.outerHeight()+parseInt(k.css("marginTop").replace("px",""),10)):(k.removeClass("ui-timepicker-positioned-top"),m.top=e.offset().top+e.outerHeight()+parseInt(k.css("marginTop").replace("px",""),10)),k.offset(m);var o=k.find(".ui-timepicker-selected");if(!o.length){var p=t(l(e));null!==p?o=i(e,k,p):f.scrollDefault&&(o=i(e,k,f.scrollDefault()))}if(o.length&&!o.hasClass("ui-timepicker-disabled")||(o=k.find("li:not(.ui-timepicker-disabled):first")),o&&o.length){var q=k.scrollTop()+o.position().top-o.outerHeight();k.scrollTop(q)}else k.scrollTop(0);return f.stopScrollPropagation&&a(document).on("wheel.ui-timepicker",".ui-timepicker-wrapper",function(b){b.preventDefault();var c=a(this).scrollTop();a(this).scrollTop(c+b.originalEvent.deltaY)}),a(document).on("touchstart.ui-timepicker mousedown.ui-timepicker",g),a(window).on("resize.ui-timepicker",g),f.closeOnWindowScroll&&a(document).on("scroll.ui-timepicker",g),e.trigger("showTimepicker"),this}},hide:function(c){var d=a(this),e=d.data("timepicker-settings");return e&&e.useSelect&&d.blur(),a(".ui-timepicker-wrapper").each(function(){var c=a(this);if(b(c)){var d=c.data("timepicker-input"),e=d.data("timepicker-settings");e&&e.selectOnBlur&&q(d),c.hide(),d.trigger("hideTimepicker")}}),this},option:function(b,e){return"string"==typeof b&&"undefined"==typeof e?a(this).data("timepicker-settings")[b]:this.each(function(){var f=a(this),g=f.data("timepicker-settings"),h=f.data("timepicker-list");"object"==typeof b?g=a.extend(g,b):"string"==typeof b&&(g[b]=e),g=c(g),f.data("timepicker-settings",g),k.call(f.get(0),{type:"change"},"initial"),h&&(h.remove(),f.data("timepicker-list",!1)),g.useSelect&&d(f)})},getSecondsFromMidnight:function(){return t(l(this))},getTime:function(a){var b=this,c=l(b);if(!c)return null;var d=t(c);if(null===d)return null;a||(a=new Date);var e=new Date(a);return e.setHours(d/3600),e.setMinutes(d%3600/60),e.setSeconds(d%60),e.setMilliseconds(0),e},isVisible:function(){var a=this,c=a.data("timepicker-list");return!(!c||!b(c))},setTime:function(a){var b=this,c=b.data("timepicker-settings");if(c.forceRoundTime)var d=f(t(a),c);else var d=s(t(a),c);return a&&null===d&&c.noneOption&&(d=a),m(b,d,"initial"),k.call(b.get(0),{type:"change"},"initial"),b.data("timepicker-list")&&j(b,b.data("timepicker-list")),this},remove:function(){var a=this;if(a.hasClass("ui-timepicker-input")){var b=a.data("timepicker-settings");return a.removeAttr("autocomplete","off"),a.removeClass("ui-timepicker-input"),a.removeData("timepicker-settings"),a.off(".timepicker"),a.data("timepicker-list")&&a.data("timepicker-list").remove(),b.useSelect&&a.show(),a.removeData("timepicker-list"),this}}};a.fn.timepicker=function(b){return this.length?y[b]?this.hasClass("ui-timepicker-input")?y[b].apply(this,Array.prototype.slice.call(arguments,1)):this:"object"!=typeof b&&b?void a.error("Method "+b+" does not exist on jQuery.timepicker"):y.init.apply(this,arguments):this}});

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/dird_source/templates/accent_engine/dird_source/form/form_csv.html
Please review for update

{% extends "layout.html" %}

{% set backend = 'csv' %}

{% if form_mode == 'add' %}
  {% set url_action = url_for('.DirdSourceView:post') %}
  {% set submit_value = _('Add') %}
  {% set breadcrumb = { 'name': _('Add CSV source'), 'icon': 'address-book' } %}
{% else %}
  {% set url_action = url_for('.DirdSourceView:put', backend=backend, id=resource.uuid) %}
  {% set submit_value = _('Edit') %}
  {% set breadcrumb = { 'name': resource.name, 'link': url_for('.DirdSourceView:get', backend=backend, id=resource.uuid), 'icon': 'address-book' } %}
{% endif %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [breadcrumb]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      <!-- tabs -->
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_item('csv', _('CSV'), active=True) }}
        {{ add_tab_navigation_item('first_matched_columns', _('First matched columns')) }}
        {{ add_tab_navigation_item('format_columns', _('Format columns')) }}
        {{ add_tab_navigation_item('searched_columns', _('Search columns')) }}
      {% endcall %}

      {% call build_form(action=url_action) %}
        {% call build_tabs_content() %}
          <!-- CSV -->
          {% call build_tab_content_item('csv', active=True) %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {{ render_field(form.backend) }}
              {{ render_field(form.name) }}
              {{ render_field(form.csv_config.file) }}
              {{ render_field(form.csv_config.delimiter) }}
              {{ render_field(form.csv_config.unique_column) }}
            {% endcall %}
          {% endcall %}

          <!-- first_matched_columns -->
          {% call build_tab_content_item('first_matched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.csv_config.first_matched_columns.append_entry() %}
                  {{ _build_column_entry(form.csv_config.first_matched_columns.pop_entry(), template=True) }}

                  {% for column in form.csv_config.first_matched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- format_columns -->
          {% call build_tab_content_item('format_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.csv_config.format_columns.append_entry() %}
                  {{ _build_column_value_entry(form.csv_config.format_columns.pop_entry(), template=True) }}

                  {% for column in form.csv_config.format_columns %}
                    {{ _build_column_value_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- Search columns -->
          {% call build_tab_content_item('searched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.csv_config.searched_columns.append_entry() %}
                  {{ _build_column_entry(form.csv_config.searched_columns.pop_entry(), template=True) }}

                  {% for column in form.csv_config.searched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_column_value_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
     <td>{{ render_field(option.key, with_label=False) }}</td>
     <td>{{ render_field(option.value, with_label=False) }}</td>
     <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

{% macro _build_column_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/dird_source/templates/accent_engine/dird_source/form/form_office365.html
Please review for update

{% extends "layout.html" %}

{% set backend = 'office365' %}

{% if form_mode == 'add' %}
  {% set url_action = url_for('.DirdSourceView:post') %}
  {% set submit_value = _('Add') %}
  {% set breadcrumb = { 'name': _('Add Office 365 source'), 'icon': 'address-book' } %}
{% else %}
  {% set url_action = url_for('.DirdSourceView:put', backend=backend, id=resource.uuid) %}
  {% set submit_value = _('Edit') %}
  {% set breadcrumb = { 'name': resource.name, 'link': url_for('.DirdSourceView:get', backend=backend, id=resource.uuid), 'icon': 'address-book' } %}
{% endif %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [breadcrumb]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      <!-- tabs -->
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_item('office365', _('Office 365'), active=True) }}
        {{ add_tab_navigation_item('first_matched_columns', _('First matched columns')) }}
        {{ add_tab_navigation_item('format_columns', _('Format columns')) }}
        {{ add_tab_navigation_item('searched_columns', _('Search columns')) }}
      {% endcall %}

      {% call build_form(action=url_action) %}
        {% call build_tabs_content() %}
          <!-- office 365 -->
          {% call build_tab_content_item('office365', active=True) %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {{ render_field(form.backend) }}
              {{ render_field(form.name) }}
              {{ render_field(form.office365_config.endpoint) }}

              <h4>Authentication</h4>
              {{ render_field(form.office365_config.auth.host) }}
              {{ render_field(form.office365_config.auth.port) }}
              {{ render_field(form.office365_config.auth.prefix_) }}
              {{ render_field(form.office365_config.auth.https, class_="auth_https") }}
              {{ render_field(form.office365_config.auth.verify_certificate, class_="verify_certificate") }}
              {{ render_field(form.office365_config.auth.certificate_path, class_="certificate_path") }}
              {{ render_field(form.office365_config.auth.version) }}

            {% endcall %}
          {% endcall %}

          <!-- first_matched_columns -->
          {% call build_tab_content_item('first_matched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.office365_config.first_matched_columns.append_entry() %}
                  {{ _build_column_entry(form.office365_config.first_matched_columns.pop_entry(), template=True) }}

                  {% for column in form.office365_config.first_matched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- format_columns -->
          {% call build_tab_content_item('format_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.office365_config.format_columns.append_entry() %}
                  {{ _build_column_value_entry(form.office365_config.format_columns.pop_entry(), template=True) }}

                  {% for column in form.office365_config.format_columns %}
                    {{ _build_column_value_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- Search columns -->
          {% call build_tab_content_item('searched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.office365_config.searched_columns.append_entry() %}
                  {{ _build_column_entry(form.office365_config.searched_columns.pop_entry(), template=True) }}

                  {% for column in form.office365_config.searched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_column_value_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
     <td>{{ render_field(option.key, with_label=False) }}</td>
     <td>{{ render_field(option.value, with_label=False) }}</td>
     <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

{% macro _build_column_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}


{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/dird_source.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/dird_source/templates/accent_engine/dird_source/form/form_phonebook.html
Please review for update

{% extends "layout.html" %}

{% set backend = 'phonebook' %}

{% if form_mode == 'add' %}
  {% set url_action = url_for('.DirdSourceView:post') %}
  {% set submit_value = _('Add') %}
  {% set breadcrumb = { 'name': _('Add Phonebook source'), 'icon': 'address-book' } %}
{% else %}
  {% set url_action = url_for('.DirdSourceView:put', backend=backend, id=resource.uuid) %}
  {% set submit_value = _('Edit') %}
  {% set breadcrumb = { 'name': resource.name, 'link': url_for('.DirdSourceView:get', backend=backend, id=resource.uuid), 'icon': 'address-book' } %}
{% endif %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [breadcrumb]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      <!-- tabs -->
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_item('phonebook', _('Phonebook'), active=True) }}
        {{ add_tab_navigation_item('first_matched_columns', _('First matched columns')) }}
        {{ add_tab_navigation_item('format_columns', _('Format columns')) }}
        {{ add_tab_navigation_item('searched_columns', _('Search columns')) }}
      {% endcall %}

      {% call build_form(action=url_action) %}
        {% call build_tabs_content() %}
          <!-- Phonebook -->
          {% call build_tab_content_item('phonebook', active=True) %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {{ render_field(form.backend) }}
              {{ render_field(form.name) }}
              {{ render_field(form.phonebook_config.phonebook_uuid,
                              data_listing_href=url_for(listing_urls['phonebook']),
                              data_placeholder=_('Choose Phonebook')) }}
              {{ render_field(form.phonebook_config.phonebook_name) }}
            {% endcall %}
          {% endcall %}

          <!-- first_matched_columns -->
          {% call build_tab_content_item('first_matched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.phonebook_config.first_matched_columns.append_entry() %}
                  {{ _build_column_entry(form.phonebook_config.first_matched_columns.pop_entry(), template=True) }}

                  {% for column in form.phonebook_config.first_matched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- format_columns -->
          {% call build_tab_content_item('format_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.phonebook_config.format_columns.append_entry() %}
                  {{ _build_column_value_entry(form.phonebook_config.format_columns.pop_entry(), template=True) }}

                  {% for column in form.phonebook_config.format_columns %}
                    {{ _build_column_value_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- Search columns -->
          {% call build_tab_content_item('searched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.phonebook_config.searched_columns.append_entry() %}
                  {{ _build_column_entry(form.phonebook_config.searched_columns.pop_entry(), template=True) }}

                  {% for column in form.phonebook_config.searched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_column_value_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
     <td>{{ render_field(option.key, with_label=False) }}</td>
     <td>{{ render_field(option.value, with_label=False) }}</td>
     <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

{% macro _build_column_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/dird_source/templates/accent_engine/dird_source/form/form_csv_ws.html
Please review for update

{% extends "layout.html" %}

{% set backend = 'csv_ws' %}

{% if form_mode == 'add' %}
  {% set url_action = url_for('.DirdSourceView:post') %}
  {% set submit_value = _('Add') %}
  {% set breadcrumb = { 'name': _('Add CSV WS source'), 'icon': 'address-book' } %}
{% else %}
  {% set url_action = url_for('.DirdSourceView:put', backend=backend, id=resource.uuid) %}
  {% set submit_value = _('Edit') %}
  {% set breadcrumb = { 'name': resource.name, 'link': url_for('.DirdSourceView:get', backend=backend, id=resource.uuid), 'icon': 'address-book' } %}
{% endif %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [breadcrumb]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      <!-- tabs -->
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_item('csv_ws', _('CSV WS'), active=True) }}
        {{ add_tab_navigation_item('first_matched_columns', _('First matched columns')) }}
        {{ add_tab_navigation_item('format_columns', _('Format columns')) }}
        {{ add_tab_navigation_item('searched_columns', _('Search columns')) }}
      {% endcall %}

      {% call build_form(action=url_action) %}
        {% call build_tabs_content() %}
          <!-- CSV -->
          {% call build_tab_content_item('csv_ws', active=True) %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {{ render_field(form.backend) }}
              {{ render_field(form.name) }}
              {{ render_field(form.csv_ws_config.list_url) }}
              {{ render_field(form.csv_ws_config.lookup_url) }}
              {{ render_field(form.csv_ws_config.timeout) }}
              {{ render_field(form.csv_ws_config.delimiter) }}
              {{ render_field(form.csv_ws_config.unique_column) }}
            {% endcall %}
          {% endcall %}

          <!-- first_matched_columns -->
          {% call build_tab_content_item('first_matched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.csv_ws_config.first_matched_columns.append_entry() %}
                  {{ _build_column_entry(form.csv_ws_config.first_matched_columns.pop_entry(), template=True) }}

                  {% for column in form.csv_ws_config.first_matched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- format_columns -->
          {% call build_tab_content_item('format_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.csv_ws_config.format_columns.append_entry() %}
                  {{ _build_column_value_entry(form.csv_ws_config.format_columns.pop_entry(), template=True) }}

                  {% for column in form.csv_ws_config.format_columns %}
                    {{ _build_column_value_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- Search columns -->
          {% call build_tab_content_item('searched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.csv_ws_config.searched_columns.append_entry() %}
                  {{ _build_column_entry(form.csv_ws_config.searched_columns.pop_entry(), template=True) }}

                  {% for column in form.csv_ws_config.searched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_column_value_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
     <td>{{ render_field(option.key, with_label=False) }}</td>
     <td>{{ render_field(option.value, with_label=False) }}</td>
     <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

{% macro _build_column_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/dird_source/templates/accent_engine/dird_source/form/form_accent.html
Please review for update

{% extends "layout.html" %}

{% set backend = 'accent' %}

{% if form_mode == 'add' %}
{% set url_action = url_for('.DirdSourceView:post') %}
{% set submit_value = _('Add') %}
{% set breadcrumb = { 'name': _('Add Accent source'), 'icon': 'address-book' } %}
{% else %}
{% set url_action = url_for('.DirdSourceView:put', backend=backend, id=resource.uuid) %}
{% set submit_value = _('Edit') %}
{% set breadcrumb = { 'name': resource.name, 'link': url_for('.DirdSourceView:get', backend=backend, id=resource.uuid),
'icon': 'address-book' } %}
{% endif %}

{% block content_header %}
{{ build_breadcrumbs(current_breadcrumbs + [breadcrumb]) }}
{% endblock %}

{% block content %}
{% call build_section_row() %}
{% call build_form_tabs_box() %}
<!-- tabs -->
{% call build_tabs_navigation() %}
{{ add_tab_navigation_item('accent', _('Accent'), active=True) }}
{{ add_tab_navigation_item('first_matched_columns', _('First matched columns')) }}
{{ add_tab_navigation_item('format_columns', _('Format columns')) }}
{{ add_tab_navigation_item('searched_columns', _('Search columns')) }}
{% endcall %}

{% call build_form(action=url_action) %}
{% call build_tabs_content() %}
<!-- Accent -->
{% call build_tab_content_item('accent', active=True) %}
{% call add_default_fields(form=form, submit_value=submit_value) %}
{{ render_field(form.backend) }}
{{ render_field(form.name) }}

<h4>Authentication</h4>
{{ render_field(form.accent_config.auth.host) }}
{{ render_field(form.accent_config.auth.port) }}
{{ render_field(form.accent_config.auth.prefix_) }}
{{ render_field(form.accent_config.auth.https, class_="auth_https") }}
{{ render_field(form.accent_config.auth.verify_certificate, class_="auth_verify_certificate") }}
{{ render_field(form.accent_config.auth.certificate_path, class_="auth_certificate_path") }}
{{ render_field(form.accent_config.auth.timeout) }}
{{ render_field(form.accent_config.auth.key_file) }}
{{ render_field(form.accent_config.auth.username) }}
{{ render_field(form.accent_config.auth.password) }}
{{ render_field(form.accent_config.auth.version) }}

<h4>Confd</h4>
{{ render_field(form.accent_config.confd.host) }}
{{ render_field(form.accent_config.confd.port) }}
{{ render_field(form.accent_config.confd.prefix_) }}
{{ render_field(form.accent_config.confd.https, class_="confd_https") }}
{{ render_field(form.accent_config.confd.verify_certificate, class_="confd_verify_certificate") }}
{{ render_field(form.accent_config.confd.certificate_path, class_="confd_certificate_path") }}
{{ render_field(form.accent_config.confd.timeout) }}
{{ render_field(form.accent_config.confd.version) }}
{% endcall %}
{% endcall %}

<!-- first_matched_columns -->
{% call build_tab_content_item('first_matched_columns') %}
{% call add_default_fields(form=form, submit_value=submit_value) %}
{% call build_table() %}
{% call build_table_headers() %}
<th>Value</th>
<th style="width: 21px"></th>
{% endcall %}
{% call build_table_body(class_='dynamic-table') %}
{% do form.accent_config.first_matched_columns.append_entry() %}
{{ _build_column_entry(form.accent_config.first_matched_columns.pop_entry(), template=True) }}

{% for column in form.accent_config.first_matched_columns %}
{{ _build_column_entry(column) }}
{% endfor %}
{% endcall %}
{% endcall %}
{{ build_add_row_entry_header() }}
{% endcall %}
{% endcall %}

<!-- format_columns -->
{% call build_tab_content_item('format_columns') %}
{% call add_default_fields(form=form, submit_value=submit_value) %}
{% call build_table() %}
{% call build_table_headers() %}
<th>Name</th>
<th>Value</th>
<th style="width: 21px"></th>
{% endcall %}
{% call build_table_body(class_='dynamic-table') %}
{% do form.accent_config.format_columns.append_entry() %}
{{ _build_column_value_entry(form.accent_config.format_columns.pop_entry(), template=True) }}

{% for column in form.accent_config.format_columns %}
{{ _build_column_value_entry(column) }}
{% endfor %}
{% endcall %}
{% endcall %}
{{ build_add_row_entry_header() }}
{% endcall %}
{% endcall %}

<!-- Search columns -->
{% call build_tab_content_item('searched_columns') %}
{% call add_default_fields(form=form, submit_value=submit_value) %}
{% call build_table() %}
{% call build_table_headers() %}
<th>Name</th>
<th style="width: 21px"></th>
{% endcall %}
{% call build_table_body(class_='dynamic-table') %}
{% do form.accent_config.searched_columns.append_entry() %}
{{ _build_column_entry(form.accent_config.searched_columns.pop_entry(), template=True) }}

{% for column in form.accent_config.searched_columns %}
{{ _build_column_entry(column) }}
{% endfor %}
{% endcall %}
{% endcall %}
{{ build_add_row_entry_header() }}
{% endcall %}
{% endcall %}

{% endcall %}
{% endcall %}
{% endcall %}
{% endcall %}
{% endblock %}

{% macro _build_column_value_entry(option, template=False) %}
{% if template %}
{% set tr_class = "row-template hidden" %}
{% else %}
{% set tr_class = "row-line" %}
{% endif %}
<tr class="{{ tr_class }}">
  <td>{{ render_field(option.key, with_label=False) }}</td>
  <td>{{ render_field(option.value, with_label=False) }}</td>
  <td>{{ add_delete_entry_button() }}</td>
</tr>
{% endmacro %}

{% macro _build_column_entry(option, template=False) %}
{% if template %}
{% set tr_class = "row-template hidden" %}
{% else %}
{% set tr_class = "row-line" %}
{% endif %}
<tr class="{{ tr_class }}">
  <td>{{ render_field(option.value, with_label=False) }}</td>
  <td>{{ add_delete_entry_button() }}</td>
</tr>
{% endmacro %}

{% block additional_js %}
<script src="{{ url_for('.static', filename='js/dird_source.js') }}"></script>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/dird_source/templates/accent_engine/dird_source/form/form_ldap.html
Please review for update

{% extends "layout.html" %}

{% set backend = 'ldap' %}

{% if form_mode == 'add' %}
  {% set url_action = url_for('.DirdSourceView:post') %}
  {% set submit_value = _('Add') %}
  {% set breadcrumb = { 'name': _('Add LDAP source'), 'icon': 'address-book' } %}
{% else %}
  {% set url_action = url_for('.DirdSourceView:put', backend=backend, id=resource.uuid) %}
  {% set submit_value = _('Edit') %}
  {% set breadcrumb = { 'name': resource.name, 'link': url_for('.DirdSourceView:get', backend=backend, id=resource.uuid), 'icon': 'address-book' } %}
{% endif %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [breadcrumb]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      <!-- tabs -->
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_item('ldap', _('LDAP'), active=True) }}
        {{ add_tab_navigation_item('first_matched_columns', _('First matched columns')) }}
        {{ add_tab_navigation_item('columns', _('Columns')) }}
        {{ add_tab_navigation_item('searched_columns', _('Search columns')) }}
      {% endcall %}

      {% call build_form(action=url_action) %}
        {% call build_tabs_content() %}
          <!-- LDAP -->
          {% call build_tab_content_item('ldap', active=True) %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {{ render_field(form.backend) }}
              {{ render_field(form.name) }}
              {{ render_field(form.ldap_config.ldap_base_dn) }}
              {{ render_field(form.ldap_config.custom_filter) }}
              {{ render_field(form.ldap_config.ldap_password) }}
              {{ render_field(form.ldap_config.ldap_uri) }}
              {{ render_field(form.ldap_config.ldap_username) }}
              {{ render_field(form.ldap_config.unique_column) }}
              {{ render_field(form.ldap_config.unique_column_format) }}
            {% endcall %}
          {% endcall %}

          <!-- first_matched_columns -->
          {% call build_tab_content_item('first_matched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.ldap_config.first_matched_columns.append_entry() %}
                  {{ _build_column_entry(form.ldap_config.first_matched_columns.pop_entry(), template=True) }}

                  {% for column in form.ldap_config.first_matched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- Columns -->
          {% call build_tab_content_item('columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.ldap_config.format_columns.append_entry() %}
                  {{ _build_column_value_entry(form.ldap_config.format_columns.pop_entry(), template=True) }}

                  {% for column in form.ldap_config.format_columns %}
                    {{ _build_column_value_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- Search columns -->
          {% call build_tab_content_item('searched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.ldap_config.searched_columns.append_entry() %}
                  {{ _build_column_entry(form.ldap_config.searched_columns.pop_entry(), template=True) }}

                  {% for column in form.ldap_config.searched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_column_value_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
     <td>{{ render_field(option.key, with_label=False) }}</td>
     <td>{{ render_field(option.value, with_label=False) }}</td>
     <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

{% macro _build_column_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/dird_source/templates/accent_engine/dird_source/form/form_google.html
Please review for update

{% extends "layout.html" %}

{% set backend = 'google' %}

{% if form_mode == 'add' %}
  {% set url_action = url_for('.DirdSourceView:post') %}
  {% set submit_value = _('Add') %}
  {% set breadcrumb = { 'name': _('Add Google source'), 'icon': 'address-book' } %}
{% else %}
  {% set url_action = url_for('.DirdSourceView:put', backend=backend, id=resource.uuid) %}
  {% set submit_value = _('Edit') %}
  {% set breadcrumb = { 'name': resource.name, 'link': url_for('.DirdSourceView:get', backend=backend, id=resource.uuid), 'icon': 'address-book' } %}
{% endif %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [breadcrumb]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      <!-- tabs -->
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_item('google', _('Google'), active=True) }}
	{{ add_tab_navigation_item('first_matched_columns', _('First matched columns')) }}
        {{ add_tab_navigation_item('format_columns', _('Format columns')) }}
        {{ add_tab_navigation_item('searched_columns', _('Search columns')) }}
      {% endcall %}

      {% call build_form(action=url_action) %}
        {% call build_tabs_content() %}
          <!-- google -->
          {% call build_tab_content_item('google', active=True) %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {{ render_field(form.backend) }}
              {{ render_field(form.name) }}

              <h4>Authentication</h4>
              {{ render_field(form.google_config.auth.host) }}
              {{ render_field(form.google_config.auth.port) }}
              {{ render_field(form.google_config.auth.prefix_) }}
              {{ render_field(form.google_config.auth.https, class_="auth_https") }}
              {{ render_field(form.google_config.auth.verify_certificate, class_="verify_certificate") }}
              {{ render_field(form.google_config.auth.certificate_path, class_="certificate_path") }}
              {{ render_field(form.google_config.auth.version) }}

            {% endcall %}
          {% endcall %}

          <!-- first_matched_columns -->
          {% call build_tab_content_item('first_matched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.google_config.first_matched_columns.append_entry() %}
                  {{ _build_column_entry(form.google_config.first_matched_columns.pop_entry(), template=True) }}

                  {% for column in form.google_config.first_matched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- format_columns -->
          {% call build_tab_content_item('format_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.google_config.format_columns.append_entry() %}
                  {{ _build_column_value_entry(form.google_config.format_columns.pop_entry(), template=True) }}

                  {% for column in form.google_config.format_columns %}
                    {{ _build_column_value_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- Search columns -->
          {% call build_tab_content_item('searched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.google_config.searched_columns.append_entry() %}
                  {{ _build_column_entry(form.google_config.searched_columns.pop_entry(), template=True) }}

                  {% for column in form.google_config.searched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_column_value_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
     <td>{{ render_field(option.key, with_label=False) }}</td>
     <td>{{ render_field(option.value, with_label=False) }}</td>
     <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

{% macro _build_column_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}


{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/dird_source.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/dird_source/templates/accent_engine/dird_source/form/form_conference.html
Please review for update

{% extends "layout.html" %}

{% set backend = 'conference' %}

{% if form_mode == 'add' %}
  {% set url_action = url_for('.DirdSourceView:post') %}
  {% set submit_value = _('Add') %}
  {% set breadcrumb = { 'name': _('Add Conference source'), 'icon': 'address-book' } %}
{% else %}
  {% set url_action = url_for('.DirdSourceView:put', backend=backend, id=resource.uuid) %}
  {% set submit_value = _('Edit') %}
  {% set breadcrumb = { 'name': resource.name, 'link': url_for('.DirdSourceView:get', backend=backend, id=resource.uuid), 'icon': 'address-book' } %}
{% endif %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [breadcrumb]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      <!-- tabs -->
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_item('conference', _('Conference'), active=True) }}
        {{ add_tab_navigation_item('first_matched_columns', _('First matched columns')) }}
        {{ add_tab_navigation_item('format_columns', _('Format columns')) }}
        {{ add_tab_navigation_item('searched_columns', _('Search columns')) }}
      {% endcall %}

      {% call build_form(action=url_action) %}
        {% call build_tabs_content() %}
          <!-- Conference -->
          {% call build_tab_content_item('conference', active=True) %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {{ render_field(form.backend) }}
              {{ render_field(form.name) }}

              <h4>Authentication</h4>
              {{ render_field(form.conference_config.auth.host) }}
              {{ render_field(form.conference_config.auth.port) }}
              {{ render_field(form.conference_config.auth.prefix_) }}
              {{ render_field(form.conference_config.auth.https, class_="auth_https") }}
              {{ render_field(form.conference_config.auth.verify_certificate, class_="auth_verify_certificate") }}
              {{ render_field(form.conference_config.auth.certificate_path, class_="auth_certificate_path") }}
              {{ render_field(form.conference_config.auth.timeout) }}
              {{ render_field(form.conference_config.auth.key_file) }}
              {{ render_field(form.conference_config.auth.username) }}
              {{ render_field(form.conference_config.auth.password) }}
              {{ render_field(form.conference_config.auth.version) }}

              <h4>Confd</h4>
              {{ render_field(form.conference_config.confd.host) }}
              {{ render_field(form.conference_config.confd.port) }}
              {{ render_field(form.conference_config.confd.prefix_) }}
              {{ render_field(form.conference_config.confd.https, class_="confd_https") }}
              {{ render_field(form.conference_config.confd.verify_certificate, class_="confd_verify_certificate") }}
              {{ render_field(form.conference_config.confd.certificate_path, class_="confd_certificate_path") }}
              {{ render_field(form.conference_config.confd.timeout) }}
              {{ render_field(form.conference_config.confd.version) }}
            {% endcall %}
          {% endcall %}

          <!-- first_matched_columns -->
          {% call build_tab_content_item('first_matched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.conference_config.first_matched_columns.append_entry() %}
                  {{ _build_column_entry(form.conference_config.first_matched_columns.pop_entry(), template=True) }}

                  {% for column in form.conference_config.first_matched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- format_columns -->
          {% call build_tab_content_item('format_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.conference_config.format_columns.append_entry() %}
                  {{ _build_column_value_entry(form.conference_config.format_columns.pop_entry(), template=True) }}

                  {% for column in form.conference_config.format_columns %}
                    {{ _build_column_value_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- Search columns -->
          {% call build_tab_content_item('searched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.conference_config.searched_columns.append_entry() %}
                  {{ _build_column_entry(form.conference_config.searched_columns.pop_entry(), template=True) }}

                  {% for column in form.conference_config.searched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_column_value_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
     <td>{{ render_field(option.key, with_label=False) }}</td>
     <td>{{ render_field(option.value, with_label=False) }}</td>
     <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

{% macro _build_column_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/dird_source.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/dird_source/templates/accent_engine/dird_source/form/form_personal.html
Please review for update

{% extends "layout.html" %}

{% set backend = 'personal' %}

{% if form_mode == 'add' %}
  {% set url_action = url_for('.DirdSourceView:post') %}
  {% set submit_value = _('Add') %}
  {% set breadcrumb = { 'name': _('Add a Personal source'), 'icon': 'address-book' } %}
{% else %}
  {% set url_action = url_for('.DirdSourceView:put', backend=backend, id=resource.uuid) %}
  {% set submit_value = _('Edit') %}
  {% set breadcrumb = { 'name': resource.name, 'link': url_for('.DirdSourceView:get', backend=backend, id=resource.uuid), 'icon': 'address-book' } %}
{% endif %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [breadcrumb]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      <!-- tabs -->
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_item('personal', _('Personal'), active=True) }}
        {{ add_tab_navigation_item('first_matched_columns', _('First matched columns')) }}
        {{ add_tab_navigation_item('format_columns', _('Format columns')) }}
        {{ add_tab_navigation_item('searched_columns', _('Search columns')) }}
      {% endcall %}

      {% call build_form(action=url_action) %}
        {% call build_tabs_content() %}
          <!-- Personal -->
          {% call build_tab_content_item('personal', active=True) %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {{ render_field(form.backend) }}
              {{ render_field(form.name) }}
            {% endcall %}
          {% endcall %}

          <!-- first_matched_columns -->
          {% call build_tab_content_item('first_matched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.personal_config.first_matched_columns.append_entry() %}
                  {{ _build_column_entry(form.personal_config.first_matched_columns.pop_entry(), template=True) }}

                  {% for column in form.personal_config.first_matched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- format_columns -->
          {% call build_tab_content_item('format_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th>Value</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.personal_config.format_columns.append_entry() %}
                  {{ _build_column_value_entry(form.personal_config.format_columns.pop_entry(), template=True) }}

                  {% for column in form.personal_config.format_columns %}
                    {{ _build_column_value_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          <!-- Search columns -->
          {% call build_tab_content_item('searched_columns') %}
            {% call add_default_fields(form=form, submit_value=submit_value) %}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>Name</th>
                  <th style="width: 21px"></th>
                {% endcall %}
                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.personal_config.searched_columns.append_entry() %}
                  {{ _build_column_entry(form.personal_config.searched_columns.pop_entry(), template=True) }}

                  {% for column in form.personal_config.searched_columns %}
                    {{ _build_column_entry(column) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_column_value_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
     <td>{{ render_field(option.key, with_label=False) }}</td>
     <td>{{ render_field(option.value, with_label=False) }}</td>
     <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

{% macro _build_column_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/dird_source/templates/accent_engine/dird_source/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs(current_breadcrumbs + [
{ 'name': _('Directory'), 'link': url_for('.DirdSourceView:index'), 'icon': 'address-book' }
]) }}
{% endblock %}

{% block content %}
<section class="content">
  {% call build_list_containers(_('Directory'), 'address-book') %}
  {% call build_list_table() %}
  {% call build_list_table_headers(get=url_for('.DirdSourceView:get', backend='', id=''),
  delete=url_for('.DirdSourceView:delete', backend='', id='')) %}
  <th>{{ _('Name') }}</th>
  <th>{{ _('Backend') }}</th>
  {% endcall %}
  {% call(source) build_list_table_rows(resource_list['items']) %}
  <td>{{ source.name }}</td>
  <td>{{ source.backend }}</td>
  {% endcall %}
  {% endcall %}
  {% endcall %}

  {% call build_hidden_add_containers(_('Add Directory Source')) %}
  {% for backend in backend_list['items'] %}
  <a class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-block btn-default"
    href="{{ url_for('.DirdSourceView:new', backend=backend['name']) }}">
    {{ backend['name'] }}
  </a>
  {% endfor %}
  {% endcall %}
</section>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/dird_source/static/accent_engine/js/dird_source.js
Please review for update

$(document).ready(function() {
  var checkbox = $('input[type="checkbox"].verify_certificate');

  function disableField() {
    if(checkbox.is(':checked')){
      $('input.certificate_path').removeAttr('disabled');
    } else {
      $('input.certificate_path').attr('disabled', 'disabled');
    }
  }

  checkbox.click(disableField);
  disableField();
});

$(document).ready(function() {
    var verify_certificate = $('input[type="checkbox"].auth_verify_certificate');
    var https = $('input[type="checkbox"].auth_https');

    function disablePathField() {
        if(verify_certificate.is(':checked')){
            $('input.auth_certificate_path').removeAttr('disabled');
        } else {
            $('input.auth_certificate_path').attr('disabled', 'disabled');
        }
    }

    function disableCertificateField() {
        if(https.is(':checked')){
            $('input.auth_verify_certificate').removeAttr('disabled');
            disablePathField();
        } else {
            $('input.auth_verify_certificate').attr('disabled', 'disabled');
            $('input.auth_certificate_path').attr('disabled', 'disabled');
        }
    }

    verify_certificate.click(disablePathField);
    https.click(disableCertificateField);

    disableCertificateField();
    disablePathField();
});

$(document).ready(function() {
    var verify_certificate = $('input[type="checkbox"].confd_verify_certificate');
    var https = $('input[type="checkbox"].confd_https');

    function disablePathField() {
        if(verify_certificate.is(':checked')){
            $('input.confd_certificate_path').removeAttr('disabled');
        } else {
            $('input.confd_certificate_path').attr('disabled', 'disabled');
        }
    }

    function disableCertificateField() {
        if(https.is(':checked')){
            $('input.confd_verify_certificate').removeAttr('disabled');
            disablePathField();
        } else {
            $('input.confd_verify_certificate').attr('disabled', 'disabled');
            $('input.confd_certificate_path').attr('disabled', 'disabled');
        }
    }

    verify_certificate.click(disablePathField);
    https.click(disableCertificateField);
    disableCertificateField();
    disablePathField();
});

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/agent/templates/accent_engine/agent/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': resource.number, 'link': url_for('.AgentView:get', id=resource.uuid), 'icon': 'users' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
        {% call build_tabs_navigation() %}
          {{ add_tab_navigation_header(_('Agent'), resource.name, 'users') }}
          {{ add_tab_navigation_item('general', _('General'), active=True) }}
          {{ add_tab_navigation_item('advanced', _('Advanced')) }}
          {{ add_tab_navigation_item('skills', _('Skills')) }}
        {% endcall %}

      {% call build_form(action=url_for('.AgentView:put', id=resource.id)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.number) }}
              {{ render_field(form.firstname) }}
              {{ render_field(form.lastname) }}
              {{ render_field(form.password) }}

            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('advanced') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.language) }}
              {{ render_field(form.preprocess_subroutine) }}
              {{ render_field(form.description) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('skills') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ build_add_row_entry_header() }}

              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>{{  _('Skill') }}</th>
                  <th>{{  _('Weight') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.skills.append_entry() %}
                  {{ _build_skill_entry(form.skills.pop_entry(), template=True) }}

                  {% for skill in form.skills %}
                    {{ _build_skill_entry(skill) }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}


{% macro _build_skill_entry(skill, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(skill.skill_id, with_label=False, data_listing_href=url_for(listing_urls['skill'])) }}</td>
    <td>{{ render_field(skill.skill_weight, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/agent/templates/accent_engine/agent/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Agents'), 'link': url_for('.AgentView:index'), 'icon': 'users' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Agent'), 'users') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.AgentView:get', id=''), delete=url_for('.AgentView:delete', id='')) %}
          <th>{{ _('Agent Number') }}</th>
          <th>{{ _('Firstname') }}</th>
          <th>{{ _('Lastname') }}</th>
        {% endcall %}
        {% call(agent) build_list_table_rows(resource_list['items']) %}
          <td>{{ agent.number }}</td>
          <td>{{ agent.firstname }}</td>
          <td>{{ agent.lastname }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Agent')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.number) }}
          {{ render_field(form.firstname) }}
          {{ render_field(form.lastname) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/call_pickup/templates/accent_engine/call_pickup/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.CallPickupView:get', id=resource.id), 'icon': 'rotate-left' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}

      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Call Pickups'), resource.name, 'rotate-left') }}
        {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {{ add_tab_navigation_item('interceptors', _('Interceptors')) }}
        {{ add_tab_navigation_item('targets', _('Targets')) }}
      {% endcall %}

      {% call build_form(action=url_for('.CallPickupView:put', id=resource.id)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.name) }}
              {{ render_field(form.description) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('interceptors') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.interceptors.form.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
              {{ render_field(form.interceptors.form.group_ids, data_listing_href=url_for(listing_urls['group'])) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('targets') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.targets.form.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
              {{ render_field(form.targets.form.group_ids, data_listing_href=url_for(listing_urls['group'])) }}
            {% endcall %}
          {% endcall %}

        {% endcall %}

      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/call_pickup/templates/accent_engine/call_pickup/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': _('Call Pickups'), 'link': url_for('.CallPickupView:index'), 'icon': 'rotate-left' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Call Pickups'), 'rotate-left') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(
            get=url_for('.CallPickupView:get', id=''),
            delete=url_for('.CallPickupView:delete', id='')) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Description') }}</th>
        {% endcall %}
        {% call(callpickup) build_list_table_rows(resource_list['items']) %}
          <td>{{ callpickup.name }}</td>
          <td>{{ callpickup.description }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>

  {% call build_hidden_add_containers(_('Add Call Pickup')) %}
    {% call build_form() %}
      {% call add_default_fields(form=form, submit_value=_('Add')) %}
        {{ render_field(form.name) }}
        {{ render_field(form.interceptors.form.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
        {{ render_field(form.interceptors.form.group_ids, data_listing_href=url_for(listing_urls['group'])) }}
        {{ render_field(form.targets.form.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
        {{ render_field(form.targets.form.group_ids, data_listing_href=url_for(listing_urls['group'])) }}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/access_feature/templates/accent_engine/access_features/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.host, 'link': url_for('.AccessFeatureView:get', id=resource.id), 'icon': 'random' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box(_('Access Feature'), resource.host, 'lock') %}
      {% call build_form(action=url_for('.AccessFeatureView:put', id=resource.id)) %}
        {% call add_default_fields(form=form, submit_value=_('Update')) %}
          {{ render_field(form.host) }}
          {{ render_field(form.feature) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/access_feature/templates/accent_engine/access_features/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': _('Features Access'), 'link': url_for('.AccessFeatureView:index'), 'icon': 'lock' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Features Access'), 'random') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.AccessFeatureView:get', id=''), delete=url_for('.AccessFeatureView:delete', id='')) %}
          <th>{{ _('Host') }}</th>
          <th>{{ _('Feature') }}</th>
        {% endcall %}
        {% call(context) build_list_table_rows(resource_list['items']) %}
          <td>{{ context.host }}</td>
          <td>{{ context.feature }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add feature access')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.host) }}
          {{ render_field(form.feature) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/phonebook/templates/accent_engine/phonebook/manage_phonebook.html
Please review for update

{% extends "layout.html" %}
{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Manage Contacts') , 'link': url_for('.ManagePhonebookView:index'), 'icon': 'users' }
  ]) }}
{% endblock %}
{% block content %}
  <section class="content">
    <div class="form-group">
      <span class="pull-right-container">{{ _("Choose your phonebook: ") }}</span>
      <select id="phonebook" class="input-md select2-single">
        {% for p in phonebook_list %}
          <option value="{{ p.uuid }}"
                  {% if phonebook_uuid==p.uuid %}selected{% endif %}>{{ p.name }}</option>
        {% endfor %}
      </select>
    </div>
    {% call build_list_containers(_('Manage Contacts'), 'users') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.ManagePhonebookView:get', phonebook_uuid=phonebook_uuid, id=''),
          delete=url_for('.ManagePhonebookView:delete', phonebook_uuid=phonebook_uuid, id='')) %}
          <th>{{ _("Firstname") }}</th>
          <th>{{ _("Lastname") }}</th>
          <th>{{ _("Phone Number") }}</th>
          <th>{{ _("Email") }}</th>
        {% endcall %}
        {% call(contact) build_list_table_rows(resource_list) %}
          <td>{{ contact.firstname }}</td>
          <td>{{ contact.lastname }}</td>
          <td>{{ contact.phone }}</td>
          <td>{{ contact.email or '-' }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}
    {% call build_hidden_add_containers(_('Add Contact')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.phonebook_uuid) }}
          {{ render_field(form.firstname) }}
          {{ render_field(form.lastname) }}
          {{ render_field(form.email) }}
          {{ render_field(form.phone) }}
          {{ render_field(form.mobile_phone) }}
          {{ render_field(form.fax) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}
{% block additional_js %}<script src="{{ url_for('.static', filename='js/phonebook.js') }}"></script>{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/phonebook/templates/accent_engine/phonebook/edit_contact.html
Please review for update

{% extends "layout.html" %}
{% block content_header %}
    {{ build_breadcrumbs(current_breadcrumbs + [
        { 'name': resource.firstname + ' ' + resource.lastname, 'link': url_for('.ManagePhonebookView:get', id=resource.id, phonebook_uuid=resource.phonebook_uuid) , 'icon': 'users' }
    ]) }}
{% endblock %}
{% block content %}
    {% call build_section_row() %}
        {% call build_form_box(_('Contact'), resource.firstname + ' ' + resource.lastname, 'book') %}
            {% call build_form(action=url_for('.ManagePhonebookView:put', id=resource.id, phonebook_uuid=resource.phonebook_uuid)) %}
                {% call add_default_fields(form=form, submit_value=_('Update')) %}
                    {{ render_field(form.phonebook_uuid) }}
                    {{ render_field(form.firstname) }}
                    {{ render_field(form.lastname) }}
                    {{ render_field(form.email) }}
                    {{ render_field(form.phone) }}
                    {{ render_field(form.mobile_phone) }}
                    {{ render_field(form.fax) }}
                {% endcall %}
            {% endcall %}
        {% endcall %}
    {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/phonebook/templates/accent_engine/phonebook/edit.html
Please review for update

{% extends "layout.html" %}
{% block content_header %}
    {{ build_breadcrumbs(current_breadcrumbs + [
        { 'name': resource.name, 'link': url_for('.PhonebookView:get', id=resource.uuid) , 'icon': 'book' }
    ]) }}
{% endblock %}
{% block content %}
    {% call build_section_row() %}
        {% call build_form_box(_('Phonebook'), resource.name, 'book') %}
            {% call build_form(action=url_for('.PhonebookView:put', id=resource.uuid)) %}
                {% call add_default_fields(form=form, submit_value=_('Update')) %}
                    {{ render_field(form.name) }}
                    {{ render_field(form.description) }}
                {% endcall %}
            {% endcall %}
        {% endcall %}
    {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/phonebook/templates/accent_engine/phonebook/list.html
Please review for update

{% extends "layout.html" %}
{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Phonebook') , 'link': url_for('.PhonebookView:index'), 'icon': 'book' }
  ]) }}
{% endblock %}
{% block content %}
  <section class="content">
    {% call build_list_containers(_('Phonebooks'), 'book') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.PhonebookView:get', id=''), delete=url_for('.PhonebookView:delete', id='')) %}
          <th>{{ _("Name") }}</th>
          <th>{{ _("Description") }}</th>
        {% endcall %}
        {% call(phonebook) build_list_table_rows(resource_list['items']) %}
          <td>{{ phonebook.name }}</td>
          <td>{{ phonebook.description or '-' }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}
    {% call build_hidden_add_containers(_('Add Phonebook')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.description) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/phonebook/static/accent_engine/js/phonebook.js
Please review for update

$('#phonebook').on('change', (ev) => {
    var queryParams = new URLSearchParams(window.location.search);
    queryParams.set("phonebook_uuid", ev.target.value);
    history.replaceState(null, null, "?" + queryParams.toString());
    window.location.href = "?" + queryParams.toString();
})

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/index/templates/index.html
Please review for update

{% extends "layout.html" %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/transport/templates/accent_engine/transports/add.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('Transports'), '', 'asterisk', [_('List')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Transport'), form.name.data, 'asterisk') }}
        {{ add_tab_navigation_item('transport', _('Transport'), active=True) }}
        {{ add_tab_navigation_item('options', _('Options')) }}
      {% endcall %}

      {% call build_form(action=url_for('.TransportView:post')) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('transport', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Add')) %}
              {{ render_field(form.name) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('options') %}
            {% call add_default_fields(form=form, submit_value=_('Add')) %}
              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{ _('Option Key') }}</th>
                  <th>{{ _('Option Value') }}</th>
                  <th style="width: 21px;"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.options.append_entry() %}
                  {{ _build_option_entry(form.options.pop_entry(), template=True) }}

                  {% for option in form.options %}
                    {{ _build_option_entry(option) }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}

    {% endcall %}

  {% endcall %}
{% endblock %}

{% macro _build_option_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(
      option.option_key,
      with_label=False,
      inputclass='ui-helper-clearfix',
      data_listing_href=url_for(listing_urls['pjsip_doc'], section='transport'),
    ) }}</td>
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/transport/templates/accent_engine/transports/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.TransportView:get', id=resource.id), 'icon': 'navicon' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Transport'), form.name.data, 'asterisk') }}
        {{ add_tab_navigation_item('transport', _('Transport'), active=True) }}
        {{ add_tab_navigation_item('options', _('Options')) }}
      {% endcall %}

      {% call build_form(action=url_for('.TransportView:put', id=resource.uuid)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('transport', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.name) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{ _('Option Key') }}</th>
                  <th>{{ _('Option Value') }}</th>
                  <th style="width: 21px;"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.options.append_entry() %}
                  {{ _build_option_entry(form.options.pop_entry(), template=True) }}

                  {% for option in form.options %}
                    {{ _build_option_entry(option) }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}

    {% endcall %}

  {% endcall %}
{% endblock %}

{% macro _build_option_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(
      option.option_key,
      with_label=False,
      inputclass='ui-helper-clearfix',
      data_listing_href=url_for(listing_urls['pjsip_doc'], section='transport'),
    ) }}</td>
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/transport/templates/accent_engine/transports/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Transports'), 'link': url_for('.TransportView:index'), 'icon': 'asterisk' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Transport'), 'asterisk') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.TransportView:get', id=''), delete=url_for('.TransportView:delete', id=''), add=url_for('.TransportView:new')) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Protocol') }}</th>
        {% endcall %}
        {% call(transport) build_list_table_rows(resource_list['items']) %}
          <td>{{ transport.name }}</td>
          {% for key, value in transport.options %}
            {% if key == "protocol" %}
              <td>{{ value }}</td>
            {% endif %}
          {% else %}
            <td>Undefined</td>
          {% endfor %}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/paging/templates/accent_engine/paging/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.PagingView:get', id=resource.id), 'icon': 'bullhorn' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box(_('Pagings'), resource.name, 'bullhorn') %}
      {% call build_form(action=url_for('.PagingView:put', id=resource.id)) %}
        {% call add_default_fields(form=form, submit_value=_('Update')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.number) }}
          {{ render_field(form.members.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
          {{ render_field(form.callers.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
          {{ render_field(form.announce_caller) }}
          {{ render_field(form.announce_sound) }}
          {{ render_field(form.caller_notification) }}
          {{ render_field(form.duplex) }}
          {{ render_field(form.enabled) }}
          {{ render_field(form.ignore_forward) }}
          {{ render_field(form.record) }}
          {{ render_field(form.members.users, with_label=false) }}
          {{ render_field(form.callers.users, with_label=false) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/paging/templates/accent_engine/paging/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Paging'), 'link': url_for('.PagingView:index'), 'icon': 'bullhorn' }
  ]) }}
{% endblock %}

{% block content %}

  <section class="content">
    {% call build_list_containers(_('Paging'), 'bullhorn') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.PagingView:get', id=''), delete=url_for('.PagingView:delete', id='')) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Number') }}</th>
        {% endcall %}
        {% call(paging) build_list_table_rows(resource_list['items']) %}
          <td>{{ paging.name }}</td>
          <td>{{ paging.number }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Paging')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.number) }}
          {{ render_field(form.members.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
          {{ render_field(form.callers.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/application/templates/accent_engine/application/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.ApplicationView:get', id=resource.uuid), 'icon': 'cubes' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Application'), '', 'cubes') }}
        {{ add_tab_navigation_item('application', _('Application'), active=True) }}
      {% endcall %}

      {% call build_form(action=url_for('.ApplicationView:put', id=resource.uuid)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('application', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.name) }}
              {{ render_field(form.destination, with_label=False) }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}

    {% endcall %}

  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/application/templates/accent_engine/application/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': _('Application'), 'link': url_for('.ApplicationView:index'), 'icon': 'cubes' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Applications'), 'cubes') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.ApplicationView:get', id=''), delete=url_for('.ApplicationView:delete', id='')) %}
          <th>{{ _('UUID') }}</th>
          <th>{{ _('Name') }}</th>
        {% endcall %}
        {% call(application) build_list_table_rows(resource_list['items']) %}
          <td>{{ application.uuid }}</td>
          <td>{{ application.name }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Application')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.destination, with_label=False) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/call_filter/templates/accent_engine/call_filter/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.CallFilterView:get', id=resource.id), 'icon': 'filter' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}

      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header('', resource.name, 'filter') }}
        {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {{ add_tab_navigation_item('no_answer', _('No Answer')) }}
      {% endcall %}

      {% call build_form(action=url_for('.CallFilterView:put', id=resource.id)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.name) }}
              {{ render_field(form.source) }}
              {{ render_field(form.strategy) }}
              {{ render_field(form.caller_id_mode) }}
              {{ render_field(form.caller_id_name) }}
              {{ render_field(form.recipients_user.uuid, data_listing_href=url_for(listing_urls['uuid_user'])) }}
              {{ render_field(form.recipients_user.timeout) }}
              {{ render_field(form.surrogates_user.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
              {{ render_field(form.surrogates_timeout) }}
              {{ render_field(form.description) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('no_answer') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.fallbacks, with_label=False) }}
            {% endcall %}
          {% endcall %}
        {% endcall %}

      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/callfilter.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/call_filter/templates/accent_engine/call_filter/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': _('Boss Secretaries Filters'), 'link': url_for('.CallFilterView:index'), 'icon': 'filter' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Boss Secretaries Filters'), 'filter') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.CallFilterView:get', id=''), delete=url_for('.CallFilterView:delete', id='')) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Ring Strategy') }}</th>
          <th>{{ _('Boss') }}</th>
          <th>{{ _('Secretaries') }}</th>
        {% endcall %}
        {% call(callfilter) build_list_table_rows(resource_list['items']) %}
          <td>{{ callfilter.name }}</td>
          <td>{{ bs_strategy_map[callfilter.strategy] }}</td>
          {% if callfilter.recipients.users %}
            <td>{{ callfilter.recipients.users[0]['firstname'] }} {{ callfilter.recipients.users[0]['lastname'] }}</td>
          {% else %}
            <td></td>
          {% endif %}
          <td>
            {% for surrogate in callfilter.surrogates.users %}
              ({{ surrogate.firstname }} {{ surrogate.lastname }})
            {% endfor %}
          </td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add BS Filter')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.source) }}
          {{ render_field(form.strategy) }}
          {{ render_field(form.caller_id_mode) }}
          {{ render_field(form.caller_id_name) }}
          {{ render_field(form.recipients_user.uuid, data_listing_href=url_for(listing_urls['uuid_user'])) }}
          {{ render_field(form.recipients_user.timeout) }}
          {{ render_field(form.surrogates_user.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
          {{ render_field(form.surrogates_timeout) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/callfilter.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/call_filter/static/accent_engine/js/callfilter.js
Please review for update

$(document).ready(function () {
  $('#caller_id_mode').on('change', function () {
    toggle_callerid_mode.call(this)
  });
  toggle_callerid_mode.call($('#caller_id_mode'));

  var selectors = [
    '#fallbacks-noanswer_destination-queue-queue_id',
    '#fallbacks-noanswer_destination-queue-skill_rule_id',
  ];
  var $selects = {};
  var ids = {};
  for (var i = 0; i < selectors.length; i++) {
    var $select = $(selectors[i]);
    var listingUrl = $select.data('listing_href') || $select.data('listing-href');
    var id = $select.val();
    $selects[i] = $select;
    ids[i] = id;
    if (!id) {
      continue;
    }

    $select.empty();

    $.ajax({ url: listingUrl, idx : i, success: function(data) {
      var $select = $selects[this.idx];
      var id = ids[this.idx];
      $.each(data.results, function(idx, result) {
        $select.append($("<option></option>").attr('value', result.id).text(result.text));
      });
      $select.val(id);

      $select.select2({
        theme: 'bootstrap',
        placeholder: 'Select...',
      });
    }});
  }
});

function toggle_callerid_mode() {
  if ($(this).val() === '') {
    $('#caller_id_name').closest('div.form-group').hide()
  } else {
    $('#caller_id_name').closest('div.form-group').show()
  }
}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/queue/templates/accent_engine/queue/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.QueueView:get', id=resource.uuid), 'icon': 'cubes' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Queue'), resource.name, 'cubes') }}
        {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {{ add_tab_navigation_item('advanced', _('Advanced')) }}
        {{ add_tab_navigation_item('diversions', _('Diversions')) }}
        {{ add_tab_navigation_item('fallbacks', _('Fallbacks')) }}
        {{ add_tab_navigation_item('schedule', _('Schedule')) }}
        {{ add_tab_navigation_item('options', _('Options')) }}
        {{ add_tab_navigation_item('agents', _('Agents')) }}
        {{ add_tab_navigation_item('users', _('Users')) }}
      {% endcall %}

      {% call build_form(action=url_for('.QueueView:put', id=resource.id)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.name, readonly='readonly') }}
              {{ render_field(form.label) }}
              {{ render_field(form.extensions[0].context,
                              label='Exten',
                              inputclass='ui-helper-clearfix',
                              divclass='col-sm-4',
                              class_='queue-context',
                              placeholder='Choose Context',
                              data_listing_href=url_for(listing_urls['context_by_type'], type_='internal')) }}
              {{ render_field(form.extensions[0].exten,
                              data_allow_custom_values=True,
                              with_label=False,
                              data_allow_clear='true',
                              divclass='col-sm-2',
                              class_='queue-exten',
                              data_listing_href=url_for(listing_urls['available_extension_queue'])) }}
              {{ render_field(form.music_on_hold,
                              data_listing_href=url_for(listing_urls['moh']),
                              data_allow_clear='true',
                              data_placeholder='Choose Music on Hold') }}
              {{ render_field(form.caller_id_mode) }}
              {{ render_field(form.caller_id_name) }}
              {{ render_field(form.preprocess_subroutine) }}
              {{ render_field(form.mark_answered_elsewhere) }}
              {{ render_field(form.enabled) }}

            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('advanced') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.announce_hold_time_on_entry) }}
              {{ render_field(form.data_quality) }}
              {{ render_field(form.dtmf_hangup_callee_enabled) }}
              {{ render_field(form.dtmf_hangup_caller_enabled) }}
              {{ render_field(form.dtmf_record_callee_enabled) }}
              {{ render_field(form.dtmf_record_caller_enabled) }}
              {{ render_field(form.dtmf_transfer_callee_enabled) }}
              {{ render_field(form.dtmf_transfer_caller_enabled) }}
              {{ render_field(form.ignore_forward) }}
              {{ render_field(form.timeout) }}
              {{ render_field(form.retry_on_timeout) }}
              {{ render_field(form.ring_on_hold) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('diversions') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.wait_time_destination, with_label=False) }}
              {{ render_field(form.wait_time_threshold) }}
              {{ render_field(form.wait_ratio_destination, with_label=False) }}
              {{ render_field(form.wait_ratio_threshold) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('fallbacks') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.fallbacks.busy_destination) }}
              {{ render_field(form.fallbacks.congestion_destination) }}
              {{ render_field(form.fallbacks.fail_destination) }}
              {{ render_field(form.fallbacks.noanswer_destination) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('schedule') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
                {{ render_field(form.schedules[0]['name']) }}
                {{ render_field(form.schedules[0]['id'],
                                data_listing_href=url_for(listing_urls['schedule']),
                                data_allow_clear='true',
                                data_placeholder='Choose Schedules') }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('options') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{  _('Option Key') }}</th>
                  <th>{{  _('Option Value') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.options.append_entry() %}
                  {{ _build_option_entry(form.options.pop_entry(), template=True) }}

                  {% for option in form.options %}
                    {{ _build_option_entry(option) }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('agents') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.members.agent_ids, data_listing_href=url_for(listing_urls['agent'])) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('users') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.members.user_ids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_option_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.option_key, with_label=False) }}</td>
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/queue.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/queue/templates/accent_engine/queue/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Queues'), 'link': url_for('.QueueView:index'), 'icon': 'cubes' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Queue'), 'cubes') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.QueueView:get', id=''), delete=url_for('.QueueView:delete', id='')) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Extension') }}</th>
        {% endcall %}
        {% call(queue) build_list_table_rows(resource_list['items']) %}
          <td>{{ queue.name }}</td>
          <td>
            {% for extension in queue.extensions %}
              <strong>{{ _('internal') }}:</strong> {{ extension.exten }}
            {% endfor %}
            {% for extensions in queue.incalls %}
              {% for extension in extensions.extensions %}
                <strong>{{ _('incall') }}:</strong> {{ extension.exten }}
              {% endfor %}
            {% endfor %}
            {{ '-' if not queue.extensions and not queue.incalls }}
          </td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Queue')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.label) }}
          {{ render_field(form.extensions[0].context,
                          inputclass='ui-helper-clearfix',
                          divclass='col-sm-4',
                          class_='queue-context',
                          placeholder=_('Choose Context'),
                          data_listing_href=url_for(listing_urls['context_by_type'], type_='internal')) }}
          {{ render_field(form.extensions[0].exten,
                          with_label=False,
                          data_allow_custom_values=True,
                          data_allow_clear='true',
                          divclass='col-sm-4',
                          class_='queue-exten',
                          data_listing_href=url_for(listing_urls['available_extension_queue'])) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/queue.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/queue/static/accent_engine/js/queue.js
Please review for update

$(document).ready(function () {
  $('.queue-context').on("change", function (e) {
    add_available_extensions();
  });
  add_available_extensions();
  $('#caller_id_mode').on('change', function (e) {
    toggle_callerid_mode.call(this)
  });
  toggle_callerid_mode.call($('#caller_id_mode'));
});


function toggle_callerid_mode() {
  if ($(this).val() === '') {
    $('#caller_id_name').closest('div.form-queue').hide()
  } else {
    $('#caller_id_name').closest('div.form-queue').show()
  }
}


function add_available_extensions() {
  let extension_select = $(".queue-exten");
  let context_select = $(".queue-context");
  let ajax_url = $(extension_select).attr('data-listing-href');
  if (!ajax_url) {
    return;
  }

  extension_select.select2('data', null);
  if (!extension_select.val()) {
    extension_select.append("<option></option>")
  }

  extension_select.select2({
    allowClear: true,
    theme: 'bootstrap',
    placeholder: 'Select...',
    ajax: {
      url: ajax_url,
      data: function (params) {
        return {
          term: params.term,
          context: context_select.val()
        }
      }
    }
  });
}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/extension/templates/accent_engine/extension/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.exten, 'link': url_for('.ExtensionView:get', id=resource.id), 'icon': 'fax' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box(_('Extension'), resource.name, 'tty') %}
      {% call build_form(action=url_for('.ExtensionView:put', id=resource.id)) %}
        {% call add_default_fields(form=form, submit_value=_('Update')) %}
          {{ render_field(form.exten) }}
          {{ render_field(form.context,
                          data_listing_href=url_for(listing_urls['context'])) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/extension/templates/accent_engine/extension/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Extensions'), 'link': url_for('.ExtensionView:index'), 'icon': 'tty' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Extension'), 'tty') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.ExtensionView:get', id=''), delete=url_for('.ExtensionView:delete', id='')) %}
          <th>{{ _('Extension') }}</th>
          <th>{{ _('Context') }}</th>
          <th>{{ _('Conference ID') }}</th>
          <th>{{ _('Parking Lot ID') }}</th>
          <th>{{ _('Group ID') }}</th>
          <th>{{ _('Incall ID') }}</th>
          <th>{{ _('Lines ID') }}</th>
          <th>{{ _('Outcall ID') }}</th>
        {% endcall %}
        {% call(extension) build_list_table_rows(resource_list['items']) %}
          <td>{{ extension.exten }}</td>
          <td>{{ extension.context }}</td>
          <td>
            {{ extension.conference.id  if extension.conference else '-' }}
          </td>
          <td>
            {{ extension.parking_lot.id  if extension.parking_lot else '-' }}
          </td>
          <td>
            {{ extension.group.id  if extension.group else '-' }}
          </td>
          <td>
            {{ extension.incall.id  if extension.incall else '-' }}
          </td>
          <td>
            {% for line in extension.lines %}
              {{ line.id }} <br>
            {% endfor %}
            {{ '-' if not extension.lines }}
          </td>
          <td>
            {{ extension.outcall.id  if extension.outcall else '-' }}
          </td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Extension')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
            {{ render_field(form.exten) }}
            {{ render_field(form.context,
                            data_listing_href=url_for(listing_urls['context'])) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/extension/templates/accent_engine/extension/edit_features.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': 'Extensions Features', 'link': url_for('.ExtensionFeaturesView:index'), 'icon': 'fax' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box('', '', '') %}
      {% call build_form(action=url_for('.ExtensionFeaturesView:put')) %}

        {% call add_default_fields(form=form, submit_value=_('Update')) %}
          {% call build_table() %}

            {% call build_table_headers() %}
              <th>{{ _('Enabled') }}</th>
              <th>{{ _('Feature') }}</th>
              <th>{{ _('Extension') }}</th>
            {% endcall %}

            {% call build_table_body(class_='dynamic-table') %}
              {% for extension in form.extensions %}
                {{ render_field(extension['uuid']) }}
                <tr class="row-line">
                  <td>{{ render_field(extension.enabled, with_label=False) }}</td>
                  <td>{{ render_field(extension.feature, with_label=False, readonly=True) }}</td>
                  <td>{{ render_field(extension.exten, with_label=False) }}</td>
                </tr>
              {% endfor %}
            {% endcall %}

          {% endcall %}

        {% endcall %}

      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/dhcp/templates/accent_engine/dhcp/index.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('Dhcp'), '', 'gear', [_('Edit')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box('', '', '') %}
      {% call build_form(action=url_for('.DhcpView:post')) %}

        {% call add_default_fields(form=form, submit_value=_('Update')) %}
          {{ render_field(form.active) }}
          {{ render_field(form.pool_start) }}
          {{ render_field(form.pool_end) }}
          {{ render_field(form.network_interfaces) }}
        {% endcall %}

      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/sound/templates/accent_engine/sound/list_files.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs(current_breadcrumbs + [
{ 'name': sound.name, 'link': url_for('.SoundFileView:list_files', tenant_uuid=sound.tenant_id, category=sound.id),
'icon': 'file-sound-o' }
]) }}
{% endblock %}

{% block content %}
<section class="content">
  {% call build_list_containers(_('Sound Files'), 'file-sound-o') %}

  {% call build_table(id='table-list-sound-files') %}
  {% call build_list_table_headers() %}
  <th>{{ _('Name') }}</th>
  <th>{{ _('Infos') }}</th>
  {% endcall %}
  {% call(file_) build_list_table_rows(sound['files']) %}
  <td>
    {{ file_.name }}
  </td>
  <td>
    {% for format in file_.formats %}
    <div class="box">
      <a href="{{ url_for('.SoundFileView:delete_sound_filename',
                                    tenant_uuid=sound['tenant_uuid'],
                                    category=sound['name'],
                                    filename=file_.name,
                                    format=format['format'],
                                    language=format['language']) }}" title="{{ _('Delete the sound file') }}"
        class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-xs btn-default"
        onclick="return confirm({{ _('Are you sure you want to delete this item ?') }});">
        <i class="fa fa-fw fa-remove"></i>
      </a>
      <a href="{{ url_for('.SoundFileView:download_sound_filename',
                                    tenant_uuid=sound['tenant_uuid'],
                                    category=sound['name'],
                                    filename=file_.name,
                                    format=format['format'],
                                    language=format['language']) }}" title="{{ _('Listen to the sound file') }}"
        class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-xs btn-default">
        <i class="fa fa-fw fa-volume-up"></i>
      </a>
      <strong>{{ _('Format') }}:</strong> {{ format['format'] if format['format'] else '-' }}
      <strong>{{ _('Language') }}:</strong> {{ format['language'] if format['language'] else '-' }}<br>
      <strong>{{ _('Text') }}:</strong> <small>{{ format['text'] if format['text'] else '-' }}</small>
    </div>
    {% endfor %}
  </td>
  {% endcall %}
  {% endcall %}

  {% endcall %}

  {% call build_hidden_add_containers(_('Add Sound file')) %}
  {% call build_form_box(_('Choose your file')) %}
  <form class="form-horizontal" method="POST"
    action="{{ url_for('.SoundFileView:upload_sound_filename', tenant_uuid=sound['tenant_uuid'], category=sound['name']) }}"
    data-toggle="validator" enctype="multipart/form-data">
    {% call add_default_fields(form=form, submit_value=_('Upload')) %}
    {{ render_field(form.name) }}
    {{ render_field(form.format) }}
    {{ render_field(form.language) }}
    {% endcall %}
  </form>
  {% endcall %}
  {% endcall %}
</section>
{% endblock %}


{% block additional_js %}
<script src="{{ url_for('.static', filename='js/sound.js') }}"></script>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/sound/templates/accent_engine/sound/list_system_files.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumb(_('Sound Files System'), '', 'file-sound-o', [_('List'), sound['name']]) }}
{% endblock %}


{% block content %}
<section class="content">
  {% call build_list_containers(_('Sound Files System'), 'file-sound-o') %}

  {% call build_table(id='table-list-sound-files-system') %}
  {% call build_list_table_headers() %}
  <th>{{ _('Name') }}</th>
  <th>{{ _('Infos') }}</th>
  {% endcall %}
  {% call(file_) build_list_table_rows(sound['files']) %}
  <td>
    {{ file_.name }}</td>
  <td>
    {{ file_.format }}
    {% for format in file_.formats %}
    <div class="box">
      <a href="{{ url_for('.SoundFileView:download_system_sound_filename',
                                    filename=file_.name,
                                    format=format['format'],
                                    language=format['language']) }}" title="{{ _('Listen to the sound file') }}"
        class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-xs btn-default">
        <i class="fa fa-fw fa-volume-up"></i>
      </a>
      <strong>{{ _('Format') }}:</strong> {{ format['format'] if format['format'] else '-' }}
      <strong>{{ _('Language') }}:</strong> {{ format['language'] if format['language'] else '-' }}<br>
      <strong>{{ _('Text') }}:</strong> <small>{{ format['text'] if format['text'] else '-' }}</small>
    </div>
    {% endfor %}
  </td>
  {% endcall %}
  {% endcall %}

  {% endcall %}
</section>
{% endblock %}


{% block additional_js %}
<script src="{{ url_for('.static', filename='js/sound.js') }}"></script>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/sound/templates/accent_engine/sound/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Sound Files'), 'link': url_for('.SoundView:index'), 'icon': 'file-sound-o' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Sound Files'), 'file-sound-o') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.SoundFileView:list_files', tenant_uuid='', category=''), delete=url_for('.SoundView:delete', tenant_uuid='', category='')) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Files') }}</th>
        {% endcall %}
        {% call(sound) build_list_table_rows(resource_list['items'], non_unique_id=true) %}
          <td>{{ sound.name }}</td>
          <td>{{ sound.files|length }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Sound Directory')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/sound/static/accent_engine/js/sound.js
Please review for update

$(document).ready(function() {
  let table_config = {
    buttons: []
  };

  $('#table-list-sound-files-system').DataTable(table_config);
  let datatable_list_sound_files = $('#table-list-sound-files').DataTable(table_config);

  datatable_list_sound_files.button().add( 0, {
    className: 'btn',
    text: '<i class="fa fa-plus"></i>',
    init: function (dt, node, config) {
      node.attr('id', 'add-form');
      node.attr('data-toggle', 'modal');
      node.attr('data-target', '#view-add-form');
      node.click(function () {
        $('#view-add-form').removeClass('hidden').removeAttr('style');
        $('form').validator('update');
      });
    }
  });
});

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/trunk/templates/accent_engine/trunk/protocol_custom.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('Trunks'), '', 'server', [_('List')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

{% call build_form_box(_('Trunk'), '', 'server') %}
  {% call build_form(action=url_for('.TrunkView:post')) %}
     {% call add_default_fields(form=form, submit_value=_('Add')) %}
      {{ render_field(form.endpoint_custom['interface']) }}
      {{ render_field(form.endpoint_custom['interface_suffix']) }}
      {{ render_field(form.context,
                      data_allow_clear='true',
                      class_='trunk-context',
                      placeholder=_('Choose Context'),
                      data_listing_href=url_for(listing_urls['context'])) }}
    {% endcall %}
  {% endcall %}
{% endcall %}

  {% endcall %}
{% endblock %}


{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/trunk.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/trunk/templates/accent_engine/trunk/protocol_iax.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('Trunks'), '', 'server', [_('List')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

{% call build_form_tabs_box() %}
  {% call build_tabs_navigation() %}
    {{ add_tab_navigation_header(_('Trunk'), '', 'server') }}
    {{ add_tab_navigation_item('trunk', _('Trunk'), active=True) }}
    {{ add_tab_navigation_item('register', _('Register')) }}
    {{ add_tab_navigation_item('options', _('Options')) }}
  {% endcall %}

  {% call build_form(action=url_for('.TrunkView:post')) %}
    {% call build_tabs_content() %}
        {% call build_tab_content_item('trunk', active=True) %}
           {% call add_default_fields(form=form, submit_value=_('Add')) %}
            {{ render_field(form.endpoint_iax['name']) }}
            {{ render_field(form.endpoint_iax['host']) }}
            {{ render_field(form.endpoint_iax['host_value'], placeholder=_('Set host value')) }}
            {{ render_field(form.endpoint_iax['type']) }}
            {{ render_field(form.context,
                            data_allow_clear='true',
                            class_='trunk-context',
                            placeholder=_('Choose Context'),
                            data_listing_href=url_for(listing_urls['context'])) }}
          {% endcall %}
        {% endcall %}

        {% call build_tab_content_item('register') %}
         {% call add_default_fields(form=form, submit_value=_('Add')) %}
           {{ render_field(form.register_iax['id']) }}
           {{ render_field(form.register_iax['enabled']) }}
           {{ render_field(form.register_iax['auth_username']) }}
           {{ render_field(form.register_iax['auth_password']) }}
           {{ render_field(form.register_iax['callback_context']) }}
           {{ render_field(form.register_iax['callback_extension']) }}
           {{ render_field(form.register_iax['remote_host']) }}
           {{ render_field(form.register_iax['remote_port']) }}
         {% endcall %}
        {% endcall %}

        {% call build_tab_content_item('options') %}
           {% call add_default_fields(form=form, submit_value=_('Add')) %}
            {{ build_add_row_entry_header() }}
            {% call build_table() %}

              {% call build_table_headers() %}
                <th>{{  _('Option Key') }}</th>
                <th>{{  _('Option Value') }}</th>
                <th style="width: 21px"></th>
              {% endcall %}

              {% call build_table_body(class_='dynamic-table') %}
                {% do form.endpoint_iax.options.append_entry() %}
                {{ _build_option_entry(form.endpoint_iax.options.pop_entry(), template=True) }}

                {% for option in form.endpoint_iax.options %}
                  {{ _build_option_entry(option) }}
                {% endfor %}
              {% endcall %}

            {% endcall %}

            {{ build_add_row_entry_header() }}
          {% endcall %}
        {% endcall %}

    {% endcall %}
  {% endcall %}
{% endcall %}

  {% endcall %}
{% endblock %}


{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/trunk.js') }}"></script>
{% endblock %}



{% macro _build_option_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.option_key, with_label=False) }}</td>
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/trunk/templates/accent_engine/trunk/protocol_sip.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('Trunks'), '', 'server', [_('List')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

{% call build_form_tabs_box() %}
  {% call build_tabs_navigation() %}
    {{ add_tab_navigation_header(_('Trunk'), '', 'server') }}
    {{ add_tab_navigation_item('trunk', _('Trunk'), active=True) }}
    {{ add_tab_navigation_item('aor_section_options', _('AOR')) }}
    {{ add_tab_navigation_item('auth_section_options', _('Authentication')) }}
    {{ add_tab_navigation_item('endpoint_section_options', _('Endpoint')) }}
    {{ add_tab_navigation_item('identify_section_options', _('Identify')) }}
    {{ add_tab_navigation_item('registration_section_options', _('Registration')) }}
    {{ add_tab_navigation_item('registration_outbound_auth_section_options', _('Registration Outbound Auth')) }}
    {{ add_tab_navigation_item('outbound_auth_section_options', _('Outbound Auth')) }}
  {% endcall %}

  {% call build_form(action=url_for('.TrunkView:post')) %}
    {% call build_tabs_content() %}
        {% call build_tab_content_item('trunk', active=True) %}
          {% call add_default_fields(form=form, submit_value=_('Add')) %}
             {{ render_field(form.endpoint_sip['label']) }}
             {{ render_field(form.endpoint_sip.transport.uuid,
                             data_listing_href=url_for(listing_urls['transport']),
                             data_allow_clear='true',
                             data_placeholder=_('Choose Transport')) }}
             {{ render_field(form.endpoint_sip.template_uuids,
                             data_listing_href=url_for(listing_urls['sip_template']),
                             data_allow_clear='true',
                             data_placeholder=_('Choose Templates')) }}
             {{ render_field(form.endpoint_sip.templates, with_label=False) }}
             {{ render_field(form.context,
                             data_allow_clear='true',
                             class_='line-context',
                             placeholder=_('Choose Context'),
                             data_listing_href=url_for(listing_urls['context'])) }}
                {{ render_field(form.outgoing_caller_id_format) }}
          {% endcall %}
        {% endcall %}

        {% call build_tab_content_item('aor_section_options') %}
          {% call add_default_fields(form=form, submit_value=_('Update')) %}

            {{ build_add_row_entry_header() }}
            {% call build_table() %}

              {% call build_table_headers() %}
                <th>{{  _('Option Key') }}</th>
                <th>{{  _('Option Value') }}</th>
                <th style="width: 21px"></th>
              {% endcall %}

              {% call build_table_body(class_='dynamic-table') %}
                {% do form.endpoint_sip.aor_section_options.append_entry() %}
                {{ _build_option_entry(form.endpoint_sip.aor_section_options.pop_entry(), 'aor', template=True) }}

                {% for option in form.endpoint_sip.aor_section_options %}
                  {{ _build_option_entry(option, 'aor') }}
                {% endfor %}
              {% endcall %}

            {% endcall %}

            {{ build_add_row_entry_header() }}
          {% endcall %}
        {% endcall %}

        {% call build_tab_content_item('auth_section_options') %}
          {% call add_default_fields(form=form, submit_value=_('Update')) %}

            {{ build_add_row_entry_header() }}
            {% call build_table() %}

              {% call build_table_headers() %}
                <th>{{  _('Option Key') }}</th>
                <th>{{  _('Option Value') }}</th>
                <th style="width: 21px"></th>
              {% endcall %}

              {% call build_table_body(class_='dynamic-table') %}
                {% do form.endpoint_sip.auth_section_options.append_entry() %}
                {{ _build_option_entry(form.endpoint_sip.auth_section_options.pop_entry(), 'auth', template=True) }}

                {% for option in form.endpoint_sip.auth_section_options %}
                  {{ _build_option_entry(option, 'auth') }}
                {% endfor %}
              {% endcall %}

            {% endcall %}

            {{ build_add_row_entry_header() }}
          {% endcall %}
        {% endcall %}

        {% call build_tab_content_item('endpoint_section_options') %}
          {% call add_default_fields(form=form, submit_value=_('Update')) %}

            {{ build_add_row_entry_header() }}
            {% call build_table() %}

              {% call build_table_headers() %}
                <th>{{  _('Option Key') }}</th>
                <th>{{  _('Option Value') }}</th>
                <th style="width: 21px"></th>
              {% endcall %}

              {% call build_table_body(class_='dynamic-table') %}
                {% do form.endpoint_sip.endpoint_section_options.append_entry() %}
                {{ _build_option_entry(form.endpoint_sip.endpoint_section_options.pop_entry(), 'endpoint', template=True) }}

                {% for option in form.endpoint_sip.endpoint_section_options %}
                  {{ _build_option_entry(option, 'endpoint') }}
                {% endfor %}
              {% endcall %}

            {% endcall %}

            {{ build_add_row_entry_header() }}
          {% endcall %}
        {% endcall %}

        {% call build_tab_content_item('identify_section_options') %}
          {% call add_default_fields(form=form, submit_value=_('Update')) %}

            {{ build_add_row_entry_header() }}
            {% call build_table() %}

              {% call build_table_headers() %}
                <th>{{  _('Option Key') }}</th>
                <th>{{  _('Option Value') }}</th>
                <th style="width: 21px"></th>
              {% endcall %}

              {% call build_table_body(class_='dynamic-table') %}
                {% do form.endpoint_sip.identify_section_options.append_entry() %}
                {{ _build_option_entry(form.endpoint_sip.identify_section_options.pop_entry(), template=True) }}

                {% for option in form.endpoint_sip.identify_section_options %}
                  {{ _build_option_entry(option) }}
                {% endfor %}
              {% endcall %}

            {% endcall %}

            {{ build_add_row_entry_header() }}
          {% endcall %}
        {% endcall %}

        {% call build_tab_content_item('registration_section_options') %}
          {% call add_default_fields(form=form, submit_value=_('Update')) %}

            {{ build_add_row_entry_header() }}
            {% call build_table() %}

              {% call build_table_headers() %}
                <th>{{  _('Option Key') }}</th>
                <th>{{  _('Option Value') }}</th>
                <th style="width: 21px"></th>
              {% endcall %}

              {% call build_table_body(class_='dynamic-table') %}
                {% do form.endpoint_sip.registration_section_options.append_entry() %}
                {{ _build_option_entry(form.endpoint_sip.registration_section_options.pop_entry(), template=True) }}

                {% for option in form.endpoint_sip.registration_section_options %}
                  {{ _build_option_entry(option) }}
                {% endfor %}
              {% endcall %}

            {% endcall %}

            {{ build_add_row_entry_header() }}
          {% endcall %}
        {% endcall %}

        {% call build_tab_content_item('registration_outbound_auth_section_options') %}
          {% call add_default_fields(form=form, submit_value=_('Update')) %}

            {{ build_add_row_entry_header() }}
            {% call build_table() %}

              {% call build_table_headers() %}
                <th>{{  _('Option Key') }}</th>
                <th>{{  _('Option Value') }}</th>
                <th style="width: 21px"></th>
              {% endcall %}

              {% call build_table_body(class_='dynamic-table') %}
                {% do form.endpoint_sip.registration_outbound_auth_section_options.append_entry() %}
                {{ _build_option_entry(form.endpoint_sip.registration_outbound_auth_section_options.pop_entry(), 'auth', template=True) }}

                {% for option in form.endpoint_sip.registration_outbound_auth_section_options %}
                  {{ _build_option_entry(option, 'auth') }}
                {% endfor %}
              {% endcall %}

            {% endcall %}

            {{ build_add_row_entry_header() }}
          {% endcall %}
        {% endcall %}

        {% call build_tab_content_item('outbound_auth_section_options') %}
          {% call add_default_fields(form=form, submit_value=_('Update')) %}

            {{ build_add_row_entry_header() }}
            {% call build_table() %}

              {% call build_table_headers() %}
                <th>{{  _('Option Key') }}</th>
                <th>{{  _('Option Value') }}</th>
                <th style="width: 21px"></th>
              {% endcall %}

              {% call build_table_body(class_='dynamic-table') %}
                {% do form.endpoint_sip.outbound_auth_section_options.append_entry() %}
                {{ _build_option_entry(form.endpoint_sip.outbound_auth_section_options.pop_entry(), 'auth', template=True) }}

                {% for option in form.endpoint_sip.outbound_auth_section_options %}
                  {{ _build_option_entry(option, 'auth') }}
                {% endfor %}
              {% endcall %}

            {% endcall %}

            {{ build_add_row_entry_header() }}
          {% endcall %}
        {% endcall %}

    {% endcall %}
  {% endcall %}
{% endcall %}

  {% endcall %}
{% endblock %}


{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/trunk.js') }}"></script>
{% endblock %}



{% macro _build_option_entry(option, section=None, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
  {% if section %}
    <td>{{ render_field(
      option.option_key,
      with_label=False,
      inputclass='ui-helper-clearfix',
      data_listing_href=url_for(listing_urls['pjsip_doc'], section=section),
    ) }}</td>
  {% else %}
    <td>{{ render_field(option.option_key, with_label=False, inputclass='ui-helper-clearfix') }}</td>
  {% endif %}
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/trunk/templates/accent_engine/trunk/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.endpoint_sip['label'], 'link': url_for('.TrunkView:get', id=resource.id), 'icon': 'server' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

    {% if form.protocol.data == 'sip' %}

      {% call build_form_tabs_box() %}
        {% call build_tabs_navigation() %}
          {{ add_tab_navigation_header(_('Trunk'), form.endpoint_sip.label.data, 'server') }}
          {{ add_tab_navigation_item('trunk', _('Trunk'), active=True) }}
          {{ add_tab_navigation_item('aor_section_options', _('AOR')) }}
          {{ add_tab_navigation_item('auth_section_options', _('Authentication')) }}
          {{ add_tab_navigation_item('endpoint_section_options', _('Endpoint')) }}
          {{ add_tab_navigation_item('identify_section_options', _('Identify')) }}
          {{ add_tab_navigation_item('registration_section_options', _('Registration')) }}
          {{ add_tab_navigation_item('registration_outbound_auth_section_options', _('Registration Outbound Auth')) }}
          {{ add_tab_navigation_item('outbound_auth_section_options', _('Outbound Auth')) }}
        {% endcall %}

        {% call build_form(action=url_for('.TrunkView:put', id=resource.id)) %}
          {% call build_tabs_content() %}

            {% call build_tab_content_item('trunk', active=True) %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}
                {{ render_field(form.endpoint_sip.uuid) }}
                {{ render_field(form.endpoint_sip['label']) }}
                {{ render_field(form.endpoint_sip['name']) }}
                {{ render_field(form.endpoint_sip.transport.uuid,
                                data_listing_href=url_for(listing_urls['transport']),
                                data_allow_clear='true',
                                data_placeholder=_('Choose Transport')) }}
                {{ render_field(form.outgoing_caller_id_format) }}
                {{ render_field(form.endpoint_sip.template_uuids,
                                data_listing_href=url_for(listing_urls['sip_template']),
                                data_allow_clear='true',
                                data_placeholder=_('Choose Templates')) }}
                {{ render_field(form.endpoint_sip.templates, with_label=False) }}
                {{ render_field(form.context,
                                data_allow_clear='true',
                                class_='line-context',
                                placeholder=_('Choose Context'),
                                data_listing_href=url_for(listing_urls['context'])) }}
              {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('aor_section_options') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.endpoint_sip.aor_section_options.append_entry() %}
                    {{ _build_option_entry(form.endpoint_sip.aor_section_options.pop_entry(), 'aor', template=True) }}

                    {% for option in form.endpoint_sip.aor_section_options %}
                      {{ _build_option_entry(option, 'aor') }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

                {{ build_add_row_entry_header() }}
              {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('auth_section_options') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.endpoint_sip.auth_section_options.append_entry() %}
                    {{ _build_option_entry(form.endpoint_sip.auth_section_options.pop_entry(), 'auth', template=True) }}

                    {% for option in form.endpoint_sip.auth_section_options %}
                      {{ _build_option_entry(option, 'auth') }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

                {{ build_add_row_entry_header() }}
              {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('endpoint_section_options') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.endpoint_sip.endpoint_section_options.append_entry() %}
                    {{ _build_option_entry(form.endpoint_sip.endpoint_section_options.pop_entry(), 'endpoint', template=True) }}

                    {% for option in form.endpoint_sip.endpoint_section_options %}
                      {{ _build_option_entry(option, 'endpoint') }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

                {{ build_add_row_entry_header() }}
              {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('identify_section_options') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.endpoint_sip.identify_section_options.append_entry() %}
                    {{ _build_option_entry(form.endpoint_sip.identify_section_options.pop_entry(), template=True) }}

                    {% for option in form.endpoint_sip.identify_section_options %}
                      {{ _build_option_entry(option) }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

                {{ build_add_row_entry_header() }}
              {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('registration_section_options') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.endpoint_sip.registration_section_options.append_entry() %}
                    {{ _build_option_entry(form.endpoint_sip.registration_section_options.pop_entry(), template=True) }}

                    {% for option in form.endpoint_sip.registration_section_options %}
                      {{ _build_option_entry(option) }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

                {{ build_add_row_entry_header() }}
              {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('registration_outbound_auth_section_options') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.endpoint_sip.registration_outbound_auth_section_options.append_entry() %}
                    {{ _build_option_entry(form.endpoint_sip.registration_outbound_auth_section_options.pop_entry(), 'auth', template=True) }}

                    {% for option in form.endpoint_sip.registration_outbound_auth_section_options %}
                      {{ _build_option_entry(option, 'auth') }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

                {{ build_add_row_entry_header() }}
              {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('outbound_auth_section_options') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.endpoint_sip.outbound_auth_section_options.append_entry() %}
                    {{ _build_option_entry(form.endpoint_sip.outbound_auth_section_options.pop_entry(), 'auth', template=True) }}

                    {% for option in form.endpoint_sip.outbound_auth_section_options %}
                      {{ _build_option_entry(option, 'auth') }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

                {{ build_add_row_entry_header() }}
              {% endcall %}
            {% endcall %}

          {% endcall %}
        {% endcall %}
      {% endcall %}

    {% elif form.protocol.data == 'iax' %}

      {% call build_form_tabs_box() %}
        {% call build_tabs_navigation() %}
          {{ add_tab_navigation_header(_('Trunk'), form.endpoint_iax.name.data, 'server') }}
          {{ add_tab_navigation_item('trunk', _('Trunk'), active=True) }}
          {{ add_tab_navigation_item('register', _('Register')) }}
          {{ add_tab_navigation_item('options', _('Options')) }}
        {% endcall %}

        {% call build_form(action=url_for('.TrunkView:put', id=resource.id)) %}
          {% call build_tabs_content() %}

            {% call build_tab_content_item('trunk', active=True) %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}
                {{ render_field(form.endpoint_iax['id']) }}
                {{ render_field(form.endpoint_iax['name']) }}
                {{ render_field(form.endpoint_iax['host']) }}
                {{ render_field(form.endpoint_iax['host_value'], placeholder=_('Set host value')) }}
                {{ render_field(form.endpoint_iax['type']) }}
                {{ render_field(form.context,
                                data_allow_clear='true',
                                class_='trunk-context',
                                placeholder=_('Choose Context'),
                                data_listing_href=url_for(listing_urls['context'])) }}
              {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('register') %}
             {% call add_default_fields(form=form, submit_value=_('Update')) %}
               {{ render_field(form.register_iax['id']) }}
               {{ render_field(form.register_iax['enabled']) }}
               {{ render_field(form.register_iax['auth_username']) }}
               {{ render_field(form.register_iax['auth_password']) }}
               {{ render_field(form.register_iax['callback_context']) }}
               {{ render_field(form.register_iax['callback_extension']) }}
               {{ render_field(form.register_iax['remote_host']) }}
               {{ render_field(form.register_iax['remote_port']) }}
             {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('options') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}
                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.endpoint_iax.options.append_entry() %}
                    {{ _build_option_entry(form.endpoint_iax.options.pop_entry(), template=True) }}

                    {% for option in form.endpoint_iax.options %}
                      {{ _build_option_entry(option) }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}
              {% endcall %}
            {% endcall %}

          {% endcall %}
        {% endcall %}
      {% endcall %}

    {% elif form.protocol.data == 'custom' %}

      {% call build_form_box(_('Trunk'), form.endpoint_custom.interface.data, 'server') %}
        {% call build_form(action=url_for('.TrunkView:put', id=resource.id)) %}
          {% call add_default_fields(form=form, submit_value=_('Update')) %}
            {{ render_field(form.endpoint_custom['id']) }}
            {{ render_field(form.endpoint_custom['interface']) }}
            {{ render_field(form.endpoint_custom['interface_suffix']) }}
            {{ render_field(form.context,
                            data_allow_clear='true',
                            class_='trunk-context',
                            placeholder=_('Choose Context'),
                            data_listing_href=url_for(listing_urls['context'])) }}
          {% endcall %}
        {% endcall %}
      {% endcall %}

    {% endif %}

  {% endcall %}
{% endblock %}


{% macro _build_option_entry(option, section=None, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
  {% if section %}
    <td>{{ render_field(
      option.option_key,
      with_label=False,
      inputclass='ui-helper-clearfix',
      data_listing_href=url_for(listing_urls['pjsip_doc'], section=section),
    ) }}</td>
  {% else %}
    <td>{{ render_field(option.option_key, with_label=False, inputclass='ui-helper-clearfix') }}</td>
  {% endif %}
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}


{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/trunk.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/trunk/templates/accent_engine/trunk/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs([
{ 'name': _('Trunk'), 'link': url_for('.TrunkView:index'), 'icon': 'server' }
]) }}
{% endblock %}

{% block content %}
<section class="content">
  {% call build_list_containers(_('Trunks'), 'server') %}
  {% call build_list_table() %}
  {% call build_list_table_headers(get=url_for('.TrunkView:get', id=''), delete=url_for('.TrunkView:delete', id='')) %}
  <th width="75">{{ _('Protocol') }}</th>
  <th>{{ _('Label') }}</th>
  <th>{{ _('Name') }}</th>
  <th>{{ _('Relations') }}</th>
  {% endcall %}
  {% call(trunk) build_list_table_rows(resource_list['items']) %}
  <td>
    {% if trunk.endpoint_sip %}
    SIP
    {% elif trunk.endpoint_iax %}
    IAX
    {% elif trunk.endpoint_custom %}
    CUSTOM
    {% else %}
    -
    {% endif %}
  </td>
  <td>
    {% if trunk.endpoint_sip %}
    {{ trunk.endpoint_sip.label }}
    {% endif %}
  </td>
  <td>
    {% if trunk.endpoint_sip %}
    {{ trunk.endpoint_sip.name }}
    {% elif trunk.endpoint_iax %}
    {{ trunk.endpoint_iax.name }}
    {% elif trunk.endpoint_custom %}
    {{ trunk.endpoint_custom.interface }}
    {% endif %}
  </td>
  <td>
    {% for outcall in trunk.outcalls %}
    <strong>{{ _('outcall') }}:</strong> <a
      href="{{ url_for('accent_engine.outcall.OutcallView:get', id=outcall.id) }}">{{ outcall.name }}</a>
    {% endfor %}
    {{ '-' if not trunk.outcalls }}
  </td>
  {% endcall %}
  {% endcall %}
  {% endcall %}


  {% call build_hidden_add_containers(_('Choose your protocol')) %}
  <button type="button"
    class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-block btn-default"
    onclick="location.href='{{ url_for('.TrunkView:new', protocol='sip') }}'">{{ _('SIP') }}</button>
  <button type="button"
    class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-block btn-default"
    onclick="location.href='{{ url_for('.TrunkView:new', protocol='iax') }}'">{{ _('IAX') }}</button>
  <button type="button"
    class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-block btn-default"
    onclick="location.href='{{ url_for('.TrunkView:new', protocol='custom') }}'">{{ _('CUSTOM') }}</button>
  {% endcall %}

</section>
{% endblock %}


{% block additional_js %}
<script src="{{ url_for('.static', filename='js/trunk.js') }}"></script>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/trunk/static/accent_engine/js/trunk.js
Please review for update

$(document).ready(function () {
  $('#endpoint_iax-host').on('change', function (e) {
    toggle_endpoint_iax_host_mode.call(this)
  })
  toggle_endpoint_iax_host_mode.call($('#endpoint_iax-host'))
  $('#register_iax-enabled').on('change', function (e) {
    toggle_register_form('iax');
  });
  toggle_register_form('iax');
  $("[id$='auth_username']").on('change', function (e) {
    toggle_register_auth_validator();
  });
  $('#register_iax-callback_context').on('change', function (e) {
    toggle_register_iax_callback_validator();
  });
});


function toggle_register_auth_validator() {
    if ($("[id$='auth_username']").val().length > 0) {
      $("[id$='auth_password']").attr('required', 'required');
    } else {
      $("[id$='auth_password']").removeAttr('required');
    }
    $('form').validator('update');
}


function toggle_register_iax_callback_validator() {
    if ($('#register_iax-callback_context').val().length > 0) {
      $('#register_iax-callback_extension').attr('required', 'required');
    } else {
      $('#register_iax-callback_extension').removeAttr('required');
    }
    $('form').validator('update');
}


function toggle_endpoint_iax_host_mode() {
  if ($(this).val() == 'dynamic') {
    $('#endpoint_iax-host_value').closest('div.form-group').hide()
  } else {
    $('#endpoint_iax-host_value').closest('div.form-group').show()
  }
}


function toggle_register_form(protocol) {
  if ($('input[name="register_' + protocol + '-enabled"]:checked').length > 0) {
    $('[id^=register_' + protocol + '-]:input:not(#register_' + protocol + '-enabled)').closest('div.form-group').show()
    $('[id^=register_' + protocol + '-][required]').each(function () {
      $(this).attr('data-validate', true)
    });
  } else {
    $('[id^=register_' + protocol + '-]:input:not(#register_' + protocol + '-enabled)').closest('div.form-group').hide()
    $('[id^=register_' + protocol + '-][required]').each(function () {
      $(this).attr('data-validate', false)
    });
  }
  $('form').validator('update');
}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/switchboard/templates/accent_engine/switchboard/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.SwitchboardView:get', id=resource.uuid), 'icon': 'desktop' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box(_('Switchboard'), resource.name, 'desktop') %}
      {% call build_form(action=url_for('.SwitchboardView:put', id=resource.uuid)) %}
        {% call add_default_fields(form=form, submit_value=_('Update')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.timeout) }}
          {{ render_field(form.queue_music_on_hold,
                          data_listing_href=url_for(listing_urls['moh']),
                          data_allow_clear='true',
                          data_placeholder='Choose Music on Hold') }}
          {{ render_field(form.waiting_room_music_on_hold,
                          data_listing_href=url_for(listing_urls['moh']),
                          data_allow_clear='true',
                          data_placeholder='Choose Music on Hold') }}
          {{ render_field(form.members.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
          {{ render_field(form.members.users, with_label=false) }}
          {{ render_field(form.fallbacks.noanswer_destination) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/switchboard/templates/accent_engine/switchboard/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Switchboard'), 'link': url_for('.SwitchboardView:index'), 'icon': 'desktop' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Switchboards'), 'desktop') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.SwitchboardView:get', id=''), delete=url_for('.SwitchboardView:delete', id='')) %}
          <th>Name</th>
          <th>Extensions</th>
        {% endcall %}
        {% call(switchboard) build_list_table_rows(resource_list['items']) %}
          <td>{{ switchboard.name }}</td>
          <td>
            {% for e in switchboard.extensions %}
              <strong>internal:</strong> {{ e.exten }}
            {% endfor %}
            {% for extensions in switchboard.incalls %}
              {% for e in extensions.extensions %}
                <strong>incall:</strong> {{ e.exten }}
              {% endfor %}
            {% endfor %}
            {% if not switchboard.extensions and not switchboard.incalls %}
              -
            {% endif %}
          </td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Switchboard')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.members.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/context/templates/accent_engine/context/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.ContextView:get', id=resource.id), 'icon': 'random' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Context'), resource.name, 'random') }}
        {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {% if resource.type == 'internal' %}
          {{ add_tab_navigation_item('user', _('User')) }}
          {{ add_tab_navigation_item('group', _('Group')) }}
          {{ add_tab_navigation_item('queue', _('Queue')) }}
          {{ add_tab_navigation_item('conference', _('Conference')) }}
        {% elif resource.type == 'incall' %}
          {{ add_tab_navigation_item('incall', _('Incall')) }}
        {% endif %}
      {% endcall %}

      {% call build_form(action=url_for('.ContextView:put', id=resource.id)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.name, readonly='readonly') }}
              {{ render_field(form.label) }}
              {{ render_field(form.type, disabled=True) }}
              {{ render_field(form.type, inputclass='hidden') }}
              {{ render_field(form.description) }}
              {{ render_field(form.context_ids, data_listing_href=url_for(listing_urls['context_with_id'])) }}
            {% endcall %}
          {% endcall %}

          {% if resource.type == 'internal' %}

            {% call build_tab_content_item('user') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}
                {% call _build_ranges_type(form.user_ranges, _('User')) %}{% endcall %}
              {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('group') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}
                {% call _build_ranges_type(form.group_ranges, _('Group')) %}{% endcall %}
              {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('queue') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}
                {% call _build_ranges_type(form.queue_ranges, _('Queue')) %}{% endcall %}
              {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('conference') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}
                {% call _build_ranges_type(form.conference_room_ranges, _('Conference')) %}{% endcall %}
              {% endcall %}
            {% endcall %}

          {% elif resource.type == 'incall' %}

            {% call build_tab_content_item('incall') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}
                {% call _build_ranges_type(form.incall_ranges, _('Incall')) %}{% endcall %}
              {% endcall %}
            {% endcall %}

          {% endif %}

        {% endcall %}

      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_ranges_type(ranges, range_type) %}
  {% set caller_ = caller %}
  {% call build_table() %}
    {% call build_table_headers() %}
      <th class="text-center">{{ _('Start') }}</th>
      <th class="text-center">{{ _('End') }}</th>
      {% if resource.type == 'incall' %}
        <th class="text-center">{{ _('DID Length') }}</th>
      {% endif %}
    {% endcall %}

    {% call build_table_body(class_='dynamic-table') %}
      {% do ranges.append_entry() %}
        {{ _build_ranges_entry(ranges.pop_entry(), template=True) }}
      {% for range in ranges %}
         {{ _build_ranges_entry(range) }}
      {% endfor %}
    {% endcall %}

    {{ build_add_row_entry_header() }}

  {% endcall %}
{% endmacro %}

{% macro _build_ranges_entry(range, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(range.start, with_label=False) }}</td>
    <td>{{ render_field(range.end, with_label=False) }}</td>
    {% if resource.type == 'incall' %}
      <td>{{ render_field(range.did_length, with_label=False) }}</td>
    {% endif %}
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/context/templates/accent_engine/context/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': _('Contexts'), 'link': url_for('.ContextView:index'), 'icon': 'random' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Contexts'), 'random') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.ContextView:get', id=''), delete=url_for('.ContextView:delete', id='')) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Label') }}</th>
          <th>{{ _('Type') }}</th>
        {% endcall %}
        {% call(context) build_list_table_rows(resource_list['items']) %}
          <td>{{ context.name }}</td>
          <td>{{ context.label }}</td>
          <td>{{ context.type }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Context')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.label) }}
          {{ render_field(form.type) }}
          {{ render_field(form.description) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/webhook/templates/accent_engine/webhook/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.WebhookView:get', id=resource.uuid), 'icon': 'globe' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box(_('Webhook'), resource.name, 'globe') %}
      {% call build_form(action=url_for('.WebhookView:put', id=resource.uuid)) %}
        {% call add_default_fields(form=form, submit_value=_('Update')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.events, data_allow_custom_values=True, data_listing_href='') }}
          {{ render_field(form.user_uuid, data_listing_href=url_for(listing_urls['uuid_user'])) }}
          {{ render_field(form.events_user_uuid, with_label=false) }}
          {{ render_field(form.services) }}
          {{ render_field(form.url) }}
          {{ render_field(form.method) }}
          {{ render_field(form.verify_certificate) }}
          {{ render_field(form.content_type) }}
          {{ render_field(form.body) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/webhook/templates/accent_engine/webhook/logs.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.WebhookView:get_logs', id=resource.uuid), 'icon': 'globe' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Webhooks logs'), 'globe') %}
      {% call build_list_table() %}
        {% call build_list_table_headers() %}
          <th>{{ _('UUID') }}</th>
          <th>{{ _('Attempts') }}</th>
          <th>{{ _('Status') }}</th>
          <th>{{ _('Started at') }}</th>
          <th>{{ _('Ended at') }}</th>
        {% endcall %}
        {% call(log) build_list_table_rows(resource_list['items']) %}
          <td>{{ log.uuid }}</td>
          <td>{{ log.attempts }}/{{ log.max_attempts }}</td>
          <td style="color: {% if log.status == 'success' %}green{% elif log.status == 'failure' %}orange{% else %}red{%endif %}">{{ log.status }}</td>
          <td>{{ log.started_at }}</td>
          <td>{{ log.ended_at }}</td>
        </tr>
        <tr>
          <td colspan=5>
            Event:
            <pre>{{ log.event }}</pre>
            Service output:
            <pre>{{ log.detail }}</pre>
          </td>
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/index.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/webhook/templates/accent_engine/webhook/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs([
{ 'name': _('Webhook'), 'link': url_for('.WebhookView:index'), 'icon': 'globe' }
]) }}
{% endblock %}

{% block content %}
<section class="content">
  {% call build_list_containers(_('Webhooks'), 'globe') %}
  {% call build_list_table() %}
  {% call build_list_table_headers(get=url_for('.WebhookView:get', id=''), delete=url_for('.WebhookView:delete', id=''))
  %}
  <th>{{ _('Display Name') }}</th>
  <th>{{ _('Events Name') }}</th>
  <th>{{ _('Service') }}</th>
  <th>{{ _('Logs') }}</th>
  {% endcall %}
  {% call(webhook) build_list_table_rows(resource_list['items']) %}
  <td>{{ webhook.name }}</td>
  <td>
    <ul>
      {% for event in webhook.events %}
      <li>{{ event }}</li>
      {% endfor %}
    </ul>
  </td>
  <td>{{ webhook.service }}</td>
  <td>
    <a href="{{ url_for('.WebhookView:get_logs', id=webhook.uuid) }}" title="{{ _('See logs') }}"
      class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-xs btn-default">
      <i class="fa fa-fw fa-archive text-success"></i>
    </a>
  </td>

  {% endcall %}
  {% endcall %}
  {% endcall %}

  {% call build_hidden_add_containers(_('Add Webhook')) %}
  {% call build_form() %}
  {% call add_default_fields(form=form, submit_value=_('Add')) %}
  {{ render_field(form.name) }}
  {{ render_field(form.events, data_allow_custom_values=True, data_listing_href='') }}
  {{ render_field(form.user_uuid, data_listing_href=url_for(listing_urls['uuid_user'])) }}
  {{ render_field(form.services) }}
  <div id="http" class="hidden">
    {{ render_field(form.url) }}
    {{ render_field(form.method) }}
    {{ render_field(form.content_type) }}
    {{ render_field(form.verify_certificate) }}
    {{ render_field(form.body) }}
  </div>
  {% endcall %}
  {% endcall %}
  {% endcall %}

</section>
{% endblock %}

{% block additional_js %}
<script src="{{ url_for('.static', filename='js/index.js') }}"></script>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/webhook/static/accent_engine/js/index.js
Please review for update

$('#services').on('change', function() {
  var service = $(this).val();
  hide_services();
  if (service) {
    $('#' + service).removeClass('hidden');
  }
})

function hide_services() {
  $('#services option').each(function() {
    var service = $(this).val();
    $('#' + service).addClass('hidden');
  })
}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/voicemail/templates/accent_engine/voicemail/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.VoicemailView:get', id=resource.uuid), 'icon': 'envelope' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box(_('Voicemail'), resource.name, 'envelope') %}
      {% call build_form(action=url_for('.VoicemailView:put', id=resource.id)) %}
        {% call add_default_fields(form=form, submit_value=_('Update')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.context,
                          data_listing_href=url_for(listing_urls['context_by_type'], type_='internal')) }}
          {{ render_field(form.number) }}
          {{ render_field(form.password) }}
          {{ render_field(form.email) }}
          {{ render_field(form.language) }}
          {{ render_field(form.timezone) }}
          {{ render_field(form.max_messages) }}
          {{ render_field(form.ask_password) }}
          {{ render_field(form.attach_audio) }}
          {{ render_field(form.delete_messages) }}
          {{ render_field(form.enabled) }}
          {{ render_field(form.user_uuid, data_listing_href=url_for(listing_urls['uuid_user'])) }}
          {{ render_field(form.users, with_label=false) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/voicemail/templates/accent_engine/voicemail/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Voicemail'), 'link': url_for('.VoicemailView:index'), 'icon': 'envelope' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Voicemails'), 'envelope') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.VoicemailView:get', id=''), delete=url_for('.VoicemailView:delete', id='')) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Number') }}</th>
          <th>{{ _('Email') }}</th>
        {% endcall %}
        {% call(voicemail) build_list_table_rows(resource_list['items']) %}
          <td>{{ voicemail.name }}</td>
          <td>{{ voicemail.number }}</td>
          <td>{{ voicemail.email or '-' }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Voicemail')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.context,
                          data_listing_href=url_for(listing_urls['context_by_type'], type_='internal')) }}
          {{ render_field(form.number) }}
          {{ render_field(form.password, autocomplete="off") }}
          {{ render_field(form.email) }}
          {{ render_field(form.language) }}
          {{ render_field(form.timezone) }}
          {{ render_field(form.user_uuid, data_listing_href=url_for(listing_urls['uuid_user'])) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/device/templates/accent_engine/device/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.ip, 'link': url_for('.DeviceView:get', id=resource.id), 'icon': 'phone-square' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box(_('Device'), resource.mac, 'phone-square') %}
      {% call build_form(action=url_for('.DeviceView:put', id=resource.id)) %}
        {% call add_default_fields(form=form, submit_value=_('Update')) %}
          {{ render_field(form.template_id, data_listing_href=url_for(listing_urls['config_device'])) }}
          {{ render_field(form.ip) }}
          {{ render_field(form.mac, readonly='readonly') }}
          {{ render_field(form.plugin, data_listing_href=url_for(listing_urls['plugin'])) }}
          {{ render_field(form.model, readonly='readonly') }}
          {{ render_field(form.vendor, readonly='readonly') }}
          {{ render_field(form.version, readonly='readonly') }}
          {{ render_field(form.options.switchboard) }}
          {{ render_field(form.description) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/device/templates/accent_engine/device/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs(current_breadcrumbs + [
{ 'name': _('Devices'), 'link': url_for('.DeviceView:index'), 'icon': 'phone-square' }
]) }}
{% endblock %}

{% block content %}
<section class="content">
  {% call build_list_containers(_('Devices'), 'phone-square') %}
  {% call build_form_tabs_box() %}
  {% call build_tabs_navigation() %}
  {{ add_tab_navigation_item('all', _('All'), active=True) }}
  {{ add_tab_navigation_item('unallocated', _('Unallocated')) }}
  {% endcall %}
  {% call build_tabs_content() %}

  {% call build_tab_content_item('all', active=True) %}
  {% call build_list_table('all', id='all') %}
  {% call build_list_table_headers(get=url_for('.DeviceView:get', id=''), delete=url_for('.DeviceView:delete', id=''))
  %}
  <th style="width: 10px" class="no-sort"></th>
  <th>{{ _('IP') }}</th>
  <th>{{ _('MAC') }}</th>
  <th>{{ _('Model') }}</th>
  <th>{{ _('Plugin') }}</th>
  <th>{{ _('Vendor') }}</th>
  <th>{{ _('Version') }}</th>
  <th style="width: 50px" class="no-sort"></th>
  {% endcall %}
  {% call(device) build_list_table_rows(resource_list['all']['items']) %}
  <td>
    {% if device.status == 'configured' %}
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
      class="size-6">
      <path stroke-linecap="round" stroke-linejoin="round"
        d="M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
    </svg>

    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-6 w-6 text-green-500">
      <path fill-rule="evenodd"
        d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm13.36-1.814a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z"
        clip-rule="evenodd" />
    </svg>
    {% elif device.status == 'autoprov' %}
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-6 w-6 text-yellow-500">
      <path fill-rule="evenodd"
        d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm13.36-1.814a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z"
        clip-rule="evenodd" />
    </svg>
    {% elif device.status == 'not_configured' %}
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-6 w-6 text-red-500">
      <path fill-rule="evenodd"
        d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25Zm-1.72 6.97a.75.75 0 1 0-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 1 0 1.06 1.06L12 13.06l1.72 1.72a.75.75 0 1 0 1.06-1.06L13.06 12l1.72-1.72a.75.75 0 1 0-1.06-1.06L12 10.94l-1.72-1.72Z"
        clip-rule="evenodd" />
    </svg>
    {% else %}
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
      <path fill-rule="evenodd"
        d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm11.378-3.917c-.89-.777-2.366-.777-3.255 0a.75.75 0 0 1-.988-1.129c1.454-1.272 3.776-1.272 5.23 0 1.513 1.324 1.513 3.518 0 4.842a3.75 3.75 0 0 1-.837.552c-.676.328-1.028.774-1.028 1.152v.75a.75.75 0 0 1-1.5 0v-.75c0-1.279 1.06-2.107 1.875-2.502.182-.088.351-.199.503-.331.83-.727.83-1.857 0-2.584ZM12 18a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Z"
        clip-rule="evenodd" />
    </svg>
    {% endif %}
  </td>
  <td>{{ device.ip or '-' }}</td>
  <td>{{ device.mac or '-' }}</td>
  <td>{{ device.model or '-' }}</td>
  <td>{{ device.plugin or '-' }}</td>
  <td>{{ device.vendor or '-' }}</td>
  <td>{{ device.version or '-' }}</td>
  <td id="data-column-actions">
    <a href="{{ url_for('.DeviceView:synchronize', device_id=device['id']) }}" id="link-synchronize-device"
      title="{{ _('Synchronize device') }}" data-toggle="confirmation"
      data-title="{{ _('Are you sure you want to synchronize this device ?') }}"
      class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-xs btn-default">
      <i class="fa fa-fw fa-arrows-h"></i>
    </a>
    <a href="{{ url_for('.DeviceView:autoprov', device_id=device['id']) }}" id="link-reset-device"
      title="{{ _('Reset device to autoprov mode') }}" data-toggle="confirmation"
      data-title="{{ _('Are you sure you want to reset this device ?') }}"
      class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-xs btn-default">
      <i class="fa fa-fw fa-random"></i>
    </a>
  </td>
  {% endcall %}
  {% endcall %}
  {% endcall %}

  {% call build_tab_content_item('unallocated') %}
  {% call build_list_table('unallocated', id='unallocated') %}
  {% call build_list_table_headers(actions_column=false) %}
  <th style="width: 10px" class="no-sort"></th>
  <th>{{ _('IP') }}</th>
  <th>{{ _('MAC') }}</th>
  <th>{{ _('Model') }}</th>
  <th>{{ _('Plugin') }}</th>
  <th>{{ _('Vendor') }}</th>
  <th>{{ _('Version') }}</th>
  <th style="width: 50px" class="no-sort"></th>
  {% endcall %}
  {% call(device) build_list_table_rows(resource_list['unallocated']['items']) %}
  <td>
    {% if device.status == 'configured' %}
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-6 w-6 text-green-500">
      <path fill-rule="evenodd"
        d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm13.36-1.814a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z"
        clip-rule="evenodd" />
    </svg>
    {% elif device.status == 'autoprov' %}
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-6 w-6 text-yellow-500">
      <path fill-rule="evenodd"
        d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm13.36-1.814a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z"
        clip-rule="evenodd" />
    </svg>
    {% elif device.status == 'not_configured' %}
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-6 w-6 text-red-500">
      <path fill-rule="evenodd"
        d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25Zm-1.72 6.97a.75.75 0 1 0-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 1 0 1.06 1.06L12 13.06l1.72 1.72a.75.75 0 1 0 1.06-1.06L13.06 12l1.72-1.72a.75.75 0 1 0-1.06-1.06L12 10.94l-1.72-1.72Z"
        clip-rule="evenodd" />
    </svg>
    {% else %}
    -
    {% endif %}
  </td>
  <td>{{ device.ip or '-' }}</td>
  <td>{{ device.mac or '-' }}</td>
  <td>{{ device.model or '-' }}</td>
  <td>{{ device.plugin or '-' }}</td>
  <td>{{ device.vendor or '-' }}</td>
  <td>{{ device.version or '-' }}</td>
  <td id="data-column-actions">
    <a href="{{ url_for('.DeviceView:assign_tenant', device_id=device['id']) }}" id="link-assign-device"
      title="{{ _('Assign device to current tenant') }}" data-toggle="confirmation"
      data-title="{{ _('Are you sure you want to assign this device to the current tenant?') }}"
      class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-xs btn-default">
      {{ _('Take') }}
    </a>
  </td>
  {% endcall %}
  {% endcall %}
  {% endcall %}
  {% endcall %}
  {{ _('Status') }}:
  (<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-6 w-6 text-green-500">
    <path fill-rule="evenodd"
      d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm13.36-1.814a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z"
      clip-rule="evenodd" />
  </svg> {{ _('Configured') }})
  (<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-6 w-6 text-yellow-500">
    <path fill-rule="evenodd"
      d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm13.36-1.814a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z"
      clip-rule="evenodd" />
  </svg> {{ _('Autoprov') }})
  (<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-6 w-6 text-red-500">
    <path fill-rule="evenodd"
      d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25Zm-1.72 6.97a.75.75 0 1 0-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 1 0 1.06 1.06L12 13.06l1.72 1.72a.75.75 0 1 0 1.06-1.06L13.06 12l1.72-1.72a.75.75 0 1 0-1.06-1.06L12 10.94l-1.72-1.72Z"
      clip-rule="evenodd" />
  </svg> {{ _('Not configured') }})

  {% endcall %}

  {% endcall %}

  {% call build_hidden_add_containers(_('Add Device'), 'all-add-form') %}
  {% call build_form() %}
  {% call add_default_fields(form=form, submit_value=_('Add')) %}
  {{ render_field(form.ip) }}
  {{ render_field(form.mac) }}
  {{ render_field(form.options.switchboard) }}
  {{ render_field(form.description) }}
  {% endcall %}
  {% endcall %}
  {% endcall %}
</section>
{% endblock %}


{% block additional_js %}
<script src="{{ url_for('.static', filename='js/device.js') }}"></script>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/device/static/accent_engine/js/device.js
Please review for update

$(document).ready(function() {
  let datatable = $('#table-list').DataTable();

  datatable.button().add( 5, {
    className: 'btn sync-selected-rows',
    text: '<i class="fa fa-arrows-h"></i>',
    titleAttr: 'Synchronize selected devices',
    action: function (e, dt, node, config) {
      if (confirm('Are you sure you want to synchronize these devices ?')) {
        dt.rows({selected: true}).every(function(rowIdx, tableLoop, rowLoop) {
          let row = this.nodes().to$();
          $.ajax({
            url: row.find('#link-synchronize-device').attr('href'),
            type: 'GET'
          });
          row.removeClass('selected');
        });
      }
    }
  });
  $('#link-synchronize-device').mouseover(function () {
    $(this).attr('title', $(this).data('original-title'));
  });
  $('#link-reset-device').mouseover(function () {
    $(this).attr('title', $(this).data('original-title'));
  });
});

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/general_settings/templates/accent_engine/general_settings/sccp_general.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('SCCP General Settings'), '', 'asterisk', [_('Edit')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

      {% call build_form_tabs_box() %}
        {% call build_tabs_navigation() %}
          {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {% endcall %}

        {% call build_form(action=url_for('.SCCPGeneralSettingsView:put')) %}
          {% call build_tabs_content() %}

            {% call build_tab_content_item('general', active=True) %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.options.append_entry() %}
                    {{ _build_option_entry(form.options.pop_entry(), template=True) }}

                    {% for option in form.options %}
                      {{ _build_option_entry(option) }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

                {{ build_add_row_entry_header() }}

              {% endcall %}
            {% endcall %}

          {% endcall %}
        {% endcall %}

      {% endcall %}

  {% endcall %}
{% endblock %}


{% macro _build_option_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.option_key, with_label=False) }}</td>
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/general_settings/templates/accent_engine/general_settings/voicemail_general.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('Voicemail'), '', 'envelope', [_('Edit')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

      {% call build_form_tabs_box() %}
        {% call build_tabs_navigation() %}
          {{ add_tab_navigation_item('general', _('General'), active=True) }}
          {{ add_tab_navigation_item('timezones', _('Timezones')) }}
        {% endcall %}

        {% call build_form(action=url_for('.VoicemailGeneralSettingsView:put')) %}
          {% call build_tabs_content() %}

            {% call build_tab_content_item('general', active=True) %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.general.options.append_entry() %}
                    {{ _build_option_entry(form.general.options.pop_entry(), template=True) }}

                    {% for option in form.general.options %}
                      {{ _build_option_entry(option) }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

              {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('timezones') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Name') }}</th>
                    <th>{{  _('Timezone') }}</th>
                    <th>{{  _('Message') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.zonemessages.append_entry() %}
                    {{ _build_zonemessages_entry(form.zonemessages.pop_entry(), template=True) }}

                    {% for zonemessage in form.zonemessages %}
                      {{ _build_zonemessages_entry(zonemessage) }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

              {% endcall %}
            {% endcall %}

          {% endcall %}
        {% endcall %}

      {% endcall %}

  {% endcall %}
{% endblock %}


{% macro _build_option_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.option_key, with_label=False) }}</td>
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}


{% macro _build_zonemessages_entry(zonemessage, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(zonemessage['name'], with_label=False) }}</td>
    <td>{{ render_field(zonemessage.timezone,
                        with_label=False,
                        data_listing_href=url_for(listing_urls['timezone']),
                        data_placeholder=_('Choose Timezone')) }}</td>
    <td>{{ render_field(zonemessage.message, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/general_settings/templates/accent_engine/general_settings/confbridge_general.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumb(_('Conference'), '', 'compress', [_('Edit')]) }}
{% endblock %}

{% block content %}
{% call build_section_row() %}

{% call build_form_tabs_box() %}
{% call build_tabs_navigation() %}
{{ add_tab_navigation_item('accent_default_bridge', _('Default Bridge'), active=True) }}
{{ add_tab_navigation_item('accent_default_user', _('Default User')) }}
{% endcall %}

{% call build_form(action=url_for('.ConfBridgeGeneralSettingsView:put')) %}
{% call build_tabs_content() %}

{% call build_tab_content_item('accent_default_bridge', active=True) %}
{% call add_default_fields(form=form, submit_value=_('Update')) %}

{{ build_add_row_entry_header() }}
{% call build_table() %}

{% call build_table_headers() %}
<th>{{ _('Option Key') }}</th>
<th>{{ _('Option Value') }}</th>
<th style="width: 21px"></th>
{% endcall %}

{% call build_table_body(class_='dynamic-table') %}
{% do form.accent_default_bridge.options.append_entry() %}
{{ _build_option_entry(form.accent_default_bridge.options.pop_entry(), template=True) }}

{% for option in form.accent_default_bridge.options %}
{{ _build_option_entry(option) }}
{% endfor %}
{% endcall %}

{% endcall %}

{% endcall %}
{% endcall %}

{% call build_tab_content_item('accent_default_user') %}
{% call add_default_fields(form=form, submit_value=_('Update')) %}

{{ build_add_row_entry_header() }}
{% call build_table() %}

{% call build_table_headers() %}
<th>{{ _('Option Key') }}</th>
<th>{{ _('Option Value') }}</th>
<th style="width: 21px"></th>
{% endcall %}

{% call build_table_body(class_='dynamic-table') %}
{% do form.accent_default_user.options.append_entry() %}
{{ _build_option_entry(form.accent_default_user.options.pop_entry(), template=True) }}

{% for option in form.accent_default_user.options %}
{{ _build_option_entry(option) }}
{% endfor %}
{% endcall %}

{% endcall %}

{% endcall %}
{% endcall %}

{% endcall %}
{% endcall %}

{% endcall %}

{% endcall %}
{% endblock %}


{% macro _build_option_entry(option, template=False) %}
{% if template %}
{% set tr_class = "row-template hidden" %}
{% else %}
{% set tr_class = "row-line" %}
{% endif %}
<tr class="{{ tr_class }}">
  <td>{{ render_field(option.option_key, with_label=False) }}</td>
  <td>{{ render_field(option.option_value, with_label=False) }}</td>
  <td>{{ add_delete_entry_button() }}</td>
</tr>
{% endmacro %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/general_settings/templates/accent_engine/general_settings/pjsip_global.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('PJSIP Global Settings'), '', 'asterisk', [_('Edit')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

      {% call build_form_tabs_box() %}
        {% call build_tabs_navigation() %}
          {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {% endcall %}

        {% call build_form(action=url_for('.PJSIPGlobalSettingsView:put')) %}
          {% call build_tabs_content() %}

            {% call build_tab_content_item('general', active=True) %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.options.append_entry() %}
                    {{ _build_option_entry(form.options.pop_entry(), template=True) }}

                    {% for option in form.options %}
                      {{ _build_option_entry(option) }}
                    {% endfor %}

                  {% endcall %}

                {% endcall %}

                {{ build_add_row_entry_header() }}

              {% endcall %}
            {% endcall %}

          {% endcall %}
        {% endcall %}

      {% endcall %}

  {% endcall %}
{% endblock %}


{% macro _build_option_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
      <td>{{ render_field(
          option.option_key,
          with_label=False,
          inputclass='ui-helper-clearfix',
          data_listing_href=url_for(listing_urls['pjsip_doc'], section='global')) }}</td>
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/general_settings/templates/accent_engine/general_settings/iax_general.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('IAX General Settings'), '', 'asterisk', [_('Edit')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

      {% call build_form_tabs_box() %}
        {% call build_tabs_navigation() %}
          {{ add_tab_navigation_item('general', _('General'), active=True) }}
          {{ add_tab_navigation_item('callnumberlimits', _('Call Number Limits')) }}
        {% endcall %}

        {% call build_form(action=url_for('.IaxGeneralSettingsView:put')) %}
          {% call build_tabs_content() %}

            {% call build_tab_content_item('general', active=True) %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.general.options.append_entry() %}
                    {{ _build_option_entry(form.general.options.pop_entry(), template=True) }}

                    {% for option in form.general.options %}
                      {{ _build_option_entry(option) }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

              {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('callnumberlimits') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Ip Address') }}</th>
                    <th>{{  _('Netmask') }}</th>
                    <th>{{  _('Limit') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.callnumberlimits.append_entry() %}
                    {{ _build_callnumberlimits_entry(form.callnumberlimits.pop_entry(), template=True) }}

                    {% for callnumberlimit in form.callnumberlimits %}
                      {{ _build_callnumberlimits_entry(callnumberlimit) }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

              {% endcall %}
            {% endcall %}

          {% endcall %}
        {% endcall %}

      {% endcall %}

  {% endcall %}
{% endblock %}


{% macro _build_option_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.option_key, with_label=False) }}</td>
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}


{% macro _build_callnumberlimits_entry(callnumberlimit, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(callnumberlimit.ip_address, with_label=False) }}</td>
    <td>{{ render_field(callnumberlimit.netmask, with_label=False) }}</td>
    <td>{{ render_field(callnumberlimit.limit, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/general_settings/templates/accent_engine/general_settings/features_general.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('Features General Settings'), '', 'asterisk', [_('Edit')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

      {% call build_form_tabs_box() %}
        {% call build_tabs_navigation() %}
          {{ add_tab_navigation_item('general', _('General'), active=True) }}
          {{ add_tab_navigation_item('featuremap', _('Featuremap')) }}
          {{ add_tab_navigation_item('applicationmap', _('Applicationmap')) }}
        {% endcall %}

        {% call build_form(action=url_for('.FeaturesGeneralSettingsView:put')) %}
          {% call build_tabs_content() %}

            {% call build_tab_content_item('general', active=True) %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.general.options.append_entry() %}
                    {{ _build_option_entry(form.general.options.pop_entry(), template=True) }}

                    {% for option in form.general.options %}
                      {{ _build_option_entry(option) }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

              {% endcall %}
              {{ build_add_row_entry_header() }}
            {% endcall %}

            {% call build_tab_content_item('featuremap') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.featuremap.options.append_entry() %}
                    {{ _build_option_entry(form.featuremap.options.pop_entry(), template=True) }}

                    {% for option in form.featuremap.options %}
                      {{ _build_option_entry(option) }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

                {{ build_add_row_entry_header() }}
              {% endcall %}
            {% endcall %}

            {% call build_tab_content_item('applicationmap') %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.applicationmap.options.append_entry() %}
                    {{ _build_option_entry(form.applicationmap.options.pop_entry(), template=True) }}

                    {% for option in form.applicationmap.options %}
                      {{ _build_option_entry(option) }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}

                {{ build_add_row_entry_header() }}
              {% endcall %}
            {% endcall %}

          {% endcall %}
        {% endcall %}

      {% endcall %}

  {% endcall %}
{% endblock %}


{% macro _build_option_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.option_key, with_label=False) }}</td>
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/general_settings/templates/accent_engine/general_settings/pjsip_system.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('PJSIP System Settings'), '', 'asterisk', [_('Edit')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

      {% call build_form_tabs_box() %}
        {% call build_tabs_navigation() %}
          {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {% endcall %}

        {% call build_form(action=url_for('.PJSIPSystemSettingsView:put')) %}
          {% call build_tabs_content() %}

            {% call build_tab_content_item('general', active=True) %}
              {% call add_default_fields(form=form, submit_value=_('Update')) %}

                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{  _('Option Key') }}</th>
                    <th>{{  _('Option Value') }}</th>
                    <th style="width: 21px"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.options.append_entry() %}
                    {{ _build_option_entry(form.options.pop_entry(), template=True) }}

                    {% for option in form.options %}
                      {{ _build_option_entry(option) }}
                    {% endfor %}

                  {% endcall %}

                {% endcall %}

                {{ build_add_row_entry_header() }}

              {% endcall %}
            {% endcall %}

          {% endcall %}
        {% endcall %}

      {% endcall %}

  {% endcall %}
{% endblock %}


{% macro _build_option_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
      <td>{{ render_field(
          option.option_key,
          with_label=False,
          inputclass='ui-helper-clearfix',
          data_listing_href=url_for(listing_urls['pjsip_doc'], section='system')) }}</td>
    <td>{{ render_field(option.option_value, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/incall/templates/accent_engine/incall/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.caller_id_name, 'link': url_for('.IncallView:get', id=resource.id), 'icon': 'long-arrow-right' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Incall'), '', 'long-arrow-right') }}
        {{ add_tab_navigation_item('incall', _('Incall'), active=True) }}
        {{ add_tab_navigation_item('schedule', _('Schedule')) }}
      {% endcall %}

      {% call build_form(action=url_for('.IncallView:put', id=resource.id)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('incall', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.extensions[0].context,
                              label='Exten',
                              inputclass='ui-helper-clearfix',
                              divclass='col-sm-4',
                              class_='incall-context',
                              placeholder=_('Choose Incall Context'),
                              data_listing_href=url_for(listing_urls['context_by_type'], type_='incall')) }}
              {{ render_field(form.extensions[0].exten,
                              data_allow_custom_values=True,
                              divclass='col-sm-2',
                              with_label=False,
                              class_='incall-exten',
                              data_listing_href=url_for(listing_urls['available_extension_incall'])) }}
              {{ render_field(form.destination, with_label=False) }}
              {{ render_field(form.preprocess_subroutine) }}
              {{ render_field(form.greeting_sound) }}
              {{ render_field(form.caller_id_mode, data_allow_clear='true') }}
              {{ render_field(form.caller_id_name) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('schedule') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
                {{ render_field(form.schedules[0]['name']) }}
                {{ render_field(form.schedules[0]['id'],
                                data_listing_href=url_for(listing_urls['schedule']),
                                data_allow_clear='true',
                                data_placeholder=_('Choose Schedules')) }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}

    {% endcall %}

  {% endcall %}
{% endblock %}

{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/incall.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/incall/templates/accent_engine/incall/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Incall'), 'link': url_for('.IncallView:index'), 'icon': 'long-arrow-right' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Incalls'), 'long-arrow-right') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.IncallView:get', id=''), delete=url_for('.IncallView:delete', id='')) %}
          <th>{{ _('Did') }}</th>
          <th>{{ _('Destination') }}</th>
          <th>{{ _('Identity') }}</th>
        {% endcall %}
        {% call(incall) build_list_table_rows(resource_list['items']) %}
          <td>
            {% for extension in incall.extensions %}
              {{ extension.exten }}
            {% endfor %}
          </td>
          <td>{{ incall.destination.type }}</td>
          <td>
            {% if incall.destination.type == 'user' %}
              {{ incall.destination.user_firstname }} {{ incall.destination.user_lastname }}
            {% elif incall.destination.type == 'ivr' %}
              {{ incall.destination.ivr_name }}
            {% elif incall.destination.type == 'voicemail' %}
              {{ incall.destination.voicemail_name }}
            {% elif incall.destination.type == 'custom' %}
              {{ incall.destination.command }}
            {% elif incall.destination.type == 'group' %}
              {{ incall.destination.group_name }}
            {% elif incall.destination.type == 'conference' %}
              {{ incall.destination.conference_name }}
            {% elif incall.destination.type == 'switchboard' %}
              {{ incall.destination.switchboard_name }}
            {% elif incall.destination.type == 'queue' %}
              {{ incall.destination.queue_label }}
            {% else %}
              -
            {% endif %}
          </td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Incall')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.extensions[0].context,
                          label='Extension',
                          inputclass='ui-helper-clearfix',
                          divclass='col-sm-4',
                          class_='incall-context',
                          data_listing_href=url_for(listing_urls['context_by_type'], type_='incall')) }}
          {{ render_field(form.extensions[0].exten,
                          with_label=False,
                          data_allow_custom_values=True,
                          divclass='col-sm-4 clear',
                          class_='incall-exten',
                          data_listing_href=url_for(listing_urls['available_extension_incall'])) }}
          {{ render_field(form.destination, with_label=False) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/incall.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/incall/static/accent_engine/js/incall.js
Please review for update

$(document).ready(function () {
  $('.incall-context').on("change", function (e) {
    add_available_extensions();
  });

  var $mode = $('#caller_id_mode');
  add_available_extensions();
  $mode.on('change', function (e) {
    toggle_callerid_mode.call(this)
  });
  toggle_callerid_mode.call($mode);
});


function toggle_callerid_mode() {
  var $name = $('#caller_id_name');

  if ($(this).val() === '') {
    $name.closest('div.form-group').hide();
  } else {
    $name.closest('div.form-group').show();
  }
}


function add_available_extensions() {
  let extension_select = $(".incall-exten");
  let context_select = $(".incall-context");
  let ajax_url = $(extension_select).attr('data-listing-href');
  if (!ajax_url) {
    return;
  }

  extension_select.select2({
    theme: 'bootstrap',
    placeholder: 'Select...',
    tags: true,
    ajax: {
      url: ajax_url,
      data: function (params) {
        return {
          term: params.term,
          context: context_select.val()
        }
      }
    }
  });
}

$(document).ready(function() {
  var selectors = ['#destination-queue-skill_rule_id', '#destination-queue-queue_id'];
  var $selects = {};
  var ids = {};
  for (var i = 0; i < selectors.length; i++) {
    var $select = $(selectors[i]);
    var listingUrl = $select.data('listing_href') || $select.data('listing-href');
    var id = $select.val();
    $selects[listingUrl] = $select;
    ids[listingUrl] = id;
    if (!id) {
      continue;
    }

    $select.empty();

    $.ajax({ url: listingUrl, success: function(data) {
      var $select = $selects[this.url];
      var id = ids[this.url];
      $.each(data.results, function(idx, result) {
        $select.append($("<option></option>").attr('value', result.id).text(result.text));
      });
      $select.val(id);

      $select.select2({
        theme: 'bootstrap',
        placeholder: 'Select...',
      });
    }});
  }
});

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/cli/templates/accent_engine/asterisk_cli/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb('Asterisk CLI', 'Execute an Asterisk command', 'terminal', ['exec command']) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers('Asterisk CLI', 'terminal', size=12) %}
      <div class="col-md-4">
        {% call build_form() %}
          {% call add_default_fields(form=form, submit_value="Execute") %}
            {{ render_field(form.command) }}
          {% endcall %}
        {% endcall %}
      </div>
      <div class="col-md-8">
        <span>Terminal CLI</span>
        <div id="terminal" style="height: 300px; width: 100%">
          <div class="form-group">
            <textarea class="form-control" style="background-color: black;color: white; width: 100%;" id="cliTextArea" rows="14">
	      {% if results %}
	        {% for result in results %}
	          {{ result }}
	        {% endfor %}
	      {% else %}
                Result of your command...
	      {% endif %}
	    </textarea>
          </div>
	</div>
      </div>
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/outcall/templates/accent_engine/outcall/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.OutcallView:get', id=resource.id), 'icon': 'long-arrow-left' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Outcall'), resource.name, 'long-arrow-left') }}
        {{ add_tab_navigation_item('outcall', _('Outcall'), active=True) }}
        {{ add_tab_navigation_item('extensions', _('Extensions')) }}
        {{ add_tab_navigation_item('schedule', _('Schedule')) }}
        {{ add_tab_navigation_item('callpermission', _('Call Permissions')) }}
      {% endcall %}

      {% call build_form(action=url_for('.OutcallView:put', id=resource.id)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('outcall', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.name) }}
              {{ render_field(form.description) }}
              {{ render_field(form.trunks_ids, data_listing_href=url_for(listing_urls['trunk'])) }}
              {{ render_field(form.preprocess_subroutine) }}
              {{ render_field(form.internal_caller_id) }}
              {{ render_field(form.ring_time) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('extensions') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ build_add_row_entry_header() }}
              {% call build_table() %}

                {% call build_table_headers() %}
                  <th>{{ _('Context') }}</th>
                  <th>{{ _('Extension') }}</th>
                  <th>{{ _('Caller ID') }}</th>
                  <th>{{ _('External prefix') }}</th>
                  <th>{{ _('Prefix') }}</th>
                  <th>{{ _('Strip digits') }}</th>
                  <th style="width: 21px"></th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.extensions.append_entry() %}
                  {{ _build_extension_entry(form.extensions.pop_entry(), template=True) }}

                  {% for extension in form.extensions %}
                    {{ _build_extension_entry(extension) }}
                  {% endfor %}
                {% endcall %}

              {% endcall %}

              {{ build_add_row_entry_header() }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('schedule') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
                {{ render_field(form.schedules[0]['name']) }}
                {{ render_field(form.schedules[0]['id'],
                                data_listing_href=url_for(listing_urls['schedule']),
                                data_allow_clear='true',
                                data_placeholder=_('Choose Schedules')) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('callpermission') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.call_permission_ids,
                              data_listing_href=url_for(listing_urls['callpermission']),
                              data_allow_clear='true',
                              data_placeholder=_('Choose Call Permissions')) }}
              {{ render_field(form.call_permissions, with_label=False) }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}


{% macro _build_extension_entry(extension, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    {{ render_field(extension['id']) }}
    <td>{{ render_field(extension.context,
                        with_label=False,
                        class_='outcall-context',
                        placeholder=_('Choose Context'),
                        data_listing_href=url_for(listing_urls['context_by_type'], type_='outcall')) }}</td>
    <td>{{ render_field(extension.exten, with_label=False) }}</td>
    <td>{{ render_field(extension.caller_id, with_label=False) }}</td>
    <td>{{ render_field(extension.external_prefix, with_label=False) }}</td>
    <td>{{ render_field(extension.prefix_, with_label=False) }}</td>
    <td>{{ render_field(extension.strip_digits, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/outcall/templates/accent_engine/outcall/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Outcall'), 'link': url_for('.OutcallView:index'), 'icon': 'long-arrow-left' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Outcalls'), 'long-arrow-left') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.OutcallView:get', id=''), delete=url_for('.OutcallView:delete', id='')) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Description') }}</th>
        {% endcall %}
        {% call(outcall) build_list_table_rows(resource_list['items']) %}
          <td>{{ outcall.name }}</td>
          <td>{{ outcall.description }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Outcall')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.description) }}
          {{ render_field(form.trunks_ids, data_listing_href=url_for(listing_urls['trunk'])) }}
          {{ render_field(form.trunks, with_label=False) }}

              {{ build_add_row_entry_header() }}
              {% call build_table() %}
                {% call build_table_headers() %}
                  <th>{{ _('Context') }}</th>
                  <th>{{ _('Extension') }}</th>
                  <th>{{ _('Caller ID') }}</th>
                  <th>{{ _('External prefix') }}</th>
                  <th>{{ _('Prefix') }}</th>
                  <th>{{ _('Strip digits') }}</th>
                {% endcall %}

                {% call build_table_body(class_='dynamic-table') %}
                  {% do form.extensions.append_entry() %}
                  {{ _build_extension_entry(form.extensions.pop_entry(), template=True) }}

                  {% for extension in form.extensions %}
                    {{ _build_extension_entry(extension) }}
                  {% endfor %}
                {% endcall %}
              {% endcall %}

              {{ build_add_row_entry_header() }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

{% macro _build_extension_entry(extension, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(extension.context,
                        with_label=False,
                        class_='outcall-context',
                        placeholder=_('Choose Context'),
                        data_listing_href=url_for(listing_urls['context_by_type'], type_='outcall')) }}</td>
    <td>{{ render_field(extension.exten, with_label=False) }}</td>
    <td>{{ render_field(extension.caller_id, with_label=False) }}</td>
    <td>{{ render_field(extension.external_prefix, with_label=False) }}</td>
    <td>{{ render_field(extension.prefix_, with_label=False) }}</td>
    <td>{{ render_field(extension.strip_digits, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/conference/templates/accent_engine/conference/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.ConferenceView:get', id=resource.id), 'icon': 'compress' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box(_('Conference'), resource.name, 'compress') %}
      {% call build_form(action=url_for('.ConferenceView:put', id=resource.id)) %}
        {% call add_default_fields(form=form, submit_value=_('Update')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.extensions[0].exten,
                          divclass='col-sm-2',
                          inputclass='ui-helper-clearfix',
                          class_='conference-exten',
                          data_allow_clear='true',
                          data_allow_custom_values=True,
                          data_listing_href=url_for(listing_urls['available_extension_conference'])) }}
          {{ render_field(form.extensions[0].context,
                          with_label=False,
                          divclass='col-sm-4',
                          class_='conference-context',
                          data_listing_href=url_for(listing_urls['context_by_type'], type_='internal')) }}
          {{ render_field(form.pin) }}
          {{ render_field(form.admin_pin) }}
          {{ render_field(form.announce_join_leave) }}
          {{ render_field(form.announce_user_count) }}
          {{ render_field(form.announce_only_user) }}
          {{ render_field(form.music_on_hold,
                          data_listing_href=url_for(listing_urls['moh']),
                          data_allow_clear='true',
                          data_placeholder='Choose Music on Hold') }}
          {{ render_field(form.preprocess_subroutine) }}
          {{ render_field(form.quiet_join_leave) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/conference.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/conference/templates/accent_engine/conference/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Conferences'), 'link': url_for('.ConferenceView:index'), 'icon': 'compress' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Conferences'), 'compress') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.ConferenceView:get', id=''), delete=url_for('.ConferenceView:delete', id='')) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Extension') }}</th>
          <th>{{ _('PIN') }}</th>
        {% endcall %}
        {% call(conference) build_list_table_rows(resource_list['items']) %}
          <td>{{ conference.name }}</td>
          <td>
            {% for extension in conference.extensions %}
              <strong>{{ _('internal') }}:</strong> {{ extension.exten }}
            {% endfor %}
            {% for extensions in conference.incalls %}
              {% for extension in extensions.extensions %}
                <strong>{{ _('incall') }}:</strong> {{ extension.exten }}
              {% endfor %}
            {% endfor %}
            {{ '-' if not conference.extensions and not conference.incalls }}
          </td>
          <td>{{ conference.pin or '-' }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Conference')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.extensions[0].context,
                          label='Extension',
                          divclass='col-sm-4',
                          inputclass='ui-helper-clearfix',
                          placeholder='Choose Context',
                          class_='conference-context',
                          data_listing_href=url_for(listing_urls['context_by_type'], type_='internal')) }}
          {{ render_field(form.extensions[0].exten,
                          with_label=False,
                          divclass='col-sm-4',
                          class_='conference-exten',
                          data_allow_clear='true',
                          data_allow_custom_values=True,
                          data_listing_href=url_for(listing_urls['available_extension_conference'])) }}
          {{ render_field(form.pin) }}
          {{ render_field(form.admin_pin) }}
          {{ render_field(form.announce_join_leave) }}
          {{ render_field(form.announce_user_count) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/conference.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/conference/static/accent_engine/js/conference.js
Please review for update

$(document).ready(function () {
  $('.conference-context').on("change", function (e) {
    add_available_extensions();
  });
  add_available_extensions();
});

function add_available_extensions() {
  let extension_select = $(".conference-exten");
  let context_select = $(".conference-context");
  let ajax_url = $(extension_select).attr('data-listing-href');
  if (!ajax_url) {
    return;
  }

  if (!extension_select.val()) {
    extension_select.append("<option></option>")
  }

  extension_select.select2({
    allowClear: true,
    placeholder: 'Select...',
    theme: 'bootstrap',
    tags: true,
    ajax: {
      url: ajax_url,
      data: function (params) {
        return {
          term: params.term,
          context: context_select.val()
        }
      }
    },
  });
}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/hep/templates/accent_engine/hep/index.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Hep'), 'link': url_for('.HepView:index'), 'icon': 'signal' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Hep'), '', 'signal') }}
        {{ add_tab_navigation_item('general', _('General'), active=True) }}
      {% endcall %}

      {% call build_form(action=url_for('.HepView:post')) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.enabled) }}
              {{ render_field(form.capture_address) }}
              {{ render_field(form.capture_password) }}
              {{ render_field(form.capture_id) }}
              {{ render_field(form.uuid_type) }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}

  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/global_settings/templates/accent_engine/global_settings/index.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Global Settings'), 'link': url_for('.GlobalSettingsView:index'), 'icon': 'gears' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}

    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_header(_('Global Settings'), '', 'gears') }}

      <br>
      <br>
      <br>
      {%- for item in current_menu.submenu('.ipbx.global_settings').children recursive -%}
        {{ _build_global_section(item) }}
      {%- endfor -%}
      {% endcall %}

    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_global_section(item) %}
  <div class="col-md-3 col-sm-6 col-xs-12">
    <div class="info-box">
      <span class="info-box-icon bg-gray">
        <i class="fa fa-{{ item.icon if item.icon else 'windows' }}"></i>
      </span>
      <div class="info-box-content">
        <a href="{{ item.url }}">
          <span class="info-box-text">{{ item.text }}</span>
        </a>
      </div>
    </div>
  </div>
{% endmacro %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/group/templates/accent_engine/group/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.name, 'link': url_for('.GroupView:get', id=resource.uuid), 'icon': 'users' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
        {% call build_tabs_navigation() %}
          {{ add_tab_navigation_header(_('Group'), resource.label, 'users') }}
          {{ add_tab_navigation_item('general', _('General'), active=True) }}
          {{ add_tab_navigation_item('members', _('Members')) }}
          {{ add_tab_navigation_item('fallbacks', _('Fallbacks')) }}
          {{ add_tab_navigation_item('schedule', _('Schedule')) }}
          {{ add_tab_navigation_item('callpermissions', _('Call Permissions')) }}
        {% endcall %}

      {% call build_form(action=url_for('.GroupView:put', id=resource.uuid)) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.label) }}
              {{ render_field(form.name) }}
              {{ render_field(form.extensions[0].context,
                              label='Exten',
                              inputclass='ui-helper-clearfix',
                              divclass='col-sm-4',
                              class_='group-context',
                              placeholder='Choose Context',
                              data_listing_href=url_for(listing_urls['context_by_type'], type_='internal')) }}
              {{ render_field(form.extensions[0].exten,
                              data_allow_custom_values=True,
                              data_allow_clear='true',
                              divclass='col-sm-2',
                              with_label=False,
                              class_='group-exten',
                              data_listing_href=url_for(listing_urls['available_extension_group'])) }}
              {{ render_field(form.caller_id_mode) }}
              {{ render_field(form.caller_id_name) }}
              {{ render_field(form.enabled) }}
              {{ render_field(form.music_on_hold,
                              data_listing_href=url_for(listing_urls['moh']),
                              data_allow_clear='true',
                              data_placeholder='Choose Music on Hold') }}
              {{ render_field(form.preprocess_subroutine) }}
              {{ render_field(form.retry_delay) }}
              {{ render_field(form.ring_in_use) }}
              {{ render_field(form.ring_strategy) }}
              {{ render_field(form.timeout) }}
              {{ render_field(form.user_timeout) }}
              {{ render_field(form.mark_answered_elsewhere) }}
              {{ render_field(form.max_calls) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('members') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
	      <div class=col-xs-6>
		<div class=box-header></div>
                {{ render_field(form.members.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
                {{ render_field(form.members.users, with_label=False) }}
              </div>
	      <div class=col-xs-6>
                {{ build_add_row_entry_header() }}
                {% call build_table() %}

                  {% call build_table_headers() %}
                    <th>{{ _('Extension') }}</th>
                    <th>{{ _('Context') }}</th>
                    <th style="width: 21px;"></th>
                  {% endcall %}

                  {% call build_table_body(class_='dynamic-table') %}
                    {% do form.extensions_members.append_entry() %}
                    {{ _build_option_entry(form.extensions_members.pop_entry(), template=True) }}

                    {% for extension in form.extensions_members %}
                      {{ _build_option_entry(extension) }}
                    {% endfor %}
                  {% endcall %}

                {% endcall %}
              </div>
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('fallbacks') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.fallbacks.noanswer_destination) }}
              {{ render_field(form.fallbacks.congestion_destination) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('schedule') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
                {{ render_field(form.schedules[0]['name']) }}
                {{ render_field(form.schedules[0]['id'],
                                data_listing_href=url_for(listing_urls['schedule']),
                                data_allow_clear='true',
                                data_placeholder='Choose Schedules') }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('callpermissions') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.call_permission_ids,
                              data_listing_href=url_for(listing_urls['callpermission']),
                              data_allow_clear='true',
                              data_placeholder=_('Choose Call Permissions')) }}
              {{ render_field(form.call_permissions, with_label=False) }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

{% macro _build_option_entry(option, template=False) %}
  {% if template %}
    {% set tr_class = "row-template hidden" %}
  {% else %}
    {% set tr_class = "row-line" %}
  {% endif %}
  <tr class="{{ tr_class }}">
    <td>{{ render_field(option.exten, with_label=False) }}</td>
    <td>{{ render_field(option.context, with_label=False, disabled=True) }}</td>
    <td>{{ render_field(option.priority, with_label=False) }}</td>
    <td>{{ add_delete_entry_button() }}</td>
  </tr>
{% endmacro %}

{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/group.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/group/templates/accent_engine/group/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Groups'), 'link': url_for('.GroupView:index'), 'icon': 'users' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Group'), 'users') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.GroupView:get', id=''), delete=url_for('.GroupView:delete', id='')) %}
          <th>{{ _('Label') }}</th>
          <th>{{ _('Name') }}</th>
          <th>{{ _('Extension') }}</th>
        {% endcall %}
        {% call(group) build_list_table_rows(resource_list['items']) %}
          <td>{{ group.label }}</td>
          <td>{{ group.name }}</td>
          <td>
            {% for extension in group.extensions %}
              <strong>{{ _('internal') }}:</strong> {{ extension.exten }}
            {% endfor %}
            {% for extensions in group.incalls %}
              {% for extension in extensions.extensions %}
                <strong>{{ _('incall') }}:</strong> {{ extension.exten }}
              {% endfor %}
            {% endfor %}
            {{ '-' if not group.extensions and not group.incalls }}
          </td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add Group')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.label) }}
          {{ render_field(form.extensions[0].context,
                          label='Extension',
                          inputclass='ui-helper-clearfix',
                          divclass='col-sm-4',
                          class_='group-context',
                          placeholder=_('Choose Context'),
                          data_listing_href=url_for(listing_urls['context_by_type'], type_='internal')) }}
          {{ render_field(form.extensions[0].exten,
                          with_label=False,
                          data_allow_custom_values=True,
                          data_allow_clear='true',
                          divclass='col-sm-4',
                          class_='group-exten',
                          data_listing_href=url_for(listing_urls['available_extension_group'])) }}
          {{ render_field(form.members.user_uuids, data_listing_href=url_for(listing_urls['uuid_user'])) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/group.js') }}"></script>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/group/static/accent_engine/js/group.js
Please review for update

$(document).ready(function () {
  $('.group-context').on("change", function (e) {
    add_available_extensions();
  });
  add_available_extensions();
  $('#caller_id_mode').on('change', function (e) {
    toggle_callerid_mode.call(this)
  });
  toggle_callerid_mode.call($('#caller_id_mode'));
});


function toggle_callerid_mode() {
  if ($(this).val() == '') {
    $('#caller_id_name').closest('div.form-group').hide();
  } else {
    $('#caller_id_name').closest('div.form-group').show();
  }
}


function add_available_extensions() {
  let extension_select = $(".group-exten");
  let context_select = $(".group-context");
  let ajax_url = $(extension_select).attr('data-listing-href');
  if (!ajax_url) {
    return;
  }

  extension_select.select2('data', null);
  if (!extension_select.val()) {
    extension_select.append("<option></option>")
  }

  extension_select.select2({
    allowClear: true,
    theme: 'bootstrap',
    placeholder: 'Select...',
    ajax: {
      url: ajax_url,
      data: function (params) {
        return {
          term: params.term,
          context: context_select.val()
        }
      }
    }
  });
}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/ivr/templates/accent_engine/ivr/add.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumb(_('IVR'), '', 'navicon', [_('List')]) }}
{% endblock %}

{% block content %}

{% call build_section_row() %}
{% call build_form(action=url_for('.IvrView:post')) %}
{% call build_form_box(_('Add IVR'), '', 'navicon', container_class='col-md-6') %}
{% call add_default_fields(form=form, submit_value=_('Add')) %}
{{ render_field(form.name) }}
{{ render_field(form.description) }}
{{ render_field(form.menu_sound) }}
{{ render_field(form.greeting_sound) }}
{{ render_field(form.max_tries) }}
{{ render_field(form.invalid_destination, with_label=False) }}
{{ render_field(form.invalid_sound) }}
{{ render_field(form.timeout) }}
{{ render_field(form.timeout_destination, with_label=False) }}
{{ render_field(form.abort_destination, with_label=False) }}
{{ render_field(form.abort_sound) }}
{% endcall %}
{% endcall %}

{% call build_form_box(_('Add choices'), box_class='box-info', container_class='col-md-6') %}
{{ build_add_row_entry_header() }}

{% call build_table() %}

{% call build_table_headers() %}
<th class="text-center">{{ _('Digit') }}</th>
<th class="text-center">{{ _('Destination') }}</th>
<th class="text-center">{{ _('Actions') }}</th>
{% endcall %}

{% call build_table_body(class_='dynamic-table') %}
{% do form.choices.append_entry() %}
{{ _build_line_entry(form.choices.pop_entry(), template=True) }}

{% for choice in form.choices %}
{{ _build_line_entry(choice) }}
{% endfor %}
{% endcall %}

{% endcall %}

{{ build_add_row_entry_header() }}
{% endcall %}
{% endcall %}
{% endcall %}
{% endblock %}

{% macro _build_line_entry(choice, template=False) %}
{% if template %}
{% set tr_class = "row-template hidden" %}
{% endif %}
<tr class="{{ tr_class }}">
  <td class="sm:w-2/12 px-2">
    {{ render_field(choice.exten, with_label=False) }}
  </td>
  <td class="sm:w-2/12 px-2">
    {{ render_field(choice.destination, with_label=False) }}
  </td>
  <td class="col-sm-1 text-center">
    {{ add_delete_entry_button() }}
  </td>
</tr>
{% endmacro %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/ivr/templates/accent_engine/ivr/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs(current_breadcrumbs + [
{ 'name': resource.name, 'link': url_for('.IvrView:get', id=resource.id), 'icon': 'navicon' }
]) }}
{% endblock %}

{% block content %}

{% call build_section_row() %}
{% call build_form(action=url_for('.IvrView:put', id=resource.id)) %}
{% call build_form_box(_('IVR'), resource.name, 'navicon', container_class='col-md-6') %}
{% call add_default_fields(form=form, submit_value=_('Update')) %}
{{ render_field(form.name) }}
{{ render_field(form.description) }}
{{ render_field(form.menu_sound) }}
{{ render_field(form.greeting_sound) }}
{{ render_field(form.max_tries) }}
{{ render_field(form.invalid_destination, with_label=False) }}
{{ render_field(form.invalid_sound) }}
{{ render_field(form.timeout) }}
{{ render_field(form.timeout_destination, with_label=False) }}
{{ render_field(form.abort_destination, with_label=False) }}
{{ render_field(form.abort_sound) }}
{% endcall %}
{% endcall %}

{% call build_form_box(_('Add choices'), box_class='box-info', container_class='col-md-6') %}
{{ build_add_row_entry_header() }}

{% call build_table() %}

{% call build_table_headers() %}
<th class="text-center">{{ _('Digit') }}</th>
<th class="text-center">{{ _('Destination') }}</th>
<th></th>
{% endcall %}

{% call build_table_body(class_='dynamic-table') %}
{% do form.choices.append_entry() %}
{{ _build_choice_entry(form.choices.pop_entry(), template=True) }}

{% for choice in form.choices %}
{{ _build_choice_entry(choice) }}
{% endfor %}
{% endcall %}

{% endcall %}

{{ build_add_row_entry_header() }}
{% endcall %}
{% endcall %}
{% endcall %}
{% endblock %}

{% macro _build_choice_entry(choice, template=False) %}
{% if template %}
{% set tr_class = "row-template hidden" %}
{% endif %}
<tr class="{{ tr_class }}">
  <td class="sm:w-1/12 px-2">
    {{ render_field(choice.exten, with_label=False) }}
  </td>
  <td class="sm:w-10/12 px-2">
    {{ render_field(choice.destination, with_label=False) }}
  </td>
  <td class="text-center">
    {{ add_delete_entry_button() }}
  </td>
</tr>
{% endmacro %}

{% block additional_js %}
<script src="{{ url_for('.static', filename='js/ivr.js') }}"></script>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/ivr/templates/accent_engine/ivr/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('IVR'), 'link': url_for('.IvrView:index'), 'icon': 'navicon' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('IVR'), 'navicon') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(get=url_for('.IvrView:get', id=''), delete=url_for('.IvrView:delete', id=''), add=url_for('.IvrView:new')) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Extensions') }}</th>
          <th>{{ _('Menu sound') }}</th>
        {% endcall %}
        {% call(ivr) build_list_table_rows(resource_list['items']) %}
          <td>{{ ivr.name }}</td>
          <td>
            {% if not ivr.incalls %}
              -
            {% else %}
              <strong>{{ _('incall') }}:</strong>
              <ul>
              {% for extensions in ivr.incalls %}
                {% for e in extensions.extensions %}
                  <li>{{ e.exten }}</li>
                {% endfor %}
              {% endfor %}
              </ul>
            {% endif %}
          </td>
          <td>{{ ivr.menu_sound }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/ivr/static/accent_engine/js/ivr.js
Please review for update

$(document).ready(function() {
  var selectors = [
    '#invalid_destination-queue-queue_id',
    '#invalid_destination-queue-skill_rule_id',
    '#timeout_destination-queue-queue_id',
    '#timeout_destination-queue-skill_rule_id',
    '#abort_destination-queue-queue_id',
    '#abort_destination-queue-skill_rule_id',
  ];
  var $selects = {};
  var ids = {};
  for (var i = 0; i < selectors.length; i++) {
    var $select = $(selectors[i]);
    var listingUrl = $select.data('listing_href') || $select.data('listing-href');
    var id = $select.val();
    $selects[i] = $select;
    ids[i] = id;
    if (!id) {
      continue;
    }

    $select.empty();

    $.ajax({ url: listingUrl, idx : i, success: function(data) {
      var $select = $selects[this.idx];
      var id = ids[this.idx];
      $.each(data.results, function(idx, result) {
        $select.append($("<option></option>").attr('value', result.id).text(result.text));
      });
      $select.val(id);

      $select.select2({
        theme: 'bootstrap',
        placeholder: 'Select...',
      });
    }});
  }
});

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/user/templates/accent_engine/user/backup/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([{ 'name': _('Users'), 'icon': 'user', 'link': url_for('.UserView:index') }]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('User'), 'user') %}
      {% call build_list_table(list=url_for('.UserView:list_json')) %}
        {% call build_list_table_headers(get=url_for('.UserView:get', id=''), delete=url_for('.UserView:delete', id=''), import=url_for('.UserView:import_csv'), export=url_for('.UserView:export_csv'), update=url_for('.UserView:update_csv')) %}
          <th>{{ _('Firstname') }}</th>
          <th>{{ _('Lastname') }}</th>
          <th>{{ _('Email') }}</th>
          <th>{{ _('Extension') }}</th>
          <th>{{ _('Code') }}</th>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add User')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.firstname) }}
          {{ render_field(form.lastname) }}
          {{ render_field(form.email) }}
          {{ render_field(form.password, type='password', data_toggle='password', autocomplete="off") }}
          {% do form.lines.append_entry() %}
          {{ render_field(form.lines[0]['id']) }}
          {{ render_field(form.lines[0].endpoint_sip_uuid) }}
          {{ render_field(form.lines[0].endpoint_sccp_id) }}
          {{ render_field(form.lines[0].endpoint_custom_id) }}
          {{ render_field(form.lines[0].extensions[0]['id']) }}
          {{ render_field(form.lines[0].context,
                          label='Exten',
                          divclass='col-sm-4',
                          inputclass='ui-helper-clearfix',
                          placeholder=_('Choose Context'),
                          class_='line-context',
                          data_listing_href=url_for(listing_urls['context_by_type'], type_='internal')) }}
          {{ render_field(form.lines[0].extensions[0].exten,
                          with_label=False,
                          divclass='col-sm-4',
                          class_='line-extension',
                          data_allow_custom_values=True,
                          data_listing_href=url_for(listing_urls['available_extension_user'])) }}
          {{ render_field(form.lines[0].protocol, class_='line-protocol') }}
          {{ render_field(form.lines[0].template_uuids,
                          class_='line-template',
                          data_allow_clear='true',
                          data_listing_href=url_for(listing_urls['sip_template'])) }}
          {{ render_field(form.lines[0].templates, with_label=False) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Import CSV'), 'users-import-csv') %}
      {% call build_form(action=url_for('.UserView:import_csv'), enctype="multipart/form-data") %}
        {% call add_default_fields(form=import_csv_form, submit_value=_('Import')) %}
          {{ render_field(import_csv_form.file) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

{% block additional_js %}
  <script src="{{ url_for('.static', filename='js/user.js') }}"></script>
{% endblock %}


----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/user/templates/accent_engine/user/edit.html
Please review for update

{% extends "layout.html" %}
{% set name = resource.firstname ~ (' ' ~ resource.lastname if resource.lastname else '') %}

{% block content_header %}
<nav class="breadcrumbs">
  {{ build_breadcrumbs(current_breadcrumbs + [
  { 'name': name, 'link': url_for('.UserView:get', id=resource.uuid), 'icon': 'user' }
  ]) }}
</nav>
{% endblock %}

{% block content %}
<section class="section-row">
  <div class="tabs-box">
    <nav class="tabs-navigation">
      {{ add_tab_navigation_header(_('User'), name, 'user') }}
      {{ add_tab_navigation_item('user', _('User'), active=True) }}
      {{ add_tab_navigation_item('general', _('General')) }}
      {{ add_tab_navigation_item('fallbacks', _('Fallbacks')) }}
      {{ add_tab_navigation_item('services', _('Services')) }}
      {{ add_tab_navigation_item('lines', _('Lines')) }}
      {{ add_tab_navigation_item('groups', _('Groups')) }}
      {{ add_tab_navigation_item('funckeys', _('FuncKeys')) }}
      {{ add_tab_navigation_item('schedule', _('Schedule')) }}
      {{ add_tab_navigation_item('voicemail', _('Voicemail')) }}
      {{ add_tab_navigation_item('callpermissions', _('Call Permissions')) }}
    </nav>
    <form action="{{ url_for('.UserView:put', id=resource.uuid) }}" method="POST">
      <div class="tabs-content">

        {% call build_tab_content_item('user', active=True) %}
        <div class="form-section">
          <h3>{{ _('User Details') }}</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            {{ render_field(form.firstname) }}
            {{ render_field(form.lastname) }}
            {{ render_field(form.caller_id) }}
            {{ render_field(form.outgoing_caller_id, data_allow_custom_values=True) }}
            {{ render_field(form.email) }}
          </div>
          <fieldset class="border rounded p-4">
            <legend>{{ _('Authentication') }}</legend>
            {{ render_field(form.auth_enabled) }}
            {{ render_field(form.username) }}
            {{ render_field(form.password, type='password', data_toggle='password') }}
          </fieldset>
        </div>
        {% endcall %}

        {% call build_tab_content_item('general') %}
        <div class="form-section">
          <h3>{{ _('General Information') }}</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            {{ render_field(form.mobile_phone_number) }}
            {{ render_field(form.ring_seconds) }}
            {{ render_field(form.music_on_hold, data_listing_href=url_for(listing_urls['moh']), data_allow_clear='true',
            data_placeholder='Choose Music on Hold') }}
            {{ render_field(form.preprocess_subroutine) }}
            {{ render_field(form.simultaneous_calls) }}
            {{ render_field(form.timezone) }}
            {{ render_field(form.userfield) }}
            {{ render_field(form.description) }}
          </div>
        </div>
        {% endcall %}

        {% call build_tab_content_item('fallbacks') %}
        <div class="form-section">
          <h3>{{ _('Fallback Destinations') }}</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            {{ render_field(form.fallbacks.busy_destination) }}
            {{ render_field(form.fallbacks.congestion_destination) }}
            {{ render_field(form.fallbacks.fail_destination) }}
            {{ render_field(form.fallbacks.noanswer_destination) }}
          </div>
        </div>
        {% endcall %}

        {% call build_tab_content_item('services') %}
        <div class="form-section">
          <h3>{{ _('Services') }}</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            {{ render_field(form.services.dnd.enabled) }}
            {{ render_field(form.services.incallfilter.enabled) }}
            {{ render_field(form.call_record_outgoing_external_enabled) }}
            {{ render_field(form.call_record_outgoing_internal_enabled) }}
            {{ render_field(form.call_record_incoming_external_enabled) }}
            {{ render_field(form.call_record_incoming_internal_enabled) }}
            {{ render_field(form.call_permission_password) }}
          </div>

          <fieldset class="border rounded p-4">
            <legend>{{ _('Call Forwards') }}</legend>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              {{ render_field(form.forwards.busy.enabled) }}
              {{ render_field(form.forwards.busy.destination) }}
              {{ render_field(form.forwards.unconditional.enabled) }}
              {{ render_field(form.forwards.unconditional.destination) }}
              {{ render_field(form.forwards.noanswer.enabled) }}
              {{ render_field(form.forwards.noanswer.destination) }}
            </div>
          </fieldset>

          <fieldset class="border rounded p-4">
            <legend>{{ _('DTMF Services') }}</legend>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              {{ render_field(form.call_transfer_enabled) }}
              {{ render_field(form.dtmf_hangup_enabled) }}
              {{ render_field(form.online_call_record_enabled) }}
            </div>
          </fieldset>
        </div>
        {% endcall %}

        {% call build_tab_content_item('lines') %}
        <div class="form-section">
          <h3>{{ _('Lines') }}</h3>
          <div class="table-container">
            <table class="table-auto w-full border-collapse border border-gray-300">
              <thead>
                <tr class="bg-gray-100">
                  <th class="border border-gray-300 px-4 py-2">{{ _('Protocol') }}</th>
                  <th class="border border-gray-300 px-4 py-2">{{ _('Templates') }}</th>
                  <th class="border border-gray-300 px-4 py-2">{{ _('Name') }}</th>
                  <th class="border border-gray-300 px-4 py-2">{{ _('Context') }}</th>
                  <th class="border border-gray-300 px-4 py-2">{{ _('Extension') }}</th>
                  <th class="border border-gray-300 px-4 py-2">{{ _('Device') }}</th>
                  <th class="border border-gray-300 px-4 py-2">{{ _('Line (N°)') }}</th>
                  <th class="border border-gray-300 px-4 py-2">{{ _('Registrar') }}</th>
                  <th class="border border-gray-300 px-4 py-2">{{ _('Application') }}</th>
                  <th class="border border-gray-300 px-4 py-2"></th>
                </tr>
              </thead>
              <tbody>
                {% for line in form.lines %}
                <tr>
                  <td>{{ render_field(line.protocol) }}</td>
                  <td>{{ render_field(line.template_uuids) }}</td>
                  <td>{{ render_field(line['name']) }}</td>
                  <td>{{ render_field(line.context) }}</td>
                  <td>{{ render_field(line.extensions[0].exten) }}</td>
                  <td>{{ render_field(line.device) }}</td>
                  <td>{{ render_field(line.position) }}</td>
                  <td>{{ render_field(line.registrar) }}</td>
                  <td>{{ render_field(line.application.uuid) }}</td>
                  <td><button class="text-red-500 hover:text-red-700">Delete</button></td>
                </tr>
                {% endfor %}
              </tbody>
            </table>
          </div>
        </div>
        {% endcall %}

        {% call build_tab_content_item('groups') %}
        <div class="form-section">
          <h3>{{ _('Groups') }}</h3>
          {{ render_field(form.group_ids, data_listing_href=url_for(listing_urls['group'])) }}
          {{ render_field(form.groups, with_label=False) }}
        </div>
        {% endcall %}

        {% call build_tab_content_item('funckeys') %}
        <div class="form-section">
          <h3>{{ _('FuncKeys') }}</h3>
          <table class="table-auto w-full border-collapse border border-gray-300">
            <thead>
              <tr class="bg-gray-100">
                <th class="border border-gray-300 px-4 py-2">{{ _('Position') }}</th>
                <th class="border border-gray-300 px-4 py-2">{{ _('Label') }}</th>
                <th class="border border-gray-300 px-4 py-2">{{ _('Destination') }}</th>
                <th class="border border-gray-300 px-4 py-2">{{ _('BLF') }}</th>
                <th class="border border-gray-300 px-4 py-2"></th>
              </tr>
            </thead>
            <tbody>
              {% for funckey in form.funckeys %}
              <tr>
                <td>{{ render_field(funckey.digit) }}</td>
                <td>{{ render_field(funckey['label']) }}</td>
                <td>{{ render_field(funckey.destination) }}</td>
                <td>{{ render_field(funckey.blf) }}</td>
                <td><button class="text-red-500 hover:text-red-700">Delete</button></td>
              </tr>
              {% endfor %}
            </tbody>
          </table>
        </div>
        {% endcall %}

        {% call build_tab_content_item('schedule') %}
        <div class="form-section">
          <h3>{{ _('Schedule') }}</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            {{ render_field(form.schedules[0]['name']) }}
            {{ render_field(form.schedules[0]['id'], data_listing_href=url_for(listing_urls['schedule']),
            data_allow_clear='true', data_placeholder=_('Choose Schedules')) }}
          </div>
        </div>
        {% endcall %}

        {% call build_tab_content_item('voicemail') %}
        <div class="form-section">
          <h3>{{ _('Voicemail') }}</h3>
          {{ render_field(form.voicemail['id'], data_listing_href=url_for(listing_urls['voicemail']),
          data_allow_clear='true', data_placeholder=_('Choose Voicemail')) }}
        </div>
        {% endcall %}

        {% call build_tab_content_item('callpermissions') %}
        <div class="form-section">
          <h3>{{ _('Call Permissions') }}</h3>
          {{ render_field(form.call_permission_ids, data_listing_href=url_for(listing_urls['callpermission']),
          data_allow_clear='true', data_placeholder=_('Choose Call Permissions')) }}
          {{ render_field(form.call_permissions, with_label=False) }}
        </div>
        {% endcall %}

      </div>
    </form>
  </div>
</section>
{% endblock %}

{% block additional_js %}
<script>
  document.addEventListener('DOMContentLoaded', () => {
    console.log('User Edit Template Loaded');
  });
</script>
<script src="{{ url_for('.static', filename='js/user.js') }}"></script>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/user/templates/accent_engine/user/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs([{ 'name': _('Users'), 'icon': 'user', 'link': url_for('.UserView:index') }]) }}
{% endblock %}

{% block content %}
<section class="content">
  <div class="mb-4">
    <h1 class="text-lg font-bold">{{ _('User List') }}</h1>
  </div>

  {% call tailwind_table('user-table', ['Firstname', 'Lastname', 'Email', 'Extension', 'Code'],
  url_for('.UserView:list_json')) %}
  {% for user in users %}
  <tr data-id="{{ user.id }}" class="hover:bg-gray-100">
    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{{ user.firstname }}</td>
    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ user.lastname }}</td>
    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ user.email }}</td>
    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ user.extension or '-' }}</td>
    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{{ user.code or '-' }}</td>
    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
      <a href="{{ url_for('.UserView:edit', id=user.id) }}" class="text-blue-500 hover:text-blue-700">Edit</a>
      <a href="{{ url_for('.UserView:delete', id=user.id) }}" class="ml-2 text-red-500 hover:text-red-700"
        onclick="return confirm('{{ _('Are you sure?') }}');">Delete</a>
    </td>
  </tr>
  {% endfor %}
  {% endcall %}

  {% call tailwind_pagination(url_for('.UserView:index'), current_page, total_pages) %}
  {% endcall %}

  {% call tailwind_modal('add-user-modal', _('Add User'), """<form method='POST' action='{{ url_for(' .UserView:add')
    }}'>
    <div class='space-y-4'>
      {{ render_field(form.firstname, class_='input-field') }}
      {{ render_field(form.lastname, class_='input-field') }}
      {{ render_field(form.email, class_='input-field') }}
      {{ render_field(form.password, class_='input-field', type='password', autocomplete='off') }}
    </div>
    <div class='mt-4 flex justify-end gap-2'>
      <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">{{ _('Add') }}</button>
      <button type="button" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600"
        onclick="document.getElementById('add-user-modal').classList.add('hidden');">{{ _('Cancel') }}</button>
    </div>
  </form>""") %}
  {% endcall %}

  {% call tailwind_modal('import-csv-modal', _('Import CSV'), """<form method='POST' action='{{ url_for('
    .UserView:import_csv') }}' enctype='multipart/form-data'>
    <div class='space-y-4'>
      {{ render_field(import_csv_form.file, class_='input-field') }}
    </div>
    <div class='mt-4 flex justify-end gap-2'>
      <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">{{ _('Import')
        }}</button>
      <button type="button" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600"
        onclick="document.getElementById('import-csv-modal').classList.add('hidden');">{{ _('Cancel') }}</button>
    </div>
  </form>""") %}
  {% endcall %}
</section>
{% endblock %}

{% block additional_js %}
<script src="{{ url_for('.static', filename='plugins/user/js/user.js') }}"></script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const table = document.getElementById('user-table');
    if (table) {
      console.log('User table loaded.');
    }
  });
</script>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/user/static/accent_engine/js/user.js
Please review for update

document.addEventListener("DOMContentLoaded", () => {
  createListTable();
  initializeExtensions();
  initializeTemplateToggle();

  // Remove spaces in email or username inputs
  document.querySelectorAll("#email, #username").forEach(input => {
    input.addEventListener("input", () => {
      input.value = input.value.replace(/\s/g, "");
    });
  });

  // Handle dynamic row cloning
  document.querySelectorAll(".row-template").forEach(template => {
    template.addEventListener("row:cloned", event => {
      const row = event.detail.row;
      initializeExtensions(row);
      initializeTemplateToggle(row);
    });
  });

  // Initialize existing rows
  document.querySelectorAll(".row-line").forEach(row => {
    addAvailableExtensions(row);
    toggleTemplateDisable(row);
  });

  // Initialize destination validators
  initializeDestinationValidators();

  // Handle dropdown options dynamically
  document.querySelectorAll("select[data-listing-href]").forEach(select => {
    const listingUrl = select.getAttribute("data-listing-href");
    const currentValue = select.value;

    if (!listingUrl) return;

    fetch(listingUrl)
      .then(response => response.json())
      .then(data => {
        select.innerHTML = "";
        data.results.forEach(result => {
          const option = new Option(result.text, result.id, false, result.id === currentValue);
          select.add(option);
        });
      });
  });
});

function createListTable() {
  const tableConfig = {
    columns: [
      { data: "firstname" },
      { data: "lastname" },
      { data: "email" },
      { data: "extension" },
      { data: "provisioning_code" },
    ],
  };
  createTableServerSide(tableConfig);
}

function initializeDestinationValidators() {
  const validators = [
    { checkbox: "#forwards-busy-enabled", input: "#forwards-busy-destination" },
    { checkbox: "#forwards-noanswer-enabled", input: "#forwards-noanswer-destination" },
    { checkbox: "#forwards-unconditional-enabled", input: "#forwards-unconditional-destination" },
  ];

  validators.forEach(({ checkbox, input }) => {
    const checkboxElement = document.querySelector(checkbox);
    const inputElement = document.querySelector(input);

    const toggleValidator = () => {
      inputElement.required = checkboxElement.checked;
    };

    checkboxElement.addEventListener("change", toggleValidator);
    toggleValidator();
  });
}

function initializeExtensions(context = document) {
  context.querySelectorAll(".line-context").forEach(contextSelect => {
    contextSelect.addEventListener("change", () => addAvailableExtensions(contextSelect));
    addAvailableExtensions(contextSelect);
  });
}

function addAvailableExtensions(context = document) {
  const contextValue = context.querySelector(".line-context")?.value || "";
  const extensionSelect = context.querySelector(".line-extension");
  const ajaxUrl = extensionSelect?.getAttribute("data-listing-href");

  if (!ajaxUrl || !extensionSelect) return;

  fetch(`${ajaxUrl}?context=${encodeURIComponent(contextValue)}`)
    .then(response => response.json())
    .then(data => {
      extensionSelect.innerHTML = "";
      data.results.forEach(result => {
        const option = new Option(result.text, result.id);
        extensionSelect.add(option);
      });
    });
}

function initializeTemplateToggle(context = document) {
  context.querySelectorAll(".line-protocol").forEach(protocolSelect => {
    protocolSelect.addEventListener("change", () => toggleTemplateDisable(protocolSelect));
    toggleTemplateDisable(protocolSelect);
  });
}

function toggleTemplateDisable(context = document) {
  const protocolSelect = context.querySelector(".line-protocol");
  const templateSelect = context.querySelector(".line-template");

  if (protocolSelect && templateSelect) {
    templateSelect.disabled = protocolSelect.value !== "sip";
  }
}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/ha/templates/accent_engine/ha/index.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumb(_('Ha'), '', 'balance-scale', [_('Edit')]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box('', '', '') %}
      {% call build_form(action=url_for('.HaView:post')) %}

        {% call add_default_fields(form=form, submit_value=_('Update')) %}
          {{ render_field(form.node_type) }}
          {{ render_field(form.remote_address) }}
        {% endcall %}

      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/provisioning/templates/accent_engine/provisioning/configuration/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': 'Provisioning', 'link': url_for('.ConfigurationView:index'), 'icon': 'gears' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_tabs_box() %}
      {% call build_tabs_navigation() %}
        {{ add_tab_navigation_item('general', _('General'), active=True) }}
        {{ add_tab_navigation_item('advanced', _('Advanced')) }}
      {% endcall %}

      {% call build_form(action=url_for('.ConfigurationView:put')) %}
        {% call build_tabs_content() %}

          {% call build_tab_content_item('general', active=True) %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.general_config.plugin_server) }}
              {{ render_field(form.general_config.http_proxy) }}
              {{ render_field(form.general_config.https_proxy) }}
              {{ render_field(form.general_config.ftp_proxy) }}
              {{ render_field(form.general_config.locale) }}
              {{ render_field(form.general_config.NAT) }}
            {% endcall %}
          {% endcall %}

          {% call build_tab_content_item('advanced') %}
            {% call add_default_fields(form=form, submit_value=_('Update')) %}
              {{ render_field(form.network_config.provision_host) }}
              {{ render_field(form.network_config.provision_http_port) }}
            {% endcall %}
          {% endcall %}

        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/provisioning/templates/accent_engine/provisioning/plugin/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs(current_breadcrumbs + [
{ 'name': plugin['description'], 'link': url_for('.PluginView:get', id=plugin.uuid), 'icon': 'file-code-o' }
]) }}
{% endblock %}

{% block content %}
<section class="content">
  <div class="box-body">
    <div class="box-group">
      <div class="panel box box-primary">
        <div class="box-header with-border">
          <h4 class="box-title">{{ _('Description') }}:</h4>
        </div>
        <div class="box-body">{{ plugin['description'] }}</div>
      </div>
    </div>
  </div>
  {% call build_list_containers(_('Plugins'), 'file-code-o', size='12') %}
  {% call build_list_table() %}
  {% call build_list_table_headers(actions_column=false) %}
  <th>{{ _('Name') }}</th>
  <th>{{ _('Description') }}</th>
  <th>{{ _('Version') }}</th>
  <th>{{ _('Size') }}</th>
  <th class="no-sort"></th>
  {% endcall %}
  {% call(package) build_list_table_rows(resource_list['items']) %}
  <td>{{ package.name }}</td>
  <td>{{ package.description }}</td>
  <td>{{ package.version }}</td>
  <td>{{ package.dsize }}</td>
  <td id="data-column-actions">
    {% if package['id'] not in package_ids_installed %}
    <a href="{{ url_for('.PluginView:install_package_ajax', plugin_name=plugin_name, package_name=package['id']) }}"
      title="{{ _('Install this package') }}" data-toggle="confirmation"
      data-title="{{ _('Are you sure you want to install this package ?') }}"
      data-poll-url="{{ url_for('.PluginView:get_operation_status') }}"
      class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-xs btn-default link-install-plugin ajax">
      <i class="fa fa-fw fa-download"></i>
    </a>
    {% else %}
    <a href="{{ url_for('.PluginView:uninstall_package_ajax', plugin_name=plugin_name, package_name=package['id']) }}"
      title="{{ _('Uninstall this package') }}" data-toggle="confirmation"
      data-title="{{ _('Are you sure you want to uninstall this package ?') }}"
      data-poll-url="{{ url_for('.PluginView:get_operation_status') }}"
      class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-xs btn-default link-install-plugin ajax">
      <i class="fa fa-fw fa-remove"></i>
    </a>
    {% endif %}
  </td>
  {% endcall %}
  {% endcall %}
  {% endcall %}
</section>

<div class="modal fade" id="download-status-modal" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Processing</h4>
      </div>

      <div class="modal-body">
        Processing your plugin, please wait ...

        <div class="progress" style="position: relative; margin-top: 30px">
          <div class="progress-bar progress-bar-striped indeterminate">
          </div>
        </div>
      </div>
    </div>
  </div>
  {% endblock %}

  {% block additional_js %}
  <script src="{{ url_for('.static', filename='js/plugins.js') }}"></script>
  {% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/provisioning/templates/accent_engine/provisioning/plugin/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs([
{ 'name': _('Provisioning / Plugins'), 'link': url_for('.PluginView:index'), 'icon': 'file-code-o' }
]) }}
{% endblock %}

{% block content %}
<section class="content">
  {% call build_list_containers(_('Plugins'), 'file-code-o', size='12') %}
  {% call build_list_table() %}
  {% call build_list_table_headers(get=url_for('.PluginView:get', id='')) %}
  <th>{{ _('Name') }}</th>
  <th>{{ _('Description') }}</th>
  <th>{{ _('Version') }}</th>
  <th>{{ _('Size') }}</th>
  <th class="no-sort"></th>
  {% endcall %}
  {% call(plugin) build_list_table_rows(resource_list['items']) %}
  <td>{{ plugin.name }}</td>
  <td>{{ plugin.description }}</td>
  <td>{{ plugin.version }}</td>
  <td>{{ plugin.dsize }}</td>
  <td id="data-column-actions">
    {% if not plugin['editable'] %}
    <a href="{{ url_for('.PluginView:install', plugin_name=plugin['id']) }}" title="{{ _('Install this plugin') }}"
      data-toggle="confirmation" data-title="{{ _('Are you sure you want to install this plugin ?') }}"
      class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-xs btn-default link-install-plugin">
      <i class="fa fa-fw fa-download"></i>
    </a>
    {% else %}
    <a href="{{ url_for('.PluginView:uninstall', plugin_name=plugin['id']) }}" title="{{ _('Uninstall this plugin') }}"
      data-toggle="confirmation" data-title="{{ _('Are you sure you want to uninstall this plugin ?') }}"
      class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm btn-xs btn-default link-uninstall-plugin">
      <i class="fa fa-fw fa-remove"></i>
    </a>
    {% endif %}
  </td>
  {% endcall %}
  {% endcall %}
  {% endcall %}

  <div class="modal fade" id="download-status-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title">Processing</h4>
        </div>

        <div class="modal-body">
          Processing your plugin, please wait ...
        </div>
      </div>
    </div>
  </div>
</section>
{% endblock %}

{% block additional_js %}
<script src="{{ url_for('.static', filename='js/plugins.js') }}"></script>
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/provisioning/templates/accent_engine/provisioning/config_registrar/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs(current_breadcrumbs + [
    { 'name': resource.displayname, 'link': url_for('.ConfigRegistrarView:get', id=resource.id), 'icon': 'file-code-o' }
  ]) }}
{% endblock %}

{% block content %}
  {% call build_section_row() %}
    {% call build_form_box(_('Registrar'), resource.name, 'file-code-o') %}
      {% call build_form(action=url_for('.ConfigRegistrarView:put', id=resource.id)) %}
        {% call add_default_fields(form=form, submit_value=_('Update')) %}
          {{ render_field(form.id) }}
          {{ render_field(form.name) }}
          {{ render_field(form.main_host) }}
          {{ render_field(form.main_port) }}
          {{ render_field(form.backup_host) }}
          {{ render_field(form.backup_port) }}
          {{ render_field(form.proxy_main_host) }}
          {{ render_field(form.proxy_main_port) }}
          {{ render_field(form.proxy_backup_host) }}
          {{ render_field(form.proxy_backup_port) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  {% endcall %}
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/provisioning/templates/accent_engine/provisioning/config_registrar/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Provisioning / Registrars'), 'link': url_for('.ConfigRegistrarView:index'), 'icon': 'file-o' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Registrars'), 'file-o') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(
          get=url_for('.ConfigRegistrarView:get', id=''),
          delete=url_for('.ConfigRegistrarView:delete', id='')
        ) %}
          <th>{{ _('Name') }}</th>
          <th>{{ _('Registrar main') }}</th>
          <th>{{ _('Proxy main') }}</th>
        {% endcall %}
        {% call(config_registrar) build_list_table_rows(resource_list['items']) %}
          <td>{{ config_registrar.name }} ( {{ config_registrar.id }} )</td>
          <td>{{ config_registrar.main_host }}</td>
          <td>{{ config_registrar.proxy_main_host }}</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add registrar')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.name) }}
          {{ render_field(form.main_host) }}
          {{ render_field(form.backup_host) }}
          {{ render_field(form.proxy_main_host) }}
          {{ render_field(form.proxy_backup_host) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/provisioning/templates/accent_engine/provisioning/config_device/edit.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
{{ build_breadcrumbs(current_breadcrumbs + [
{ 'name': resource.label, 'link': url_for('.ConfigDeviceView:get', id=resource.id), 'icon': 'file-zip-o' }
]) }}
{% endblock %}

{% block content %}
{% call build_section_row() %}
{% call build_form_tabs_box() %}
{% call build_tabs_navigation() %}
{{ add_tab_navigation_header(_('Provisioning / Config device'), '', 'file-zip-o') }}
{{ add_tab_navigation_item('general', _('General'), active=True) }}
{{ add_tab_navigation_item('advanced', _('Advanced')) }}
{% endcall %}

{% call build_form(action=url_for('.ConfigDeviceView:put', id=resource.id)) %}
{% call build_tabs_content() %}
{% call build_tab_content_item('general', active=True) %}
{% call add_default_fields(form=form, submit_value=_('Update')) %}
{{ render_field(form.id) }}
{{ render_field(form.label) }}
{{ render_field(form.raw_config.form.locale) }}
{{ render_field(form.raw_config.form.timezone,
data_listing_href=url_for(listing_urls['timezone']),
data_allow_clear='true',
data_placeholder=_('Choose Timezone')) }}
{{ render_field(form.raw_config.form.protocol) }}
{{ render_field(form.raw_config.form.ntp_enabled) }}
{{ render_field(form.raw_config.form.ntp_ip) }}
{{ render_field(form.raw_config.form.X_accent_phonebook_ip) }}
{{ render_field(form.raw_config.form.sip_dtmf_mode) }}
{{ render_field(form.raw_config.form.user_username) }}
{{ render_field(form.raw_config.form.user_password) }}
{{ render_field(form.raw_config.form.admin_username) }}
{{ render_field(form.raw_config.form.admin_password) }}
{{ render_field(form.raw_config.form.sip_subscribe_mwi) }}
{% endcall %}
{% endcall %}
{% call build_tab_content_item('advanced') %}
{% call add_default_fields(form=form, submit_value=_('Update')) %}
{{ render_field(form.raw_config.form.vlan_enabled) }}
{{ render_field(form.raw_config.form.vlan_id) }}
{{ render_field(form.raw_config.form.vlan_priority) }}
{{ render_field(form.raw_config.form.vlan_pc_port_id) }}
{% endcall %}
{% endcall %}
{% endcall %}
{% endcall %}
{% endcall %}
{% endcall %}
{% endblock %}
----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/provisioning/templates/accent_engine/provisioning/config_device/list.html
Please review for update

{% extends "layout.html" %}

{% block content_header %}
  {{ build_breadcrumbs([
    { 'name': _('Provisioning / Config device'), 'link': url_for('.ConfigDeviceView:index'), 'icon': 'file-zip-o' }
  ]) }}
{% endblock %}

{% block content %}
  <section class="content">
    {% call build_list_containers(_('Config device'), 'file-zip-o') %}
      {% call build_list_table() %}
        {% call build_list_table_headers(
          get=url_for('.ConfigDeviceView:get', id=''),
          delete=url_for('.ConfigDeviceView:delete', id='')
        ) %}
          <th>{{ _('Label') }}</th>
        {% endcall %}
        {% call(config_device) build_list_table_rows(resource_list['items']) %}
          <td>{{ config_device.label }} ( {{ config_device.id }} )</td>
        {% endcall %}
      {% endcall %}
    {% endcall %}

    {% call build_hidden_add_containers(_('Add config device')) %}
      {% call build_form() %}
        {% call add_default_fields(form=form, submit_value=_('Add')) %}
          {{ render_field(form.label) }}
          {{ render_field(form.raw_config.form.locale) }}
          {{ render_field(form.raw_config.form.timezone,
                          data_listing_href=url_for(listing_urls['timezone']),
                          data_allow_clear='true',
                          data_placeholder=_('Choose Timezone')) }}
          {{ render_field(form.raw_config.form.protocol) }}
          {{ render_field(form.raw_config.form.ntp_enabled) }}
          {{ render_field(form.raw_config.form.ntp_ip) }}
          {{ render_field(form.raw_config.form.sip_dtmf_mode) }}
          {{ render_field(form.raw_config.form.user_username) }}
          {{ render_field(form.raw_config.form.user_password) }}
          {{ render_field(form.raw_config.form.admin_username) }}
          {{ render_field(form.raw_config.form.admin_password) }}
          {{ render_field(form.raw_config.form.sip_subscribe_mwi) }}
        {% endcall %}
      {% endcall %}
    {% endcall %}
  </section>
{% endblock %}

----------------------------------------

File: /home/administrator/accent-voice/service/accent-ui/accent_ui/plugins/provisioning/static/accent_engine/js/plugins.js
Please review for update

$(document).ready(function() {
  let datatable_all_config = {
    buttons: []
  };
  let datatable_all = $('#table-list-all').DataTable(datatable_all_config);
  datatable_all.buttons($('.buttons-select-all')).remove();
  datatable_all.buttons('.buttons-select-none').remove();
  datatable_all.buttons('.edit-selected-rows').remove();

  let datatable_unalloc = $('#table-list-unallocated').DataTable(datatable_all_config);
  datatable_unalloc.buttons('.edit-selected-rows').remove();
  datatable_unalloc.buttons('.edit').remove();

  $('.link-install-plugin').mouseover(function () {
    $(this).attr('title', $(this).data('original-title'));
  });
  $('.link-uninstall-plugin').mouseover(function () {
    $(this).attr('title', $(this).data('original-title'));
  });

  $('.link-install-plugin, .link-uninstall-plugin').on('shown.bs.confirmation', function(){
    var $parentLink = $(this);
    var pollURL = $parentLink.attr('data-poll-url');

    function displayError(error) {
      $('.modal-title').html('Error');
      $('.modal-body').html(error).addClass('text-danger');
    }

    function pollCommandStatus(commandLocation) {
      $.ajax(pollURL + '?location=' + commandLocation).done(function(data){
        if(data.state === 'success') {
          location.reload();
          return;
        }

        if(data.state === 'fail') {
          return displayError('An error occurred while installing the package.');
        }

        setTimeout(function() {
          pollCommandStatus(commandLocation);
        }, 3000);
      }).fail(displayError);
    }

    $('.confirmation-buttons a').on('click', function(e) {
      $('.modal-body').html('Processing your plugin, please wait ...').removeClass('text-danger');
      $('.modal-title').html('Processing');
      $('#download-status-modal').modal('show');

      // When installing a package, wait for process to finish
      if ($parentLink.hasClass('ajax')) {
        e.preventDefault();

        $.ajax($parentLink.attr('href')).done(function(data){
          if(data.state === 'progress') {
            return setTimeout(function() {
              pollCommandStatus(data.location);
            }, 3000);
          }

          location.reload();
        }).fail(displayError);

        return false;
      }
    });
  });
});

----------------------------------------

