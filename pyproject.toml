[project]
name = "accent-voice-2"
version = "0.1.0"
description = "Accent Voice Project"
requires-python = ">=3.9,<4.0"
readme = "README.md"
authors = [{ name = "Ryan Clark", email = "ryanc@accentservices.com" }]
dependencies = []

[dependency-groups]
dev = [
    "bandit>=1.7.5",
    "deptry>=0.12.0",
    "djlint>=1.30.0",
    "mypy>=1.8.0",
    "pytest-cov>=4.0.0",
    "pytest>=7.2.0",
    "refurb>=0.4.0",
    "ruff>=0.9.10",
    "tox>=4.0.0",
    "poethepoet>=0.33.0",
    "httpx>=0.28.1",
    "pydantic>=2.10.6",
    "validators>=0.34.0",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.7",
    "mkdocstrings[python]>=0.28.2",
]
test = [
    "httpx>=0.28.1",
]

[tool.uv.workspace]
members = [
    "library/accent-agentd-client",
    "library/accent-amid-client",
    "library/accent-applicationd-client",
    "library/accent-asterisk-doc-extractor",
    "library/accent-asyncio-ari-client",
    "library/accent-auth-client",
    "library/accent-auth-keys",
    "library/accent-bus",
    "library/accent-call-logd-client",
    "library/accent-calld-client",
    "library/accent-chatd-client",
    "library/accent-confd-client",
    "library/accent-confgend-client",
    "library/accent-config",
    "library/accent-dao",
    "library/accent-deployd-client",
    "library/accent-dird-client",
    "library/accent-fetchfw",
    "library/accent-lib-python",
    "library/accent-lib-rest-client",
    "library/accent-market-client",
    "library/accent-plugind-client",
    "library/accent-provd-client",
    "library/accent-setupd-client",
    "library/accent-test-helpers",
    "library/accent-uuid",
    "library/accent-webhookd-client",
    "library/accent-websocketd-client",
    "library/ari-py",
    "library/swagger-py",
    "service/accent-agentd-cli",
    "service/accent-agentd",
    "service/accent-agid",
    "service/accent-amid",
    "service/accent-auth-cli",
    "service/accent-auth",
    "service/accent-call-logd",
    "service/accent-calld",
    "service/accent-certs",
    "service/accent-chatd",
    "service/accent-confd-cli",
    "service/accent-confd",
    "service/accent-confgend",
    "service/accent-debug",
    "service/accent-dird",
    "service/accent-export-import",
    "service/accent-manage-db",
    "service/accent-phoned",
    "service/accent-plugind-cli",
    "service/accent-plugind",
    "service/accent-prometheus-exporter-plugin",
    "service/accent-provd-cli",
    "service/accent-provd-plugins",
    "service/accent-provd",
    "service/accent-purge-db",
    "service/accent-service",
    "service/accent-setupd",
    "service/accent-stat",
    "service/accent-ui",
    "service/accent-webhookd",
    "service/accent-websocketd",
    "service/accent-auth-conversion",
]

[tool.poe.tasks]
# run with eg `uv run poe fmt`
fmt = "ruff format ${PWD}"
lint = "ruff check --fix ${PWD}"
check = "basedpyright ${PWD}"
test = "pytest ${PWD}"
# run all the above
all = [ {ref="fmt"}, {ref="lint"}, {ref="check"}, {ref="test"} ]

echo = "echo ${PWD}"

"ci:fmt" = "ruff format --check ${PWD}"  # fail if not formatted
"ci:lint" = "ruff check ${PWD}"
