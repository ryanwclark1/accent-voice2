[tool.poetry]
name = "accent-ui"
version = "0.1.0"
description = ""
authors = ["Ryan Clark <ryanc@accentservices.com>"]
packages = [{ include = "accent_ui" }]
include = [
  "accent_ui/static/*",
  "accent_ui/templates/*",
  "accent_ui/translations/*",
  "accent_ui/plugins/*/static/*",
  "accent_ui/plugins/*/templates/*",
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
# fastapi = {version = "<1.0.0,>=0.114.2", extras = ["standard"]}
fastapi = { extras = ["standard"], version = "<1.0.0,>=0.114.2" }
python-multipart = "<1.0.0,>=0.0.7"
email-validator = "<3.0.0.0,>=2.1.0.post1"
passlib = { extras = ["bcrypt"], version = "<2.0.0,>=1.7.4" }
tenacity = "<9.0.0,>=8.2.3"
pydantic = ">2.0"
emails = "<1.0,>=0.6"
jinja2 = "<4.0.0,>=3.1.4"
httpx = "<1.0.0,>=0.25.1"
bcrypt = "^4.0.1"
pydantic-settings = "<3.0.0,>=2.2.1"
sentry-sdk = { extras = ["fastapi"], version = "<2.0.0,>=1.40.6" }
pyjwt = "<3.0.0,>=2.8.0"
accent-lib-rest-client = { path = "../../../library/accent-lib-rest-client" }
accent-amid-client = { path = "../../../library/accent-amid-client" }
accent-auth-client = { path = "../../../library/accent-auth-client" }
accent-call-logd-client = { path = "../../../library/accent-call-logd-client" }
accent-confd-client = { path = "../../../library/accent-confd-client" }
accent-dird-client = { path = "../../../library/accent-dird-client" }
accent-plugind-client = { path = "../../../library/accent-plugind-client" }
accent-provd-client = { path = "../../../library/accent-provd-client" }
accent-webhookd-client = { path = "../../../library/accent-webhookd-client" }
# accent = {path = "../../../library/accent-lib-python"}
sqlalchemy = "^2.0.36"
itsdangerous = "^2.2.0"
aiosqlite = "^0.20.0"
greenlet = "^3.1.1"


[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
deptry = "^0.6.4"
pre-commit = "^2.20.0"
tox = "^3.25.1"
gunicorn = "^21.2.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 99
fix = true

[tool.ruff.lint]
select = [
  "YTT", # flake8-2020
  "S",   # flake8-bandit
  "B",   # flake8-bugbear
  "A",   # flake8-builtins
  "C4",  # flake8-comprehensions
  "T10", # flake8-debugger
  "SIM", # flake8-simplify
  "I",   # isort
  "C90", # mccabe
  "E",   # pycodestyle
  "W",   # pycodestyle
  "F",   # pyflakes
  "PGH", # pygrep-hooks
  "UP",  # pyupgrade
  "RUF", # ruff
  "TRY", # tryceratops
]

ignore = [
  "E501", # LineTooLong
  "E731", # DoNotAssignLambda
  "E203", # Whitespace before ':'
  "W503", # Line break before binary operator
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["accent_ui"]

[tool.poetry.plugins."console_scripts"]
accent-ui = "accent_ui.bin.daemon:main"

[tool.poetry.plugins."accent_ui.plugins"]
access_feature = "accent_ui.plugins.access_feature.plugin:Plugin"
agent = "accent_ui.plugins.agent.plugin:Plugin"
application = "accent_ui.plugins.application.plugin:Plugin"
authentication = "accent_ui.plugins.authentication.plugin:Plugin"
call_filter = "accent_ui.plugins.call_filter.plugin:Plugin"
call_permission = "accent_ui.plugins.call_permission.plugin:Plugin"
call_pickup = "accent_ui.plugins.call_pickup.plugin:Plugin"
cdr = "accent_ui.plugins.cdr.plugin:Plugin"
cli = "accent_ui.plugins.cli.plugin:Plugin"
conference = "accent_ui.plugins.conference.plugin:Plugin"
context = "accent_ui.plugins.context.plugin:Plugin"
device = "accent_ui.plugins.device.plugin:Plugin"
dhcp = "accent_ui.plugins.dhcp.plugin:Plugin"
dird_profile = "accent_ui.plugins.dird_profile.plugin:Plugin"
dird_source = "accent_ui.plugins.dird_source.plugin:Plugin"
extension = "accent_ui.plugins.extension.plugin:Plugin"
external_auth = "accent_ui.plugins.external_auth.plugin:Plugin"
funckey = "accent_ui.plugins.funckey.plugin:Plugin"
general_settings = "accent_ui.plugins.general_settings.plugin:Plugin"
global_settings = "accent_ui.plugins.global_settings.plugin:Plugin"
group = "accent_ui.plugins.group.plugin:Plugin"
ha = "accent_ui.plugins.ha.plugin:Plugin"
hep = "accent_ui.plugins.hep.plugin:Plugin"
identity = "accent_ui.plugins.identity.plugin:Plugin"
incall = "accent_ui.plugins.incall.plugin:Plugin"
index = "accent_ui.plugins.index.plugin:Plugin"
ivr = "accent_ui.plugins.ivr.plugin:Plugin"
line = "accent_ui.plugins.line.plugin:Plugin"
moh = "accent_ui.plugins.moh.plugin:Plugin"
outcall = "accent_ui.plugins.outcall.plugin:Plugin"
paging = "accent_ui.plugins.paging.plugin:Plugin"
parking_lot = "accent_ui.plugins.parking_lot.plugin:Plugin"
phonebook = "accent_ui.plugins.phonebook.plugin:Plugin"
plugin = "accent_ui.plugins.plugin.plugin:Plugin"
provisioning = "accent_ui.plugins.provisioning.plugin:Plugin"
queue = "accent_ui.plugins.queue.plugin:Plugin"
rtp = "accent_ui.plugins.rtp.plugin:Plugin"
schedule = "accent_ui.plugins.schedule.plugin:Plugin"
sip_template = "accent_ui.plugins.sip_template.plugin:Plugin"
skill = "accent_ui.plugins.skill.plugin:Plugin"
skillrule = "accent_ui.plugins.skillrule.plugin:Plugin"
sound = "accent_ui.plugins.sound.plugin:Plugin"
switchboard = "accent_ui.plugins.switchboard.plugin:Plugin"
transport = "accent_ui.plugins.transport.plugin:Plugin"
trunk = "accent_ui.plugins.trunk.plugin:Plugin"
user = "accent_ui.plugins.user.plugin:Plugin"
voicemail = "accent_ui.plugins.voicemail.plugin:Plugin"
webhook = "accent_ui.plugins.webhook.plugin:Plugin"
