[project]
name = "accent-call-logd"
version = "0.1.0"
description = ""
authors = [{ name = "Ryan Clark", email = "ryanc@accentservices.com" }]
requires-python = ">=3.9"
dependencies = [
  "alembic>=1.13.0",
  "celery>=5.0.0, <5.0.3",
  "cheroot>=8.5.2",
  "flask>=1.1.2",
  "Flask-Cors>=3.0.9",
  "Flask-RESTful>=0.3.8",
  "itsdangerous>=1.1.0",
  "Jinja2>=2.11.3",
  "jsonpatch~=1.25",
  "kombu>=5.0.2",
  "markupsafe>=1.1.1",
  "marshmallow>=3.10.0",
  "psycopg",
  "python-dateutil>=2.8.1",
  "pytz~=2023.3.post1",
  "pyyaml>=6.0",
  "requests>=2.25.1",
  "setproctitle>=1.2.1",
  "sqlalchemy[asyncio]>=2.0.0",
  "SQLAlchemy-Utils>=0.37.2",
  "stevedore>=5.4.1",
  "tenacity>=8.0.1",
  "werkzeug>=1.0.1",
  "accent-bus",
  "accent-dao",
  "accent-lib-rest-client",
  "accent-auth-client",
  "accent",
  "accent-confd-client",
]

[project.scripts]
accent-call-logd = "accent_call_logd.main:main"
accent-call-logd-init-db = "accent_call_logd.init_db:main"
accent-call-logd-sync-db = "accent_call_logd.sync_db:main"
accent-call-logd-upgrade-db = "accent_call_logd.main:upgrade_db"
accent-call-logs = "accent_call_logd.main_sweep:main"

[project.entry-points."accent_call_logd.celery_tasks"]
recording_export = "accent_call_logd.plugins.cdr.celery_tasks:Plugin"

[project.entry-points."accent_call_logd.plugins"]
api = "accent_call_logd.plugins.api.plugin:Plugin"
cdr = "accent_call_logd.plugins.cdr.plugin:Plugin"
config = "accent_call_logd.plugins.config.plugin:Plugin"
export = "accent_call_logd.plugins.export.plugin:Plugin"
retention = "accent_call_logd.plugins.retention.plugin:Plugin"
status = "accent_call_logd.plugins.status.plugin:Plugin"
support_center = "accent_call_logd.plugins.support_center.plugin:Plugin"
tenant = "accent_call_logd.plugins.tenant.plugin:Plugin"

[project.entry-points."accent_purge_db.purgers"]
call-logs = "accent_call_logd.purger:CallLogsPurger"
exports = "accent_call_logd.purger:ExportsPurger"
recordings = "accent_call_logd.purger:RecordingsPurger"

[dependency-groups]
dev = ["pytest>=8.3.5"]

[tool.uv.sources]
accent-bus = { workspace = true }
accent-dao = { workspace = true }
accent-lib-rest-client = { workspace = true }
accent-auth-client = { workspace = true }
accent = { workspace = true }
accent-confd-client = { workspace = true }

[tool.hatch.build.targets.sdist]
include = ["accent_call_logd", "accent_call_logd/plugins/*/api.yml"]

[tool.hatch.build.targets.wheel]
include = ["accent_call_logd", "accent_call_logd/plugins/*/api.yml"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
