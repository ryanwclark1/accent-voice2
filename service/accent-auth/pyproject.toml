[project]
name = "accent-auth"
version = "0.1.0"
description = ""
authors = [{ name = "Ryan Clark", email = "ryanc@accentservices.com" }]
requires-python = ">=3.9,<4.0"
dependencies = [
  "alembic>=1.13.0,<2",
  "cheroot>=8.5.2,<9",
  "flask>=1.1.2,<2",
  "Flask-Cors>=3.0.10,<4",
  "Flask-HTTPAuth>=4.5.0,<5",
  "Flask-RESTful>=0.3.8,<0.4",
  "itsdangerous>=1.1.0,<2",
  "Jinja2>=2.11.3,<3",
  "jsonpatch~=1.25",
  "kombu>=5.0.2,<6",
  "markupsafe>=1.1.1,<2",
  "marshmallow>=3.10.0,<4",
  "netifaces>=0.10.9,<0.11",
  "psycopg2>=2.8.6,<3",
  "pysaml2>=7.5.0,<8",
  "python-consul>=1.1.0,<2",
  "python-ldap>=3.4.0,<4",
  "PyYAML>=5.3.1,<6",
  "requests>=2.25.1,<3",
  "requests-oauthlib>=1.3.1,<2",
  "SQLAlchemy>=1.3.0, <1.4.0",
  "stevedore>=4.0.2,<5",
  "tenacity>=8.0.1,<9",
  "Unidecode>=1.2.0,<2",
  "websocket-client>=1.3.2,<2",
  "werkzeug>=1.0.1,<2",
  "accent-bus",
  "accent-dao",
  "accent-lib-rest-client",
  "accent-auth-client",
  "accent",
]

[project.scripts]
accent-auth = "accent_auth.main:main"
accent-auth-bootstrap = "accent_auth.bootstrap:main"
accent-auth-init-db = "accent_auth.init_db:main"
accent-auth-upgrade-db = "accent_auth.main:upgrade_db"
accent-auth-wait = "accent_auth.wait:main"

[project.entry-points."accent_auth.backends"]
accent_user = "accent_auth.plugins.backends.accent_user:AccentUser"
ldap_user = "accent_auth.plugins.backends.ldap_user:LDAPUser"
broken_init = "accent_auth.plugins.backends.broken:BrokenInitBackend"
broken_verify_password = "accent_auth.plugins.backends.broken:BrokenVerifyPasswordBackend"

[project.entry-points."accent_auth.http"]
api = "accent_auth.plugins.http.api.plugin:Plugin"
backends = "accent_auth.plugins.http.backends.plugin:Plugin"
config = "accent_auth.plugins.http.config.plugin:Plugin"
email_confirm = "accent_auth.plugins.http.email_confirm.plugin:Plugin"
external = "accent_auth.plugins.http.external.plugin:Plugin"
group_policy = "accent_auth.plugins.http.group_policy.plugin:Plugin"
groups = "accent_auth.plugins.http.groups.plugin:Plugin"
idp = "accent_auth.plugins.http.idp.plugin:Plugin"
ldap_config = "accent_auth.plugins.http.ldap_config.plugin:Plugin"
password_reset = "accent_auth.plugins.http.password_reset.plugin:Plugin"
policies = "accent_auth.plugins.http.policies.plugin:Plugin"
saml = "accent_auth.plugins.http.saml.plugin:Plugin"
saml_config = "accent_auth.plugins.http.saml_config.plugin:Plugin"
sessions = "accent_auth.plugins.http.sessions.plugin:Plugin"
status = "accent_auth.plugins.http.status.plugin:Plugin"
tenants = "accent_auth.plugins.http.tenants.plugin:Plugin"
tokens = "accent_auth.plugins.http.tokens.plugin:Plugin"
user_email = "accent_auth.plugins.http.user_email.plugin:Plugin"
user_group = "accent_auth.plugins.http.user_group.plugin:Plugin"
user_policy = "accent_auth.plugins.http.user_policy.plugin:Plugin"
user_registration = "accent_auth.plugins.http.user_registration.plugin:Plugin"
user_session = "accent_auth.plugins.http.user_session.plugin:Plugin"
users = "accent_auth.plugins.http.users.plugin:Plugin"

[project.entry-points."accent_auth.external_auth"]
google = "accent_auth.plugins.external_auth.google.plugin:GooglePlugin"
microsoft = "accent_auth.plugins.external_auth.microsoft.plugin:MicrosoftPlugin"
mobile = "accent_auth.plugins.external_auth.mobile.plugin:Plugin"

[project.entry-points."accent_auth.metadata"]
default_user = "accent_auth.plugins.metadata.default_user:DefaultUser"
default_internal = "accent_auth.plugins.metadata.default_internal:DefaultInternal"
default_external_api = "accent_auth.plugins.metadata.default_external_api:DefaultExternalAPI"
user_admin_status = "accent_auth.plugins.metadata.user_admin_status:UserAdminStatus"

[dependency-groups]
dev = [
  "commitizen>=3.10.0,<4",
  "dunamai>=1.18.1,<2",
  "pytest>=7.2.0,<8",
  "pytest-cov>=4.0.0,<5",
  "deptry>=0.6.4,<0.7",
  "tox>=3.25.1,<4",
  "accent-test-helpers",
]

[tool.uv.sources]
accent-test-helpers = { path = "../../library/accent-test-helpers" }
accent-bus = { path = "../../library/accent-bus" }
accent-dao = { path = "../../library/accent-dao" }
accent-lib-rest-client = { workspace = true }
accent-auth-client = { path = "../../library/accent-auth-client" }
accent = { path = "../../library/accent-lib-python" }

[tool.hatch.build.targets.sdist]
include = [
  "accent_auth",
  "accent_auth/plugins/http/*/api.yml",
  "accent_auth/plugins/external_auth/*/api.yml",
]

[tool.hatch.build.targets.wheel]
include = [
  "accent_auth",
  "accent_auth/plugins/http/*/api.yml",
  "accent_auth/plugins/external_auth/*/api.yml",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py311"
line-length = 99
fix = true

[tool.ruff.lint]
select = [
  "YTT", # flake8-2020
  "S",   # flake8-bandit
  "B",   # flake8-bugbear
  "A",   # flake8-builtins
  "C4",  # flake8-comprehensions
  "T10", # flake8-debugger
  "SIM", # flake8-simplify
  "I",   # isort
  "C90", # mccabe
  "E",   # pycodestyle
  "W",   # pycodestyle
  "F",   # pyflakes
  "PGH", # pygrep-hooks
  "UP",  # pyupgrade
  "RUF", # ruff
  "TRY", # tryceratops
]

ignore = [
  "E501", # LineTooLong
  "E731", # DoNotAssignLambda
  "E203", # Whitespace before ':'
  "W503", # Line break before binary operator
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["UPDATE"]
