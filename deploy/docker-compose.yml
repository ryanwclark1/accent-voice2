x-ng-common:
  &ng-common
  env_file:
    - .env

services:

  nginx:
    <<: *ng-common
    image: nginx:latest
    container_name: nginx
    ports:
      - '127.0.0.1:8443:443'
      - '[::1]:8443:443'
    volumes:
      - ./etc/nginx-auth-shared.conf:/etc/nginx/accent-auth-shared.conf:ro
      - ./etc/nginx-calld-shared.conf:/etc/nginx/accent-calld-shared.conf:ro
      - ./etc/nginx-confd-shared.conf:/etc/nginx/accent-confd-shared.conf:ro
      - ./etc/nginx-no-auth-shared.conf:/etc/nginx/accent-no-auth-shared.conf:ro
      - ./etc/nginx.conf:/etc/nginx/conf.d/config.conf:ro
      - ./certs:/certs:ro
  #   depends_on:  # Avoid to fail container if host doesn't exist
  #     - agentd
  #     - amid
  #     - asterisk
  #     - auth
  #     - call-logd
  #     - calld
  #     - chatd
  #     - confd
  #     - dird
  #     - phoned
  #     # - provd
  #     - ui
  #     - webhookd
  #     - websocketd

  postgres:
    <<: *ng-common
    image: postgres:15  # Must use compatible version than the odbc_postgresql installed in asterisk container
    container_name: postgres
    expose:
      - 5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-accent}
      POSTGRES_USER: ${POSTGRES_USER:-asterisk}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret123}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d

  rabbitmq:
    <<: *ng-common
    container_name: rabbitmq
    image: rabbitmq:3.13-alpine
    expose:
      - 5672
    volumes:
      - tmp-rabbitmq:/var/lib/rabbitmq:rw
    # configs:
    #   - source: rabbit-plugins
    #     target: /etc/rabbitmq/enabled_plugins

  auth:
    <<: *ng-common
    container_name: auth
    image: accentcommunications/accent-auth:latest
    expose:
      - 9497
    volumes:
      - ./etc/accent-auth.yml:/etc/accent-auth/conf.d/config.yml:ro
      - type: bind
        source: ../library/accent-auth-keys/etc/accent-auth/conf.d/50-accent-default.yml
        target: /etc/accent-auth/conf.d/50-accent-default.yml
        read_only: true

  confd:
    <<: *ng-common
    image: accentcommunications/accent-confd:deploy
    container_name: confd
    expose:
      - 9486
    volumes:
      - ./etc/accent-confd.yml:/etc/accent-confd/conf.d/config.yml:ro
      - ./etc/accent-dao.yml:/etc/accent-dao/conf.d/config.yml:ro
      - ./bin/init-confd:/bin/accent-confd/init:ro
      - ./bin/init-helpers:/var/lib/accent/helpers:ro
      - accent-auth-keys:/var/lib/accent-auth-keys:ro
      - asterisk-autoprov:/etc/asterisk/pjsip.d:rw  # write 05-autoprov-wizard.conf
      - asterisk-doc:/var/lib/accent-confd/asterisk-doc:ro
      # PG populate script mounted vs installed in build
      - ../service/accent-manage-db/bin/pg-populate-db:/usr/lib/accent-manage-db/pg-populate-db
    entrypoint: ["/bin/accent-confd/init"]
    command: ["accent-confd"]

  provd:
    <<: *ng-common
    image: accentcommunications/accent-provd:deploy
    build:
      context: .
      dockerfile: Dockerfile-provd
    container_name: provd
    expose:
      - 8666
    volumes:
      - ./etc/accent-confgend-client.conf:/etc/accent-confgend-client/config.conf:ro
      - ./etc/accent-provd.yml:/etc/accent-provd/conf.d/config.yml:ro
      - ./bin/init-provd:/bin/accent-provd/init:ro
      - ./bin/init-helpers:/var/lib/accent/helpers:ro
      - accent-auth-keys:/var/lib/accent-auth-keys:ro
    entrypoint: ["/bin/accent-provd/init"]
    # command: ["/bin/bash", "-c", "tail -f /dev/null"]
    command: ["twistd", "--nodaemon", "--no_save", "--pidfile=", "accent-provd", "--stderr", "--verbose"]

  sysconfd:
    <<: *ng-common
    # image: accentcommunications/accent-sysconfd:deploy
    container_name: sysconfd
    build:
      context: ..
      dockerfile: ./deploy/Dockerfile-sysconfd-mock
    expose:
      - 8668

  webhookd:
    <<: *ng-common
    image: accentcommunications/accent-webhookd:deploy
    container_name: webhookd
    expose:
      - 9300
    volumes:
      - ./etc/accent-webhookd.yml:/etc/accent-webhookd/conf.d/config.yml:ro
      - ./bin/init-webhookd:/bin/accent-webhookd/init:ro
      - ./bin/init-helpers:/var/lib/accent/helpers:ro
      - accent-auth-keys:/var/lib/accent-auth-keys:ro
    entrypoint: ["/bin/accent-webhookd/init"]
    command: ["accent-webhookd"]

  asterisk:
    <<: *ng-common
    image: accentcommunications/accent-asterisk:deploy
    # build:
    #   context: ..
    #   dockerfile: ./deploy/Dockerfile-asterisk-dev
    #   args:
    #     GITHUB_TOKEN: ${GITHUB_TOKEN}
    # hostname: asterisk.accent-docker
    container_name: asterisk
    expose:
      - 5038  # AMI
      - 5039  # HTTP (ARI/AJAM)
    ports:
      # - 5038:5038  # AMI
      # - 5039:5039  # HTTP (ARI/AJAM)4
      - 5060:5060  # SIP
      - 5060:5060/udp  # SIP
      - 5061:5061  # SIP/TLS
      - 19980-20000:19980-20000/udp  # RTP
    volumes:
      - ./bin/init-helpers:/var/lib/accent/helpers:ro
      - ./bin/init-asterisk:/bin/asterisk/init:ro
      - ./etc/accent-confgend-client.conf:/etc/accent-confgend-client/config.conf:ro
      - ./etc/asterisk-http.conf:/etc/asterisk/http.d/02-docker.conf:ro
      - ./etc/asterisk-extensions.conf:/etc/asterisk/extensions.d/02-docker.conf:ro
      - ./etc/asterisk-odbc.ini:/etc/odbc.ini:ro
      - ./etc/asterisk-res_odbc.conf:/etc/asterisk/res_odbc.d/02-docker.conf:ro
      - ./etc/asterisk-manager.conf:/etc/asterisk/manager.d/999-docker.conf:ro
      - ./etc/accent-asterisk-config.conf:/etc/systemd/system/asterisk.service.d/accent-asterisk-config.conf
      - ./etc/accent-res-stasis-amqp.conf:/etc/systemd/system/asterisk.service.d/accent-res-stasis-amqp.conf
      - ./etc/asterisk.service:/etc/systemd/system/asterisk.service
      - ../library/accent-asterisk-config/etc/asterisk:/etc/accent-asterisk-config/etc/asterisk
      - asterisk-autoprov:/etc/asterisk/pjsip.d:rw
      - asterisk-doc:/usr/share/asterisk/documentation:rw
      - asterisk-voicemail:/var/spool/asterisk/voicemail:rw
      # accent-config has too much dependencies to be installed in the container
      - type: bind
        source: ../library/accent-config/etc/accent/asterisk
        target: /etc/accent/asterisk
        read_only: true
      - type: bind
        source: ../library/accent-config/dialplan/asterisk
        target: /usr/share/accent-config/dialplan/asterisk
        read_only: true
    secrets:
      - github_token
    entrypoint: ["/bin/asterisk/init"]
    command: ["asterisk", "-fTvvv"]


  confgend:
    <<: *ng-common
    image: accentcommunications/accent-confgend:latest
    container_name: confgend
    expose:
      - 8669
    volumes:
      - ./etc/accent-confgend.yml:/etc/accent-confgend/conf.d/config.yml:ro

  agid:
    <<: *ng-common
    image: accentcommunications/accent-agid:latest
    container_name: agid
    expose:
      - 4573
    volumes:
      - ./bin/init-helpers:/var/lib/accent/helpers:ro
      - ./bin/init-agid:/bin/accent-agid/init:ro
      - ./etc/accent-agid.yml:/etc/accent-agid/conf.d/config.yml:ro
      - accent-auth-keys:/var/lib/accent-auth-keys:ro
      # accent-config has too much dependencies to be installed in the container
      - type: bind
        source: ../library/accent-config/etc/accent
        target: /etc/accent
        read_only: true
    entrypoint: ["/bin/accent-agid/init"]
    command: ["accent-agid"]

  dird:
    <<: *ng-common
    image: accentcommunications/accent-dird:deploy
    container_name: dird
    expose:
      - 9489
    volumes:
      - ./bin/init-helpers:/var/lib/accent/helpers:ro
      - ./bin/init-dird:/bin/accent-dird/init:ro
      - ./etc/accent-dird.yml:/etc/accent-dird/conf.d/config.yml:ro
      - accent-auth-keys:/var/lib/accent-auth-keys:ro
    entrypoint: ["/bin/accent-dird/init"]
    command: ["accent-dird"]

  amid:
    <<: *ng-common
    image: accentcommunications/accent-amid:latest
    container_name: amid
    expose:
      - 9491
    volumes:
      - ./bin/init-helpers:/var/lib/accent/helpers:ro
      - ./bin/init-amid:/bin/accent-amid/init:ro
      - ./etc/accent-amid.yml:/etc/accent-amid/conf.d/config.yml:ro
      - accent-auth-keys:/var/lib/accent-auth-keys:ro
    entrypoint: ["/bin/accent-amid/init"]
    command: ["accent-amid"]


  call-logd:
    <<: *ng-common
    image: accentcommunications/accent-call-logd:latest
    container_name: call-logd
    # build:
    #   context: ..
    #   dockerfile: ./service/accent-call-logd/Dockerfile-debug
    expose:
      - 9298
    volumes:
      - ./bin/init-helpers:/var/lib/accent/helpers:ro
      - ./bin/init-call-logd:/bin/accent-call-logd/init:ro
      - ./etc/accent-call-logd.yml:/etc/accent-call-logd/conf.d/config.yml:ro
      - accent-auth-keys:/var/lib/accent-auth-keys:ro
    entrypoint: ["/bin/accent-call-logd/init"]
    command: ["accent-call-logd", "--db-upgrade-on-startup"]

  chatd:
    <<: *ng-common
    image: accentcommunications/accent-chatd:deploy
    build:
      context: .
      dockerfile: Dockerfile-chatd
    container_name: chatd
    expose:
      - 9304
    volumes:
      - ./bin/init-helpers:/var/lib/accent/helpers:ro
      - ./bin/init-chatd:/bin/accent-chatd/init:ro
      - ./etc/accent-chatd.yml:/etc/accent-chatd/conf.d/config.yml:ro
      - accent-auth-keys:/var/lib/accent-auth-keys:ro
    entrypoint: ["/bin/accent-chatd/init"]
    command: ["accent-chatd"]

  phoned:
    <<: *ng-common
    image: accentcommunications/accent-phoned:latest
    container_name: phoned
    expose:
      - 9304
    volumes:
      - ./bin/init-helpers:/var/lib/accent/helpers:ro
      - ./bin/init-phoned:/bin/accent-phoned/init:ro
      - ./etc/accent-phoned.yml:/etc/accent-phoned/conf.d/config.yml:ro
      - accent-auth-keys:/var/lib/accent-auth-keys:ro
    entrypoint: ["/bin/accent-phoned/init"]
    command: ["accent-phoned"]

  websocketd:
    <<: *ng-common
    image: accentcommunications/accent-websocketd:deploy
    container_name: websocketd
    expose:
      - 9502
    volumes:
      - ./etc/accent-websocketd.yml:/etc/accent-websocketd/conf.d/config.yml:ro
      - ./bin/init-websocketd:/bin/accent-websocketd/init:ro
      - ./bin/init-helpers:/var/lib/accent/helpers:ro
      - accent-auth-keys:/var/lib/accent-auth-keys:ro
    entrypoint: ["/bin/accent-websocketd/init"]
    command: ["accent-websocketd"]

  calld:
    <<: *ng-common
    # tty: true
    image: accentcommunications/accent-calld:latest
    container_name: calld
    expose:
      - 9491
    volumes:
      - asterisk-voicemail:/var/spool/asterisk/voicemail:rw
      - ./etc/accent-calld.yml:/etc/accent-calld/conf.d/config.yml:ro
      - ./bin/init-calld:/bin/accent-calld/init:ro
      - ./bin/init-helpers:/var/lib/accent/helpers:ro
      - accent-auth-keys:/var/lib/accent-auth-keys:ro
    entrypoint: ["/bin/accent-calld/init"]
    command: ["accent-calld"]

  agentd:
    <<: *ng-common
    image: accentcommunications/accent-agentd:latest
    container_name: agentd
    expose:
      - 9493
    volumes:
      - ./etc/accent-agentd.yml:/etc/accent-agentd/conf.d/config.yml:ro
      - ./bin/init-agentd:/bin/accent-agentd/init:ro
      - ./bin/init-helpers:/var/lib/accent/helpers:ro
      - accent-auth-keys:/var/lib/accent-auth-keys:ro
    entrypoint: ["/bin/accent-agentd/init"]
    command: ["accent-agentd"]

  # ui-dev:
  #   <<: *ng-common
  #   build:
  #     context: ../service/accent-ui
  #     dockerfile: ./.devcontainer/Dockerfile
  #   container_name: ui-dev
  #   ports:
  #     - 9297:9296
  #   volumes:
  #     - ./etc/accent-ui.yml:/etc/accent-ui/conf.d/config.yml:ro
  #     - ../:/workspaces:cached
  #   command: sleep infinity

  ui:
    <<: *ng-common
    image: accentcommunications/accent-ui:latest
    container_name: ui
    # expose:
    #   - 9296
    ports:
      - 9296:9296
    volumes:
      - ./etc/accent-ui.yml:/etc/accent-ui/conf.d/config.yml:ro

  bootstrap:
    <<: *ng-common
    image: accentcommunications/accent-bootstrap:deploy
    container_name: bootstrap
    build:
      context: .
      dockerfile: Dockerfile-bootstrap
    volumes:
      - ./bin/init-bootstrap:/bin/platform-bootstrap/init:ro
      - ./etc/accent-auth-cli.yml:/etc/accent-auth-cli/conf.d/config.yml:ro
      - accent-auth-keys:/var/lib/accent-auth-keys:rw
      - type: bind
        source: ../library/accent-auth-keys/etc/accent-auth-keys/config.yml
        target: /etc/accent-auth-keys/config.yml
        read_only: true
    entrypoint:
      - /bin/platform-bootstrap/init

secrets:
  github_token:
    file: $HOME/.gh/token

volumes:
  pgdata:
  accent-auth-keys:
  asterisk-autoprov:
  asterisk-doc:
  asterisk-voicemail:
  tmp-rabbitmq:
